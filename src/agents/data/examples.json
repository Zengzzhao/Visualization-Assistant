[
    {
        "name": "Simple Bar Chart",
        "description": "A bar chart encodes quantitative values as the extent of rectangular bars.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple bar chart with embedded data.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},\n      {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"nominal\", \"axis\": {\"labelAngle\": 0}},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Histogram",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"bin\": true,\n      \"field\": \"IMDB Rating\"\n    },\n    \"y\": {\"aggregate\": \"count\"}\n  }\n}"
    },
    {
        "name": "Scatterplot",
        "description": "A scatterplot showing horsepower and miles per gallons for various cars.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A scatterplot showing horsepower and miles per gallons for various cars.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Line Chart",
        "description": "Google\u2019s stock price over time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Google's stock price over time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol==='GOOG'\"}],\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Area Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 300,\n  \"height\": 200,\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonth\", \"field\": \"date\",\n      \"axis\": {\"format\": \"%Y\"}\n    },\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"count\",\n      \"title\": \"count\"\n    }\n  }\n}"
    },
    {
        "name": "Table Heatmap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"rect\",\n  \"encoding\": {\n    \"y\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n    \"x\": {\"field\": \"Cylinders\", \"type\": \"ordinal\"},\n    \"color\": {\"aggregate\": \"mean\", \"field\": \"Horsepower\"}\n  },\n  \"config\": {\n    \"axis\": {\"grid\": true, \"tickBand\": \"extent\"}\n  }\n}"
    },
    {
        "name": "Pie Chart",
        "description": "A pie chart encodes proportional differences among a set of numeric values as the angular extent and area of a circular slice.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple pie chart with embedded data.\",\n  \"data\": {\n    \"values\": [\n      {\"category\": 1, \"value\": 4},\n      {\"category\": 2, \"value\": 6},\n      {\"category\": 3, \"value\": 10},\n      {\"category\": 4, \"value\": 3},\n      {\"category\": 5, \"value\": 7},\n      {\"category\": 6, \"value\": 8}\n    ]\n  },\n  \"mark\": \"arc\",\n  \"encoding\": {\n    \"theta\": {\"field\": \"value\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"category\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Relative Bar Chart (Calculate Percentage of Total)",
        "description": "A bar graph showing what activites consume what percentage of the day.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar graph showing what activites consume what percentage of the day.\",\n  \"data\": {\n    \"values\": [\n      {\"Activity\": \"Sleeping\", \"Time\": 8},\n      {\"Activity\": \"Eating\", \"Time\": 2},\n      {\"Activity\": \"TV\", \"Time\": 4},\n      {\"Activity\": \"Work\", \"Time\": 8},\n      {\"Activity\": \"Exercise\", \"Time\": 2}\n    ]\n  },\n  \"transform\": [{\n    \"joinaggregate\": [{\n      \"op\": \"sum\",\n      \"field\": \"Time\",\n      \"as\": \"TotalTime\"\n    }]\n  },\n  {\n    \"calculate\": \"datum.Time/datum.TotalTime * 100\",\n    \"as\": \"PercentOfTotal\"\n  }],\n  \"height\": {\"step\": 12},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"PercentOfTotal\",\n      \"type\": \"quantitative\",\n      \"title\": \"% of total Time\"\n    },\n    \"y\": {\"field\": \"Activity\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Error Bars Showing Confidence Interval",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"encoding\": {\"y\": {\"field\": \"variety\", \"type\": \"ordinal\"}},\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"point\", \"filled\": true},\n      \"encoding\": {\n        \"x\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"yield\",\n          \"type\": \"quantitative\",\n          \"scale\": {\"zero\": false},\n          \"title\": \"Barley Yield\"\n        },\n        \"color\": {\"value\": \"black\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"errorbar\", \"extent\": \"ci\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"yield\", \"type\": \"quantitative\", \"title\": \"Barley Yield\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Box Plot with Min/Max Whiskers",
        "description": "A vertical box plot showing median, min, and max body mass of penguins.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A vertical box plot showing median, min, and max body mass of penguins.\",\n  \"data\": {\"url\": \"data/penguins.json\"},\n  \"mark\": {\n    \"type\": \"boxplot\",\n    \"extent\": \"min-max\"\n  },\n  \"encoding\": {\n    \"x\": {\"field\": \"Species\", \"type\": \"nominal\"},\n    \"color\": {\"field\": \"Species\", \"type\": \"nominal\", \"legend\": null},\n    \"y\": {\n      \"field\": \"Body Mass (g)\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    }\n  }\n}"
    },
    {
        "name": "Simple Bar Chart with Labels",
        "description": "Bar chart with text labels. Set domain to make the frame cover the labels.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Bar chart with text labels. Set domain to make the frame cover the labels.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28},\n      {\"a\": \"B\", \"b\": 55},\n      {\"a\": \"C\", \"b\": 43}\n    ]\n  },\n  \"encoding\": {\n    \"y\": {\"field\": \"a\", \"type\": \"nominal\"},\n    \"x\": {\"field\": \"b\", \"type\": \"quantitative\", \"scale\": {\"domain\": [0, 60]}}\n  },\n  \"layer\": [{\n    \"mark\": \"bar\"\n  }, {\n    \"mark\": {\n      \"type\": \"text\",\n      \"align\": \"left\",\n      \"baseline\": \"middle\",\n      \"dx\": 3\n    },\n    \"encoding\": {\n      \"text\": {\"field\": \"b\", \"type\": \"quantitative\"}\n    }\n  }]\n}"
    },
    {
        "name": "Candlestick Chart",
        "description": "A candlestick chart inspired by an example in Protovis (http://mbostock.github.io/protovis/ex/candlestick.html)",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 400,\n  \"description\": \"A candlestick chart inspired by an example in Protovis (http://mbostock.github.io/protovis/ex/candlestick.html)\",\n  \"data\": {\"url\": \"data/ohlc.json\"},\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"date\",\n      \"type\": \"temporal\",\n      \"title\": \"Date in 2009\",\n      \"axis\": {\n        \"format\": \"%m/%d\",\n        \"labelAngle\": -45,\n        \"title\": \"Date in 2009\"\n      }\n    },\n    \"y\": {\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false},\n      \"axis\": {\"title\": \"Price\"}\n    },\n    \"color\": {\n      \"condition\": {\n        \"test\": \"datum.open &lt; datum.close\",\n        \"value\": \"#06982d\"\n      },\n      \"value\": \"#ae1325\"\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\"field\": \"low\"},\n        \"y2\": {\"field\": \"high\"}\n      }\n    },\n    {\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"y\": {\"field\": \"open\"},\n        \"y2\": {\"field\": \"close\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Trellis Bar Chart",
        "description": "A trellis bar chart showing the US population distribution of age groups and gender in 2000.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A trellis bar chart showing the US population distribution of age groups and gender in 2000.\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"}\n  ],\n  \"width\": {\"step\": 17},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"row\": {\"field\": \"gender\"},\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"people\",\n      \"title\": \"population\"\n    },\n    \"x\": {\"field\": \"age\"},\n    \"color\": {\n      \"field\": \"gender\",\n      \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]}\n    }\n  }\n}"
    },
    {
        "name": "Repeat and Layer to Show Different Movie Measures",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"repeat\": {\n    \"layer\": [\"US Gross\", \"Worldwide Gross\"]\n  },\n  \"spec\": {\n    \"mark\": \"line\",\n    \"encoding\": {\n      \"x\": {\n        \"bin\": true,\n        \"field\": \"IMDB Rating\",\n        \"type\": \"quantitative\"\n      },\n      \"y\": {\n        \"aggregate\": \"mean\",\n        \"field\": {\"repeat\": \"layer\"},\n        \"type\": \"quantitative\",\n        \"title\": \"Mean of US and Worldwide Gross\"\n      },\n      \"color\": {\n        \"datum\": {\"repeat\": \"layer\"},\n        \"type\": \"nominal\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Choropleth of Unemployment Rate per County",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 500,\n  \"height\": 300,\n  \"data\": {\n    \"url\": \"data/us-10m.json\",\n    \"format\": {\n      \"type\": \"topojson\",\n      \"feature\": \"counties\"\n    }\n  },\n  \"transform\": [{\n    \"lookup\": \"id\",\n    \"from\": {\n      \"data\": {\n        \"url\": \"data/unemployment.tsv\"\n      },\n      \"key\": \"id\",\n      \"fields\": [\"rate\"]\n    }\n  }],\n  \"projection\": {\n    \"type\": \"albersUsa\"\n  },\n  \"mark\": \"geoshape\",\n  \"encoding\": {\n    \"color\": {\n      \"field\": \"rate\",\n      \"type\": \"quantitative\"\n    }\n  }\n}"
    },
    {
        "name": "Bar Chart with Highlighting on Hover and Selection on Click",
        "description": "A bar chart with highlighting on hover and selecting on click. (Inspired by Tableau\u2019s interaction style.)",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart with highlighting on hover and selecting on click. (Inspired by Tableau's interaction style.)\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": 43},\n      {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": 19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"params\": [\n    {\n      \"name\": \"highlight\",\n      \"select\": {\"type\": \"point\", \"on\": \"pointerover\"}\n    },\n    {\"name\": \"select\", \"select\": \"point\"}\n  ],\n  \"mark\": {\n    \"type\": \"bar\",\n    \"fill\": \"#4C78A8\",\n    \"stroke\": \"black\",\n    \"cursor\": \"pointer\"\n  },\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n    \"fillOpacity\": {\n      \"condition\": {\"param\": \"select\", \"value\": 1},\n      \"value\": 0.3\n    },\n    \"strokeWidth\": {\n      \"condition\": [\n        {\n          \"param\": \"select\",\n          \"empty\": false,\n          \"value\": 2\n        },\n        {\n          \"param\": \"highlight\",\n          \"empty\": false,\n          \"value\": 1\n        }\n      ],\n      \"value\": 0\n    }\n  },\n  \"config\": {\n    \"scale\": {\n      \"bandPaddingInner\": 0.2\n    }\n  }\n}"
    },
    {
        "name": "Overview and Detail",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/sp500.csv\"},\n  \"vconcat\": [{\n    \"width\": 480,\n    \"mark\": \"area\",\n    \"encoding\": {\n      \"x\": {\n        \"field\": \"date\",\n        \"type\": \"temporal\",\n        \"scale\": {\"domain\": {\"param\": \"brush\"}},\n        \"axis\": {\"title\": \"\"}\n      },\n      \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n    }\n  }, {\n    \"width\": 480,\n    \"height\": 60,\n    \"mark\": \"area\",\n    \"params\": [{\n      \"name\": \"brush\",\n      \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n    }],\n    \"encoding\": {\n      \"x\": {\n        \"field\": \"date\",\n        \"type\": \"temporal\"\n      },\n      \"y\": {\n        \"field\": \"price\",\n        \"type\": \"quantitative\",\n        \"axis\": {\"tickCount\": 3, \"grid\": false}\n      }\n    }\n  }]\n}"
    },
    {
        "name": "Responsive Bar Chart",
        "description": "The bar gets automatically resized based on container size. To see how the bar gets automatically resized try this in the editor.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": \"container\",\n  \"height\": 250,\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Origin\"},\n    \"y\": {\"aggregate\": \"count\", \"title\": \"Number of Cars\"}\n  }\n}"
    },
    {
        "name": "Histogram (from Binned Data)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"bin_start\": 8, \"bin_end\": 10, \"count\": 7},\n      {\"bin_start\": 10, \"bin_end\": 12, \"count\": 29},\n      {\"bin_start\": 12, \"bin_end\": 14, \"count\": 71},\n      {\"bin_start\": 14, \"bin_end\": 16, \"count\": 127},\n      {\"bin_start\": 16, \"bin_end\": 18, \"count\": 94},\n      {\"bin_start\": 18, \"bin_end\": 20, \"count\": 54},\n      {\"bin_start\": 20, \"bin_end\": 22, \"count\": 17},\n      {\"bin_start\": 22, \"bin_end\": 24, \"count\": 5}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"bin_start\",\n      \"bin\": {\"binned\": true, \"step\": 2}\n    },\n    \"x2\": {\"field\": \"bin_end\"},\n    \"y\": {\n      \"field\": \"count\",\n      \"type\": \"quantitative\"\n    }\n  }\n}"
    },
    {
        "name": "1D Strip Plot",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"mark\": \"tick\",\n  \"encoding\": {\n    \"x\": {\"field\": \"precipitation\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Line Chart with Point Markers",
        "description": "By setting the point property of the line mark definition to an object defining a property of the overlaying point marks, we can overlay point markers on top of line. Notes: (1) This is equivalent to adding another layer of point marks. (2) While &quot;point&quot; marks are normally semi-transparent, the overlay point marker has opacity = 1 by default.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": {\n    \"type\": \"line\",\n    \"point\": true\n  },\n  \"encoding\": {\n    \"x\": {\"timeUnit\": \"year\", \"field\": \"date\"},\n    \"y\": {\"aggregate\":\"mean\", \"field\": \"price\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Area Chart with Gradient",
        "description": "Google\u2019s stock price over time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Google's stock price over time.\",\n  \"data\": {\n    \"url\": \"data/stocks.csv\"\n  },\n  \"transform\": [\n    {\n      \"filter\": \"datum.symbol==='GOOG'\"\n    }\n  ],\n  \"mark\": {\n    \"type\": \"area\",\n    \"line\": {\n      \"color\": \"darkgreen\"\n    },\n    \"color\": {\n      \"x1\": 1,\n      \"y1\": 1,\n      \"x2\": 1,\n      \"y2\": 0,\n      \"gradient\": \"linear\",\n      \"stops\": [\n        {\n          \"offset\": 0,\n          \"color\": \"white\"\n        },\n        {\n          \"offset\": 1,\n          \"color\": \"darkgreen\"\n        }\n      ]\n    }\n  },\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"date\",\n      \"type\": \"temporal\"\n    },\n    \"y\": {\n      \"field\": \"price\",\n      \"type\": \"quantitative\"\n    }\n  }\n}"
    },
    {
        "name": "Annual Weather Heatmap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n      \"url\": \"data/seattle-weather.csv\"\n  },\n  \"title\": \"Daily Max Temperatures (C) in Seattle, WA\",\n  \"config\": {\n      \"view\": {\n          \"strokeWidth\": 0,\n          \"step\": 13\n      },\n      \"axis\": {\n          \"domain\": false\n      }\n  },\n  \"mark\": \"rect\",\n  \"encoding\": {\n      \"x\": {\n          \"field\": \"date\",\n          \"timeUnit\": \"date\",\n          \"type\": \"ordinal\",\n          \"title\": \"Day\",\n          \"axis\": {\n              \"labelAngle\": 0,\n              \"format\": \"%e\"\n          }\n      },\n      \"y\": {\n          \"field\": \"date\",\n          \"timeUnit\": \"month\",\n          \"type\": \"ordinal\",\n          \"title\": \"Month\"\n      },\n      \"color\": {\n          \"field\": \"temp_max\",\n          \"aggregate\": \"max\",\n          \"type\": \"quantitative\",\n          \"legend\": {\n              \"title\": null\n          }\n      }\n  }\n}"
    },
    {
        "name": "Pie Chart with percentage_tooltip",
        "description": "A pie chart with a tooltip that shows the percentage covered by the hovered slice.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Pie Chart with percentage_tooltip\",\n  \"data\": {\n    \"values\": [\n      {\"category\": 1, \"value\": 4},\n      {\"category\": 2, \"value\": 6},\n      {\"category\": 3, \"value\": 10},\n      {\"category\": 4, \"value\": 3},\n      {\"category\": 5, \"value\": 7},\n      {\"category\": 6, \"value\": 8}\n    ]\n  },\n  \"mark\": {\"type\": \"arc\", \"tooltip\": true},\n  \"encoding\": {\n    \"theta\": {\"field\": \"value\", \"type\": \"quantitative\", \"stack\": \"normalize\"},\n    \"color\": {\"field\": \"category\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Calculate Difference from Average",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"transform\": [\n    {\"filter\": \"datum['IMDB Rating'] != null\"},\n    {\n      \"joinaggregate\": [{\n        \"op\": \"mean\",\n        \"field\": \"IMDB Rating\",\n        \"as\": \"AverageRating\"\n      }]\n    },\n    {\"filter\": \"(datum['IMDB Rating'] - datum.AverageRating) &gt; 2.5\"}\n  ],\n  \"layer\": [\n    {\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"IMDB Rating\", \"type\": \"quantitative\",\n          \"title\": \"IMDB Rating\"\n        },\n        \"y\": {\"field\": \"Title\", \"type\": \"ordinal\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"rule\", \"color\": \"red\"},\n      \"encoding\": {\n        \"x\": {\n          \"aggregate\": \"average\",\n          \"field\": \"AverageRating\",\n          \"type\": \"quantitative\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Error Bars Showing Standard Deviation",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"encoding\": {\"y\": {\"field\": \"variety\", \"type\": \"ordinal\"}},\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"point\", \"filled\": true},\n      \"encoding\": {\n        \"x\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"yield\",\n          \"type\": \"quantitative\",\n          \"scale\": {\"zero\": false},\n          \"title\": \"Barley Yield\"\n        },\n        \"color\": {\"value\": \"black\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"errorbar\", \"extent\": \"stdev\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"yield\", \"type\": \"quantitative\", \"title\": \"Barley Yield\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Simple Bar Chart with Labels and Emojis",
        "description": "Vega-Lite version of bar chart from https://observablehq.com/@d3/learn-d3-scales.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Vega-Lite version of bar chart from https://observablehq.com/@d3/learn-d3-scales.\",\n  \"width\": 400,\n  \"data\": {\n    \"values\": [\n      {\"name\": \"\ud83c\udf4a\", \"count\": 21},\n      {\"name\": \"\ud83c\udf47\", \"count\": 13},\n      {\"name\": \"\ud83c\udf4f\", \"count\": 8},\n      {\"name\": \"\ud83c\udf4c\", \"count\": 5},\n      {\"name\": \"\ud83c\udf50\", \"count\": 3},\n      {\"name\": \"\ud83c\udf4b\", \"count\": 2},\n      {\"name\": \"\ud83c\udf4e\", \"count\": 1},\n      {\"name\": \"\ud83c\udf49\", \"count\": 1}\n    ]\n  },\n  \"encoding\": {\n    \"y\": {\"field\": \"name\", \"type\": \"nominal\", \"sort\": \"-x\", \"title\": null},\n    \"x\": {\"field\": \"count\", \"type\": \"quantitative\", \"title\": null}\n  },\n  \"layer\": [{\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"color\": {\n        \"field\": \"count\",\n        \"type\": \"quantitative\",\n        \"title\": \"Number of fruit\"\n      }\n    }\n  }, {\n    \"mark\": {\n      \"type\": \"text\",\n      \"align\": \"right\",\n      \"xOffset\": -4,\n      \"aria\": false\n    },\n    \"encoding\": {\n      \"text\": {\"field\": \"count\", \"type\": \"quantitative\"},\n      \"color\": {\n        \"condition\": {\n          \"test\": {\"field\": \"count\", \"gt\": 10},\n          \"value\": \"white\"\n        },\n        \"value\": \"black\"\n      }\n    }\n  }]\n}"
    },
    {
        "name": "Ranged Dot Plot",
        "description": "A ranged dot plot that uses \u2018layer\u2019 to convey changing life expectancy for the five most populous countries (between 1955 and 2000).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A ranged dot plot that uses 'layer' to convey changing life expectancy for the five most populous countries (between 1955 and 2000).\",\n  \"data\": {\"url\": \"data/countries.json\"},\n  \"transform\": [\n    {\n      \"filter\": {\n        \"field\": \"country\",\n        \"oneOf\": [\"China\", \"India\", \"United States\", \"Indonesia\", \"Brazil\"]\n      }\n    },\n    {\n      \"filter\": {\n        \"field\": \"year\",\n        \"oneOf\": [1955, 2000]\n      }\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"life_expect\",\n      \"type\": \"quantitative\",\n      \"title\": \"Life Expectancy (years)\"\n    },\n    \"y\": {\n      \"field\": \"country\",\n      \"type\": \"nominal\",\n      \"title\": \"Country\",\n      \"axis\": {\n        \"offset\": 5,\n        \"ticks\": false,\n        \"minExtent\": 70,\n        \"domain\": false\n      }\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"detail\": {\n          \"field\": \"country\",\n          \"type\": \"nominal\"\n        },\n        \"color\": {\"value\": \"#db646f\"}\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"point\",\n        \"filled\": true\n      },\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"year\",\n          \"type\": \"ordinal\",\n          \"scale\": {\n            \"domain\": [1955, 2000],\n            \"range\": [\"#e6959c\", \"#911a24\"]\n          },\n          \"title\": \"Year\"\n        },\n        \"size\": {\"value\": 100},\n        \"opacity\": {\"value\": 1}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Trellis Stacked Bar Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"column\": {\"field\": \"year\"},\n    \"x\": {\"field\": \"yield\", \"type\": \"quantitative\", \"aggregate\": \"sum\"},\n    \"y\": {\"field\": \"variety\", \"type\": \"nominal\"},\n    \"color\": {\"field\": \"site\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Vertical Concatenation",
        "description": "Two vertically concatenated charts",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Two vertically concatenated charts that show a histogram of precipitation in Seattle and the relationship between min and max temperature.\",\n  \"data\": {\n    \"url\": \"data/weather.csv\"\n  },\n  \"transform\": [{\n    \"filter\": \"datum.location === 'Seattle'\"\n  }],\n  \"vconcat\": [\n    {\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"timeUnit\": \"month\",\n          \"field\": \"date\",\n          \"type\": \"ordinal\"\n        },\n        \"y\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"precipitation\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"temp_min\",\n          \"type\": \"quantitative\",\n          \"bin\": true\n        },\n        \"y\": {\n          \"field\": \"temp_max\",\n          \"type\": \"quantitative\",\n          \"bin\": true\n        },\n        \"size\": {\n          \"aggregate\": \"count\",\n          \"type\": \"quantitative\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "One Dot per Zipcode in the U.S.",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 500,\n  \"height\": 300,\n  \"data\": {\n    \"url\": \"data/zipcodes.csv\"\n  },\n  \"transform\": [{\"calculate\": \"substring(datum.zip_code, 0, 1)\", \"as\": \"digit\"}],\n  \"projection\": {\n    \"type\": \"albersUsa\"\n  },\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"longitude\": {\n      \"field\": \"longitude\",\n      \"type\": \"quantitative\"\n    },\n    \"latitude\": {\n      \"field\": \"latitude\",\n      \"type\": \"quantitative\"\n    },\n    \"size\": {\"value\": 1},\n    \"color\": {\"field\": \"digit\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Histogram with Full-Height Hover Targets for Tooltip",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"layer\": [\n    {\n      \"params\": [\n        {\n          \"name\": \"hover\",\n          \"select\": {\"type\": \"point\", \"on\": \"pointerover\", \"clear\": \"pointerout\"}\n        }\n      ],\n      \"mark\": {\"type\": \"bar\", \"color\": \"#eee\", \"tooltip\": true},\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": \"IMDB Rating\"},\n        \"opacity\": {\n          \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 0.5},\n          \"value\": 0\n        },\n        \"detail\": [{\"aggregate\": \"count\"}]\n      }\n    },\n    {\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": \"IMDB Rating\"},\n        \"y\": {\"aggregate\": \"count\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Tukey Box Plot (1.5 IQR)",
        "description": "A vertical box plot showing median and lower and upper quartiles of the distribution of body mass of penguins.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A vertical box plot showing median and lower and upper quartiles of the distribution of body mass of penguins.\",\n  \"data\": {\"url\": \"data/penguins.json\"},\n  \"mark\": \"boxplot\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Species\", \"type\": \"nominal\"},\n    \"color\": {\"field\": \"Species\", \"type\": \"nominal\", \"legend\": null},\n    \"y\": {\n      \"field\": \"Body Mass (g)\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    }\n  }\n}"
    },
    {
        "name": "Crossfilter (Filter)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/flights-2k.json\",\n    \"format\": {\"parse\": {\"date\": \"date\"}}\n  },\n  \"transform\": [{\"calculate\": \"hours(datum.date)\", \"as\": \"time\"}],\n  \"repeat\": {\"column\": [\"distance\", \"delay\", \"time\"]},\n  \"spec\": {\n    \"layer\": [{\n      \"params\": [{\n        \"name\": \"brush\",\n        \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n      }],\n      \"transform\": [{\"filter\": {\"param\": \"brush\"}}],\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": {\"repeat\": \"column\"},\n          \"bin\": {\"maxbins\": 20}\n        },\n        \"y\": {\"aggregate\": \"count\", \"axis\": null}\n      }\n    }]\n  }\n}"
    },
    {
        "name": "Aggregate Bar Chart",
        "description": "A bar chart showing the US population distribution of age groups in 2000.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart showing the US population distribution of age groups in 2000.\",\n  \"height\": {\"step\": 17},\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [{\"filter\": \"datum.year == 2000\"}],\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"y\": {\"field\": \"age\"},\n    \"x\": {\n      \"aggregate\": \"sum\", \"field\": \"people\",\n      \"title\": \"population\"\n    }\n  }\n}"
    },
    {
        "name": "Log-scaled Histogram",
        "description": "Log-scaled Histogram. We may improve the support of this. See https://github.com/vega/vega-lite/issues/4792.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Log-scaled Histogram.  We may improve the support of this. See https://github.com/vega/vega-lite/issues/4792.\",\n  \"data\": {\n    \"values\": [\n      {\"x\": 0.01},\n      {\"x\": 0.1},\n      {\"x\": 1},\n      {\"x\": 1},\n      {\"x\": 1},\n      {\"x\": 1},\n      {\"x\": 10},\n      {\"x\": 10},\n      {\"x\": 100},\n      {\"x\": 500},\n      {\"x\": 800}\n    ]\n  },\n  \"transform\": [{\n      \"calculate\": \"log(datum.x)/log(10)\", \"as\": \"log_x\"\n  }, {\n      \"bin\": true,\n      \"field\": \"log_x\",\n      \"as\": \"bin_log_x\"\n  }, {\n    \"calculate\": \"pow(10, datum.bin_log_x)\", \"as\": \"x1\"\n  }, {\n    \"calculate\": \"pow(10, datum.bin_log_x_end)\", \"as\": \"x2\"\n  }],\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"x1\",\n      \"scale\": {\"type\": \"log\", \"base\": 10},\n      \"axis\": {\"tickCount\": 5}\n    },\n    \"x2\": {\"field\": \"x2\"},\n    \"y\": {\"aggregate\": \"count\"}\n  }\n}"
    },
    {
        "name": "Strip Plot",
        "description": "Shows the relationship between horsepower and the number of cylinders using tick marks.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Shows the relationship between horsepower and the number of cylinders using tick marks.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"tick\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Cylinders\", \"type\": \"ordinal\"}\n  }\n}"
    },
    {
        "name": "Line Chart with Stroked Point Markers",
        "description": "By setting the point property of the line mark definition to an object defining a property of the overlaying point marks, we can overlay point markers on top of line. Here we create stroked points by setting their &quot;filled&quot; to false and their fill to &quot;white&quot;. Notes: (1) This is equivalent to adding another layer of point marks. (2) While &quot;point&quot; marks are normally semi-transparent, the overlay point marker has opacity = 1 by default.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": {\n    \"type\": \"line\",\n    \"point\": {\n      \"filled\": false,\n      \"fill\": \"white\"\n    }\n  },\n  \"encoding\": {\n    \"x\": {\"timeUnit\": \"year\", \"field\": \"date\"},\n    \"y\": {\"aggregate\":\"mean\", \"field\": \"price\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Area Chart with Overlaying Lines and Point Markers",
        "description": "Google\u2019s stock price over time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Google's stock price over time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol==='GOOG'\"}],\n  \"mark\": {\"type\": \"area\", \"line\": true, \"point\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "2D Histogram Heatmap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"transform\": [{\n    \"filter\": {\"and\": [\n      {\"field\": \"IMDB Rating\", \"valid\": true},\n      {\"field\": \"Rotten Tomatoes Rating\", \"valid\": true}\n    ]}\n  }],\n  \"mark\": \"rect\",\n  \"width\": 300,\n  \"height\": 200,\n  \"encoding\": {\n    \"x\": {\n      \"bin\": {\"maxbins\":60},\n      \"field\": \"IMDB Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\n      \"bin\": {\"maxbins\": 40},\n      \"field\": \"Rotten Tomatoes Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\n      \"aggregate\": \"count\",\n      \"type\": \"quantitative\"\n    }\n  },\n  \"config\": {\n    \"view\": {\n      \"stroke\": \"transparent\"\n    }\n  }\n}"
    },
    {
        "name": "Donut Chart",
        "description": "A donut chart encodes proportional differences among a set of numeric values using angular extents.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple donut chart with embedded data.\",\n  \"data\": {\n    \"values\": [\n      {\"category\": 1, \"value\": 4},\n      {\"category\": 2, \"value\": 6},\n      {\"category\": 3, \"value\": 10},\n      {\"category\": 4, \"value\": 3},\n      {\"category\": 5, \"value\": 7},\n      {\"category\": 6, \"value\": 8}\n    ]\n  },\n  \"mark\": {\"type\": \"arc\", \"innerRadius\": 50},\n  \"encoding\": {\n    \"theta\": {\"field\": \"value\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"category\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Calculate Difference from Annual Average",
        "description": "Bar graph showing the best films for the year they were produced, where best is defined by at least 2.5 points above average for that year. The red point shows the average rating for a film in that year, and the bar is the rating that the film recieved.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Bar graph showing the best films for the year they were produced, where best is defined by at least 2.5 points above average for that year. The red point shows the average rating for a film in that year, and the bar is the rating that the film recieved.\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"transform\": [\n      {\"filter\": \"datum['IMDB Rating'] != null\"},\n      {\"timeUnit\": \"year\", \"field\": \"Release Date\", \"as\": \"year\"},\n      {\n        \"joinaggregate\": [{\n          \"op\": \"mean\",\n          \"field\": \"IMDB Rating\",\n          \"as\": \"AverageYearRating\"\n        }],\n        \"groupby\": [\n          \"year\"\n        ]\n      },\n      {\n        \"filter\": \"(datum['IMDB Rating'] - datum.AverageYearRating) &gt; 2.5\"\n      }\n  ],\n  \"layer\": [{\n      \"mark\": {\"type\": \"bar\", \"clip\": true},\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"IMDB Rating\",\n          \"type\": \"quantitative\",\n          \"title\": \"IMDB Rating\"\n        },\n        \"y\": {\n          \"field\": \"Title\",\n          \"type\": \"ordinal\"\n        }\n      }\n    },\n    {\n      \"mark\": \"tick\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"AverageYearRating\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"Title\",\n          \"type\": \"ordinal\"\n        },\n        \"color\": {\"value\": \"red\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Line Chart with Confidence Interval Band",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Year\",\n      \"timeUnit\": \"year\"\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"errorband\", \"extent\": \"ci\"},\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"Miles_per_Gallon\",\n          \"type\": \"quantitative\",\n          \"title\": \"Mean of Miles per Gallon (95% CIs)\"\n        }\n      }\n    },\n    {\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"y\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"Miles_per_Gallon\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Box Plot with Pre-Calculated Summaries",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n   \"title\": \"Body Mass of Penguin Species (g)\",\n  \"data\": {\n    \"values\": [{\n      \"Species\": \"Adelie\",\n      \"lower\": 2850,\n      \"q1\": 3350,\n      \"median\": 3700,\n      \"q3\": 4000,\n      \"upper\": 4775,\n      \"outliers\": []\n    },{\n      \"Species\": \"Chinstrap\",\n      \"lower\": 2700,\n      \"q1\": 3487.5,\n      \"median\": 3700,\n      \"q3\": 3950,\n      \"upper\": 4800,\n      \"outliers\": [2700,4800]\n    },{\n      \"Species\": \"Gentoo\",\n      \"lower\": 3950,\n      \"q1\": 4700,\n      \"median\": 5000,\n      \"q3\": 5500,\n      \"upper\": 6300,\n      \"outliers\": []\n    }]\n  },\n  \"encoding\": {\"y\": {\"field\": \"Species\", \"type\": \"nominal\", \"title\": null}},\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"rule\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"lower\", \"type\": \"quantitative\",\"scale\": {\"zero\": false}, \"title\": null},\n        \"x2\": {\"field\": \"upper\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 14},\n      \"encoding\": {\n        \"x\": {\"field\": \"q1\", \"type\": \"quantitative\"},\n        \"x2\": {\"field\": \"q3\"},\n        \"color\": {\"field\": \"Species\", \"type\": \"nominal\", \"legend\": null}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"tick\", \"color\": \"white\", \"size\": 14},\n      \"encoding\": {\n        \"x\": {\"field\": \"median\", \"type\": \"quantitative\"}\n      }\n    },\n    {\n      \"transform\": [{\"flatten\": [\"outliers\"]}],\n      \"mark\": {\"type\": \"point\", \"style\": \"boxplot-outliers\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"outliers\", \"type\": \"quantitative\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Layering text over heatmap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [\n    {\n      \"aggregate\": [{\"op\": \"count\", \"as\": \"num_cars\"}],\n      \"groupby\": [\"Origin\", \"Cylinders\"]\n    }\n  ],\n  \"encoding\": {\n    \"y\": {\"field\": \"Origin\", \"type\": \"ordinal\"},\n    \"x\": {\"field\": \"Cylinders\", \"type\": \"ordinal\"}\n  },\n  \"layer\": [\n    {\n      \"mark\": \"rect\",\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"num_cars\",\n          \"type\": \"quantitative\",\n          \"title\": \"Count of Records\",\n          \"legend\": {\"direction\": \"horizontal\", \"gradientLength\": 120}\n        }\n      }\n    },\n    {\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"num_cars\", \"type\": \"quantitative\"},\n        \"color\": {\n          \"condition\": {\"test\": \"datum['num_cars'] &lt; 40\", \"value\": \"black\"},\n          \"value\": \"white\"\n        }\n      }\n    }\n  ],\n  \"config\": {\n    \"axis\": {\"grid\": true, \"tickBand\": \"extent\"}\n  }\n}"
    },
    {
        "name": "Bullet Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"title\":\"Revenue\", \"subtitle\":\"US$, in thousands\", \"ranges\":[150,225,300],\"measures\":[220,270],\"markers\":[250]},\n      {\"title\":\"Profit\", \"subtitle\":\"%\", \"ranges\":[20,25,30],\"measures\":[21,23],\"markers\":[26]},\n      {\"title\":\"Order Size\", \"subtitle\":\"US$, average\", \"ranges\":[350,500,600],\"measures\":[100,320],\"markers\":[550]},\n      {\"title\":\"New Customers\", \"subtitle\":\"count\", \"ranges\":[1400,2000,2500],\"measures\":[1000,1650],\"markers\":[2100]},\n      {\"title\":\"Satisfaction\", \"subtitle\":\"out of 5\", \"ranges\":[3.5,4.25,5],\"measures\":[3.2,4.7],\"markers\":[4.4]}\n    ]\n  },\n  \"facet\": {\n    \"row\": {\n      \"field\": \"title\", \"type\": \"ordinal\",\n      \"header\": {\"labelAngle\": 0, \"title\": \"\"}\n    }\n  },\n  \"spacing\": 10,\n  \"spec\": {\n    \"encoding\": {\n      \"x\": {\n        \"type\": \"quantitative\",\n        \"scale\": {\"nice\": false},\n        \"title\": null\n      }\n    },\n    \"layer\": [{\n      \"mark\": {\"type\": \"bar\", \"color\": \"#eee\"},\n      \"encoding\": {\"x\": {\"field\": \"ranges[2]\"}}\n    },{\n      \"mark\": {\"type\": \"bar\", \"color\": \"#ddd\"},\n      \"encoding\": {\"x\": {\"field\": \"ranges[1]\"}}\n    },{\n      \"mark\": {\"type\": \"bar\", \"color\": \"#ccc\"},\n      \"encoding\": {\"x\": {\"field\": \"ranges[0]\"}}\n    },{\n      \"mark\": {\"type\": \"bar\", \"color\": \"lightsteelblue\", \"size\": 10},\n      \"encoding\": {\"x\": {\"field\": \"measures[1]\"}}\n    },{\n      \"mark\": {\"type\": \"bar\", \"color\": \"steelblue\", \"size\": 10},\n      \"encoding\": {\"x\": {\"field\": \"measures[0]\"}}\n    },{\n      \"mark\": {\"type\": \"tick\", \"color\": \"black\"},\n      \"encoding\": {\"x\": {\"field\": \"markers[0]\"}}\n    }]\n  },\n  \"resolve\": {\"scale\": {\"x\": \"independent\"}},\n  \"config\": {\"tick\": {\"thickness\": 2}, \"scale\": {\"barBandPaddingInner\": 0}}\n}"
    },
    {
        "name": "Trellis Scatter Plot (wrapped)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"mark\": \"point\",\n\n  \"encoding\": {\n    \"facet\": {\"field\": \"MPAA Rating\", \"type\": \"ordinal\", \"columns\": 2},\n    \"x\": {\"field\": \"Worldwide Gross\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"US DVD Sales\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Horizontally Repeated Charts",
        "description": "Horizontally repeated charts that show the histograms of different parameters of cars in different countries.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"repeat\": [\"Horsepower\", \"Miles_per_Gallon\", \"Acceleration\", \"Displacement\"],\n  \"columns\": 2,\n  \"spec\": {\n    \"data\": {\"url\": \"data/cars.json\"},\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\"field\": {\"repeat\": \"repeat\"}, \"bin\": true},\n      \"y\": {\"aggregate\": \"count\"},\n      \"color\": {\"field\": \"Origin\"}\n    }\n  }\n}"
    },
    {
        "name": "One Dot per Airport in the U.S. Overlayed on Geoshape",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 500,\n  \"height\": 300,\n  \"layer\": [\n    {\n      \"data\": {\n        \"url\": \"data/us-10m.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"states\"\n        }\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"fill\": \"lightgray\",\n        \"stroke\": \"white\"\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/airports.csv\"\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"longitude\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"latitude\",\n          \"type\": \"quantitative\"\n        },\n        \"size\": {\"value\": 10},\n        \"color\": {\"value\": \"steelblue\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Interactive Legend",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 300, \"height\": 200,\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"mark\": \"area\",\n  \"params\": [{\n    \"name\": \"industry\",\n    \"select\": {\"type\": \"point\", \"fields\": [\"series\"]},\n    \"bind\": \"legend\"\n  }],\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonth\", \"field\": \"date\",\n      \"axis\": {\"domain\": false, \"format\": \"%Y\", \"tickSize\": 0}\n    },\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"count\",\n      \"stack\": \"center\", \"axis\": null\n    },\n    \"color\": {\n      \"field\":\"series\",\n      \"scale\": {\"scheme\": \"category20b\"}\n    },\n    \"opacity\": {\n      \"condition\": {\"param\": \"industry\", \"value\": 1},\n      \"value\": 0.2\n    }\n  }\n}"
    },
    {
        "name": "Crossfilter (Highlight)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/flights-2k.json\",\n    \"format\": {\"parse\": {\"date\": \"date\"}}\n  },\n  \"transform\": [{\"calculate\": \"hours(datum.date)\", \"as\": \"time\"}],\n  \"repeat\": {\"column\": [\"distance\", \"delay\", \"time\"]},\n  \"spec\": {\n    \"layer\": [{\n      \"params\": [{\n        \"name\": \"brush\",\n        \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n      }],\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": {\"repeat\": \"column\"},\n          \"bin\": {\"maxbins\": 20}\n        },\n        \"y\": {\"aggregate\": \"count\"},\n        \"color\": {\"value\": \"#ddd\"}\n      }\n    }, {\n      \"transform\": [{\"filter\": {\"param\": \"brush\"}}],\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": {\"repeat\": \"column\"},\n          \"bin\": {\"maxbins\": 20}\n        },\n        \"y\": {\"aggregate\": \"count\"}\n      }\n    }]\n  }\n}"
    },
    {
        "name": "Aggregate Bar Chart (Sorted)",
        "description": "A bar chart that sorts the y-values by the x-values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart that sorts the y-values by the x-values.\",\n  \"data\": {\"url\": \"data/population.json\"},\n  \"transform\": [{\"filter\": \"datum.year == 2000\"}],\n  \"height\": {\"step\": 17},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"age\",\n      \"type\": \"ordinal\",\n      \"sort\": \"-x\"\n    },\n    \"x\": {\n      \"aggregate\": \"sum\",\n      \"field\": \"people\",\n      \"title\": \"population\"\n    }\n  }\n}"
    },
    {
        "name": "Colored Scatterplot",
        "description": "A scatterplot showing body mass and flipper lengths of penguins.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A scatterplot showing body mass and flipper lengths of penguins.\",\n  \"data\": {\n    \"url\": \"data/penguins.json\"\n  },\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Flipper Length (mm)\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"y\": {\n      \"field\": \"Body Mass (g)\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"color\": {\"field\": \"Species\", \"type\": \"nominal\"},\n    \"shape\": {\"field\": \"Species\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Multi Series Line Chart",
        "description": "Stock prices of 5 Tech Companies over Time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Stacked Area Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 300, \"height\": 200,\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonth\", \"field\": \"date\",\n      \"axis\": {\"format\": \"%Y\"}\n    },\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"count\"\n    },\n    \"color\": {\n      \"field\": \"series\",\n      \"scale\": {\"scheme\": \"category20b\"}\n    }\n  }\n}"
    },
    {
        "name": "Table Bubble Plot (Github Punch Card)",
        "description": "Punchcard Visualization like on Github. The day on y-axis uses a custom order from Monday to Sunday. The sort property supports both full day names (e.g., \u2018Monday\u2019) and their three letter initials (e.g., \u2018mon\u2019) \u2013 both of which are case insensitive.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Punchcard Visualization like on Github. The day on y-axis uses a custom order from Monday to Sunday.  The sort property supports both full day names (e.g., 'Monday') and their three letter initials (e.g., 'mon') -- both of which are case insensitive.\",\n  \"data\": { \"url\": \"data/github.csv\"},\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"time\",\n      \"type\": \"ordinal\",\n      \"timeUnit\": \"day\",\n      \"sort\": [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"]\n    },\n    \"x\": {\n      \"field\": \"time\",\n      \"type\": \"ordinal\",\n      \"timeUnit\": \"hours\"\n    },\n    \"size\": {\n      \"field\": \"count\",\n      \"type\": \"quantitative\",\n      \"aggregate\": \"sum\"\n    }\n  }\n}"
    },
    {
        "name": "Pie Chart with Labels",
        "description": "Layering text over arc marks to label pie charts. For now, you need to add stack: true to theta to force the text to apply the same polar stacking layout.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple pie chart with labels.\",\n  \"data\": {\n    \"values\": [\n      {\"category\": \"a\", \"value\": 4},\n      {\"category\": \"b\", \"value\": 6},\n      {\"category\": \"c\", \"value\": 10},\n      {\"category\": \"d\", \"value\": 3},\n      {\"category\": \"e\", \"value\": 7},\n      {\"category\": \"f\", \"value\": 8}\n    ]\n  },\n  \"encoding\": {\n    \"theta\": {\"field\": \"value\", \"type\": \"quantitative\", \"stack\": true},\n    \"color\": {\"field\": \"category\", \"type\": \"nominal\", \"legend\": null}\n  },\n  \"layer\": [{\n    \"mark\": {\"type\": \"arc\", \"outerRadius\": 80}\n  }, {\n    \"mark\": {\"type\": \"text\", \"radius\": 90},\n    \"encoding\": {\n      \"text\": {\"field\": \"category\", \"type\": \"nominal\"}\n    }\n  }]\n}"
    },
    {
        "name": "Calculate Residuals",
        "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"transform\": [\n    {\"filter\": \"datum['IMDB Rating'] != null\"},\n    {\"filter\": {\"timeUnit\": \"year\", \"field\": \"Release Date\", \"range\": [null, 2019]}},\n    {\n      \"joinaggregate\": [{\n        \"op\": \"mean\",\n        \"field\": \"IMDB Rating\",\n        \"as\": \"AverageRating\"\n      }]\n    },\n    {\n      \"calculate\": \"datum['IMDB Rating'] - datum.AverageRating\",\n      \"as\": \"RatingDelta\"\n    }\n  ],\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Release Date\",\n      \"type\": \"temporal\"\n    },\n    \"y\": {\n      \"field\": \"RatingDelta\",\n      \"type\": \"quantitative\",\n      \"title\": \"Rating Delta\"\n    },\n    \"color\": {\n      \"field\": \"RatingDelta\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"domainMid\": 0},\n      \"title\": \"Rating Delta\"\n    }\n  }\n}"
    },
    {
        "name": "Scatterplot with Mean and Standard Deviation Overlay",
        "description": "A scatterplot showing horsepower and miles per gallons for various cars.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A scatterplot showing horsepower and miles per gallons for various cars.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"layer\": [\n    {\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n        \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"errorband\", \"extent\": \"stdev\", \"opacity\": 0.2},\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"Miles_per_Gallon\",\n          \"type\": \"quantitative\",\n          \"title\": \"Miles per Gallon\"\n        }\n      }\n    },\n    {\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"Miles_per_Gallon\",\n          \"type\": \"quantitative\",\n          \"aggregate\": \"mean\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Carbon Dioxide in the Atmosphere",
        "description": "This example was inspired by Gregor Aisch\u2019s Carbon Dioxide Concentration By Decade.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/co2-concentration.csv\",\n    \"format\": {\"parse\": {\"Date\": \"utc:'%Y-%m-%d'\"}}\n  },\n  \"width\": 800,\n  \"height\": 500,\n  \"transform\": [\n    {\"calculate\": \"year(datum.Date)\", \"as\": \"year\"},\n    {\"calculate\": \"floor(datum.year / 10)\", \"as\": \"decade\"},\n    {\n      \"calculate\": \"(datum.year % 10) + (month(datum.Date)/12)\",\n      \"as\": \"scaled_date\"\n    },\n    {\n      \"calculate\": \"datum.first_date === datum.scaled_date ? 'first' : datum.last_date === datum.scaled_date ? 'last' : null\",\n      \"as\": \"end\"\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\n      \"type\": \"quantitative\",\n      \"title\": \"Year into Decade\",\n      \"axis\": {\"tickCount\": 11}\n    },\n    \"y\": {\n      \"title\": \"CO2 concentration in ppm\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"color\": {\n      \"field\": \"decade\",\n      \"type\": \"ordinal\",\n      \"scale\": {\"scheme\": \"magma\"},\n      \"legend\": null\n    }\n  },\n\n  \"layer\": [\n    {\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"x\": {\"field\": \"scaled_date\"},\n        \"y\": {\"field\": \"CO2\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"baseline\": \"top\", \"aria\": false},\n      \"encoding\": {\n        \"x\": {\"aggregate\": \"min\", \"field\": \"scaled_date\"},\n        \"y\": {\"aggregate\": {\"argmin\": \"scaled_date\"}, \"field\": \"CO2\"},\n        \"text\": {\"aggregate\": {\"argmin\": \"scaled_date\"}, \"field\": \"year\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"aria\": false},\n      \"encoding\": {\n        \"x\": {\"aggregate\": \"max\", \"field\": \"scaled_date\"},\n        \"y\": {\"aggregate\": {\"argmax\": \"scaled_date\"}, \"field\": \"CO2\"},\n        \"text\": {\"aggregate\": {\"argmax\": \"scaled_date\"}, \"field\": \"year\"}\n      }\n    }\n  ],\n  \"config\": {\"text\": {\"align\": \"left\", \"dx\": 3, \"dy\": 1}}\n}"
    },
    {
        "name": "Layered Plot with Dual-Axis",
        "description": "A dual axis chart, created by setting y\u2019s scale resolution to &quot;independent&quot;",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A dual axis chart, created by setting y's scale resolution to `\\\"independent\\\"`\",\n  \"width\": 400, \"height\": 300,\n  \"data\": {\n    \"url\": \"data/weather.csv\"\n  },\n  \"transform\": [{\"filter\": \"datum.location == \\\"Seattle\\\"\"}],\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"month\",\n      \"field\": \"date\",\n      \"axis\": {\"format\": \"%b\", \"title\": null}\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"opacity\": 0.3, \"type\": \"area\", \"color\": \"#85C5A6\"},\n      \"encoding\": {\n        \"y\": {\n          \"aggregate\": \"average\",\n          \"field\": \"temp_max\",\n          \"scale\": {\"domain\": [0, 30]},\n          \"title\": \"Avg. Temperature (\u00b0C)\",\n          \"axis\": {\"titleColor\": \"#85C5A6\"}\n        },\n\n        \"y2\": {\n          \"aggregate\": \"average\",\n          \"field\": \"temp_min\"\n        }\n      }\n    },\n    {\n      \"mark\": {\"stroke\": \"#85A9C5\", \"type\": \"line\", \"interpolate\": \"monotone\"},\n      \"encoding\": {\n        \"y\": {\n          \"aggregate\": \"average\",\n          \"field\": \"precipitation\",\n          \"title\": \"Precipitation (inches)\",\n          \"axis\": {\"titleColor\":\"#85A9C5\"}\n        }\n      }\n    }\n  ],\n  \"resolve\": {\"scale\": {\"y\": \"independent\"}}\n}"
    },
    {
        "name": "Trellis Histograms",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"bin\": {\"maxbins\": 15},\n      \"field\": \"Horsepower\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\n      \"aggregate\": \"count\",\n      \"type\": \"quantitative\"\n    },\n    \"row\": {\"field\": \"Origin\"}\n  }\n}"
    },
    {
        "name": "Interactive Scatterplot Matrix",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"repeat\": {\n    \"row\": [\"Horsepower\", \"Acceleration\", \"Miles_per_Gallon\"],\n    \"column\": [\"Miles_per_Gallon\", \"Acceleration\", \"Horsepower\"]\n  },\n  \"spec\": {\n    \"data\": {\"url\": \"data/cars.json\"},\n    \"mark\": \"point\",\n    \"params\": [\n      {\n        \"name\": \"brush\",\n        \"select\": {\n          \"type\": \"interval\",\n          \"resolve\": \"union\",\n          \"on\": \"[pointerdown[event.shiftKey], window:pointerup] &gt; window:pointermove!\",\n          \"translate\": \"[pointerdown[event.shiftKey], window:pointerup] &gt; window:pointermove!\",\n          \"zoom\": \"wheel![event.shiftKey]\"\n        }\n      },\n      {\n        \"name\": \"grid\",\n        \"select\": {\n          \"type\": \"interval\",\n          \"resolve\": \"global\",\n          \"translate\": \"[pointerdown[!event.shiftKey], window:pointerup] &gt; window:pointermove!\",\n          \"zoom\": \"wheel![!event.shiftKey]\"\n        },\n        \"bind\": \"scales\"\n      }\n    ],\n    \"encoding\": {\n      \"x\": {\"field\": {\"repeat\": \"column\"}, \"type\": \"quantitative\"},\n      \"y\": {\n        \"field\": {\"repeat\": \"row\"},\n        \"type\": \"quantitative\",\n        \"axis\": {\"minExtent\": 30}\n      },\n      \"color\": {\n        \"condition\": {\n          \"param\": \"brush\",\n          \"field\": \"Origin\",\n          \"type\": \"nominal\"\n        },\n        \"value\": \"grey\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Rules (line segments) Connecting SEA to every Airport Reachable via Direct Flights",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 800,\n  \"height\": 500,\n  \"layer\": [\n    {\n      \"data\": {\n        \"url\": \"data/us-10m.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"states\"\n        }\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"fill\": \"lightgray\",\n        \"stroke\": \"white\"\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/airports.csv\"\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"longitude\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"latitude\",\n          \"type\": \"quantitative\"\n        },\n        \"size\": {\"value\": 5},\n        \"color\": {\"value\": \"gray\"}\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/flights-airport.csv\"\n      },\n      \"transform\": [\n        {\"filter\": {\"field\": \"origin\", \"equal\": \"SEA\"}},\n        {\n          \"lookup\": \"origin\",\n          \"from\": {\n            \"data\": {\n              \"url\": \"data/airports.csv\"\n            },\n            \"key\": \"iata\",\n            \"fields\": [\"latitude\", \"longitude\"]\n          },\n          \"as\": [\"origin_latitude\", \"origin_longitude\"]\n        },\n        {\n          \"lookup\": \"destination\",\n          \"from\": {\n            \"data\": {\n              \"url\": \"data/airports.csv\"\n            },\n            \"key\": \"iata\",\n            \"fields\": [\"latitude\", \"longitude\"]\n          },\n          \"as\": [\"dest_latitude\", \"dest_longitude\"]\n        }\n      ],\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"origin_longitude\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"origin_latitude\",\n          \"type\": \"quantitative\"\n        },\n        \"longitude2\": {\"field\": \"dest_longitude\"},\n        \"latitude2\": {\"field\": \"dest_latitude\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Scatterplot with External Links and Tooltips",
        "description": "A scatterplot showing horsepower and miles per gallons that opens a Google search for the car that you click on.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A scatterplot showing horsepower and miles per gallons that opens a Google search for the car that you click on.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"point\",\n  \"transform\": [{\n    \"calculate\": \"'https://www.google.com/search?q=' + datum.Name\", \"as\": \"url\"\n  }],\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n    \"tooltip\": {\"field\": \"Name\", \"type\": \"nominal\"},\n    \"href\": {\"field\": \"url\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Grouped Bar Chart",
        "description": "Read here for more details about how to set step size for grouped bar.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"category\":\"A\", \"group\": \"x\", \"value\":0.1},\n      {\"category\":\"A\", \"group\": \"y\", \"value\":0.6},\n      {\"category\":\"A\", \"group\": \"z\", \"value\":0.9},\n      {\"category\":\"B\", \"group\": \"x\", \"value\":0.7},\n      {\"category\":\"B\", \"group\": \"y\", \"value\":0.2},\n      {\"category\":\"B\", \"group\": \"z\", \"value\":1.1},\n      {\"category\":\"C\", \"group\": \"x\", \"value\":0.6},\n      {\"category\":\"C\", \"group\": \"y\", \"value\":0.1},\n      {\"category\":\"C\", \"group\": \"z\", \"value\":0.2}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"category\"},\n    \"y\": {\"field\": \"value\", \"type\": \"quantitative\"},\n    \"xOffset\": {\"field\": \"group\"},\n    \"color\": {\"field\": \"group\"}\n  }\n}"
    },
    {
        "name": "Relative Frequency Histogram",
        "description": "Relative frequency histogram. The data is binned with first transform. The number of values per bin and the total number are calculated in the second and third transform to calculate the relative frequency in the last transformation step.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Relative frequency histogram. The data is binned with first transform. The number of values per bin and the total number are calculated in the second and third transform to calculate the relative frequency in the last transformation step.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [{\n      \"bin\": true, \"field\": \"Horsepower\", \"as\": \"bin_Horsepwoer\"\n    }, {\n      \"aggregate\": [{\"op\": \"count\", \"as\": \"Count\"}],\n      \"groupby\": [\"bin_Horsepwoer\", \"bin_Horsepwoer_end\"]\n    }, {\n      \"joinaggregate\": [{\"op\": \"sum\", \"field\": \"Count\", \"as\": \"TotalCount\"}]\n    }, {\n      \"calculate\": \"datum.Count/datum.TotalCount\", \"as\": \"PercentOfTotal\"\n    }\n  ],\n  \"mark\": {\"type\": \"bar\", \"tooltip\": true},\n  \"encoding\": {\n    \"x\": {\n      \"title\": \"Horsepower\",\n      \"field\": \"bin_Horsepwoer\",\n      \"bin\": {\"binned\": true}\n    },\n    \"x2\": {\"field\": \"bin_Horsepwoer_end\"},\n    \"y\": {\n      \"title\": \"Relative Frequency\",\n      \"field\": \"PercentOfTotal\",\n      \"type\": \"quantitative\",\n      \"axis\": {\n        \"format\": \".1~%\"\n        }\n    }\n  }\n}"
    },
    {
        "name": "2D Histogram Scatterplot",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"x\": {\n      \"bin\": {\"maxbins\": 10},\n      \"field\": \"IMDB Rating\"\n    },\n    \"y\": {\n      \"bin\": {\"maxbins\": 10},\n      \"field\": \"Rotten Tomatoes Rating\"\n    },\n    \"size\": {\"aggregate\": \"count\"}\n  }\n}"
    },
    {
        "name": "Multi Series Line Chart with Repeat Operator",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"repeat\": {\n    \"layer\": [\"US Gross\", \"Worldwide Gross\"]\n  },\n  \"spec\": {\n    \"mark\": \"line\",\n    \"encoding\": {\n      \"x\": {\n        \"bin\": true,\n        \"field\": \"IMDB Rating\",\n        \"type\": \"quantitative\"\n      },\n      \"y\": {\n        \"aggregate\": \"mean\",\n        \"field\": {\"repeat\": \"layer\"},\n        \"type\": \"quantitative\",\n        \"title\": \"Mean of US and Worldwide Gross\"\n      },\n      \"color\": {\n        \"datum\": {\"repeat\": \"layer\"},\n        \"type\": \"nominal\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Normalized Stacked Area Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"width\": 300, \"height\": 200,\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonth\", \"field\": \"date\",\n      \"axis\": {\"domain\": false, \"format\": \"%Y\"}\n    },\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"count\",\n      \"axis\": null,\n      \"stack\": \"normalize\"\n\n    },\n    \"color\": {\"field\":\"series\", \"scale\":{\"scheme\": \"category20b\"}}\n  }\n}"
    },
    {
        "name": "Heatmap with Labels",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [\n    {\n      \"aggregate\": [{\"op\": \"count\", \"as\": \"num_cars\"}],\n      \"groupby\": [\"Origin\", \"Cylinders\"]\n    }\n  ],\n  \"encoding\": {\n    \"y\": {\"field\": \"Origin\", \"type\": \"ordinal\"},\n    \"x\": {\"field\": \"Cylinders\", \"type\": \"ordinal\"}\n  },\n  \"layer\": [\n    {\n      \"mark\": \"rect\",\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"num_cars\",\n          \"type\": \"quantitative\",\n          \"title\": \"Count of Records\",\n          \"legend\": {\"direction\": \"horizontal\", \"gradientLength\": 120}\n        }\n      }\n    },\n    {\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"num_cars\", \"type\": \"quantitative\"},\n        \"color\": {\n          \"condition\": {\"test\": \"datum['num_cars'] &lt; 40\", \"value\": \"black\"},\n          \"value\": \"white\"\n        }\n      }\n    }\n  ],\n  \"config\": {\n    \"axis\": {\"grid\": true, \"tickBand\": \"extent\"}\n  }\n}"
    },
    {
        "name": "Radial Plot",
        "description": "This radial plot uses both angular and radial extent to convey multiple dimensions of data. However, this approach is not perceptually effective, as viewers will most likely be drawn to the total area of the shape, conflating the two dimensions. This example also demonstrates a way to add labels to circular plots.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple radial chart with embedded data.\",\n  \"data\": {\n    \"values\": [12, 23, 47, 6, 52, 19]\n  },\n  \"layer\": [{\n    \"mark\": {\"type\": \"arc\", \"innerRadius\": 20, \"stroke\": \"#fff\"}\n  },{\n    \"mark\": {\"type\": \"text\", \"radiusOffset\": 10},\n    \"encoding\": {\n      \"text\": {\"field\": \"data\", \"type\": \"quantitative\"}\n    }\n  }],\n  \"encoding\": {\n    \"theta\": {\"field\": \"data\", \"type\": \"quantitative\", \"stack\": true},\n    \"radius\": {\"field\": \"data\", \"scale\": {\"type\": \"sqrt\", \"zero\": true, \"rangeMin\": 20}},\n    \"color\": {\"field\": \"data\", \"type\": \"nominal\", \"legend\": null}\n  }\n}"
    },
    {
        "name": "Line Charts Showing Ranks Over Time",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": {\n    \"text\": \"World Cup 2018: Group F Rankings\",\n    \"frame\": \"bounds\"\n  },\n  \"data\": {\n    \"values\": [\n      {\"team\": \"Germany\", \"matchday\": 1, \"point\": 0, \"diff\": -1},\n      {\"team\": \"Mexico\", \"matchday\": 1, \"point\": 3, \"diff\": 1},\n      {\"team\": \"South Korea\", \"matchday\": 1, \"point\": 0, \"diff\": -1},\n      {\"team\": \"Sweden\", \"matchday\": 1, \"point\": 3, \"diff\": 1},\n      {\"team\": \"Germany\", \"matchday\": 2, \"point\": 3, \"diff\": 0},\n      {\"team\": \"Mexico\", \"matchday\": 2, \"point\": 6, \"diff\": 2},\n      {\"team\": \"South Korea\", \"matchday\": 2, \"point\": 0, \"diff\": -2},\n      {\"team\": \"Sweden\", \"matchday\": 2, \"point\": 3, \"diff\": 0},\n      {\"team\": \"Germany\", \"matchday\": 3, \"point\": 3, \"diff\": -2},\n      {\"team\": \"Mexico\", \"matchday\": 3, \"point\": 6, \"diff\": -1},\n      {\"team\": \"South Korea\", \"matchday\": 3, \"point\": 3, \"diff\": 0},\n      {\"team\": \"Sweden\", \"matchday\": 3, \"point\": 6, \"diff\": 3}\n    ]\n  },\n  \"transform\": [{\n    \"sort\": [\n      {\"field\": \"point\", \"order\": \"descending\"},\n      {\"field\": \"diff\", \"order\": \"descending\"}\n    ],\n    \"window\": [{\n      \"op\": \"rank\",\n      \"as\": \"rank\"\n    }],\n    \"groupby\": [\"matchday\"]\n  }],\n  \"mark\": {\"type\": \"line\", \"orient\": \"vertical\"},\n  \"encoding\": {\n    \"x\": {\"field\": \"matchday\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"rank\", \"type\": \"ordinal\"},\n    \"color\": {\n      \"field\": \"team\", \"type\": \"nominal\",\n      \"scale\": {\n        \"domain\": [\"Germany\", \"Mexico\", \"South Korea\", \"Sweden\"],\n        \"range\": [\"black\", \"#127153\", \"#C91A3C\", \"#0C71AB\"]\n      }\n    }\n  }\n}"
    },
    {
        "name": "Bar Chart Highlighting Values beyond a Threshold",
        "description": "To create a bar chart that highlights values beyond a threshold, we use two layers of bar marks. The lower layer shows all the bars while the upper layer shows bar with values above the threshold in red (#e45755). We then layer a rule mark and a text mark over the bars to annotate the threshold value.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"The PM2.5 value of Beijing observed 15 days, highlighting the days when PM2.5 level is hazardous to human health. Data source https://chartaccent.github.io/chartaccent.html\",\n    \"layer\": [{\n      \"data\": {\n        \"values\": [\n          {\"Day\": 1, \"Value\": 54.8},\n          {\"Day\": 2, \"Value\": 112.1},\n          {\"Day\": 3, \"Value\": 63.6},\n          {\"Day\": 4, \"Value\": 37.6},\n          {\"Day\": 5, \"Value\": 79.7},\n          {\"Day\": 6, \"Value\": 137.9},\n          {\"Day\": 7, \"Value\": 120.1},\n          {\"Day\": 8, \"Value\": 103.3},\n          {\"Day\": 9, \"Value\": 394.8},\n          {\"Day\": 10, \"Value\": 199.5},\n          {\"Day\": 11, \"Value\": 72.3},\n          {\"Day\": 12, \"Value\": 51.1},\n          {\"Day\": 13, \"Value\": 112.0},\n          {\"Day\": 14, \"Value\": 174.5},\n          {\"Day\": 15, \"Value\": 130.5}\n        ]\n      },\n      \"layer\": [{\n        \"mark\": \"bar\",\n        \"encoding\": {\n          \"x\": {\"field\": \"Day\", \"type\": \"ordinal\", \"axis\": {\"labelAngle\": 0}},\n          \"y\": {\"field\": \"Value\", \"type\": \"quantitative\"}\n        }\n      }, {\n        \"mark\": \"bar\",\n        \"transform\": [\n          {\"filter\": \"datum.Value &gt;= 300\"},\n          {\"calculate\": \"300\", \"as\": \"baseline\"}\n        ],\n        \"encoding\": {\n          \"x\": {\"field\": \"Day\", \"type\": \"ordinal\"},\n          \"y\": {\"field\": \"baseline\", \"type\": \"quantitative\", \"title\": \"PM2.5 Value\"},\n          \"y2\": {\"field\": \"Value\"},\n          \"color\": {\"value\": \"#e45755\"}\n        }\n      }\n    ]}, {\n      \"data\": {\n         \"values\": [{}]\n      },\n      \"encoding\": {\n        \"y\": {\"datum\": 300}\n      },\n      \"layer\": [{\n        \"mark\": \"rule\"\n      }, {\n        \"mark\": {\n          \"type\": \"text\",\n          \"align\": \"right\",\n          \"baseline\": \"bottom\",\n          \"dx\": -2,\n          \"dy\": -2,\n          \"x\": \"width\",\n          \"text\": \"hazardous\"\n        }\n      }]\n    }\n  ]\n}"
    },
    {
        "name": "Horizon Graph",
        "description": "Horizon Graph with 2 layers. (See https://idl.cs.washington.edu/papers/horizon/ for more details on Horizon Graphs.)",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Horizon Graph with 2 layers. (See https://idl.cs.washington.edu/papers/horizon/ for more details on Horizon Graphs.)\",\n  \"width\": 300,\n  \"height\": 50,\n  \"data\": {\n    \"values\": [\n      {\"x\": 1,  \"y\": 28}, {\"x\": 2,  \"y\": 55},\n      {\"x\": 3,  \"y\": 43}, {\"x\": 4,  \"y\": 91},\n      {\"x\": 5,  \"y\": 81}, {\"x\": 6,  \"y\": 53},\n      {\"x\": 7,  \"y\": 19}, {\"x\": 8,  \"y\": 87},\n      {\"x\": 9,  \"y\": 52}, {\"x\": 10, \"y\": 48},\n      {\"x\": 11, \"y\": 24}, {\"x\": 12, \"y\": 49},\n      {\"x\": 13, \"y\": 87}, {\"x\": 14, \"y\": 66},\n      {\"x\": 15, \"y\": 17}, {\"x\": 16, \"y\": 27},\n      {\"x\": 17, \"y\": 68}, {\"x\": 18, \"y\": 16},\n      {\"x\": 19, \"y\": 49}, {\"x\": 20, \"y\": 15}\n    ]\n  },\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"x\", \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false, \"nice\": false}\n    },\n    \"y\": {\n      \"field\": \"y\", \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [0,50]},\n      \"axis\": {\"title\": \"y\"}\n    }\n  },\n  \"layer\": [{\n    \"mark\": {\"type\": \"area\", \"clip\": true, \"orient\": \"vertical\", \"opacity\": 0.6}\n  }, {\n    \"transform\": [{\"calculate\": \"datum.y - 50\", \"as\": \"ny\"}],\n    \"mark\": {\"type\": \"area\", \"clip\": true, \"orient\": \"vertical\"},\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"ny\", \"type\": \"quantitative\",\n        \"scale\": {\"domain\": [0,50]}\n      },\n      \"opacity\": {\"value\": 0.3}\n    }\n  }],\n  \"config\": {\n    \"area\": {\"interpolate\": \"monotone\"}\n  }\n}"
    },
    {
        "name": "Trellis Scatter Plot Showing Anscombe\u00a1\u00afs Quartet",
        "description": "Anscombe\u2019s Quartet",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Anscombe's Quartet\",\n  \"data\": {\"url\": \"data/anscombe.json\"},\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"column\": {\"field\": \"Series\"},\n    \"x\": {\n      \"field\": \"X\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"y\": {\n      \"field\": \"Y\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"opacity\": {\"value\": 1}\n  }\n}"
    },
    {
        "name": "Three Choropleths Representing Disjoint Data from the Same Table",
        "description": "the population per state, engineers per state, and hurricanes per state",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"the population per state, engineers per state, and hurricanes per state\",\n  \"repeat\": {\"row\": [\"population\", \"engineers\", \"hurricanes\"]},\n  \"resolve\": {\n    \"scale\": {\n      \"color\": \"independent\"\n    }\n  },\n  \"spec\": {\n    \"width\": 500,\n    \"height\": 300,\n    \"data\": {\n      \"url\": \"data/population_engineers_hurricanes.csv\"\n    },\n    \"transform\": [\n      {\n        \"lookup\": \"id\",\n        \"from\": {\n          \"data\": {\n            \"url\": \"data/us-10m.json\",\n            \"format\": {\n              \"type\": \"topojson\",\n              \"feature\": \"states\"\n            }\n          },\n          \"key\": \"id\"\n        },\n        \"as\": \"geo\"\n      }\n    ],\n    \"projection\": {\"type\": \"albersUsa\"},\n    \"mark\": \"geoshape\",\n    \"encoding\": {\n      \"shape\": {\n        \"field\": \"geo\",\n        \"type\": \"geojson\"\n      },\n      \"color\": {\n        \"field\": {\"repeat\": \"row\"},\n        \"type\": \"quantitative\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Rectangular Brush",
        "description": "Drag out a rectangular brush to highlight points.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Drag out a rectangular brush to highlight points.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"params\": [{\n    \"name\": \"brush\",\n    \"select\": \"interval\",\n    \"value\": {\"x\": [55, 160], \"y\": [13, 37]}\n  }],\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n    \"color\": {\n      \"condition\": {\"param\": \"brush\", \"field\": \"Cylinders\", \"type\": \"ordinal\"},\n      \"value\": \"grey\"\n    }\n  }\n}"
    },
    {
        "name": "Interactive Dashboard with Cross Highlight",
        "description": "A dashboard with cross-highlighting.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A dashboard with cross-highlighting.\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"vconcat\": [\n    {\n      \"layer\": [{\n        \"mark\": \"rect\",\n        \"encoding\": {\n          \"x\": {\n            \"bin\": {\"maxbins\": 10},\n            \"field\": \"IMDB Rating\"\n          },\n          \"y\": {\n            \"bin\": {\"maxbins\": 10},\n            \"field\": \"Rotten Tomatoes Rating\"\n          },\n          \"color\": {\n            \"aggregate\": \"count\",\n            \"legend\": {\n              \"title\": \"All Movies Count\",\n              \"direction\": \"horizontal\",\n              \"gradientLength\": 120\n            }\n          }\n        }\n      }, {\n        \"transform\": [{\n          \"filter\": {\"param\": \"pts\"}\n        }],\n        \"mark\": \"point\",\n        \"encoding\": {\n          \"x\": {\n            \"bin\": {\"maxbins\": 10},\n            \"field\": \"IMDB Rating\"\n          },\n          \"y\": {\n            \"bin\": {\"maxbins\": 10},\n            \"field\": \"Rotten Tomatoes Rating\"\n          },\n          \"size\": {\n            \"aggregate\": \"count\",\n            \"legend\": {\"title\": \"Selected Category Count\"}\n          },\n          \"color\": {\n            \"value\": \"#666\"\n          }\n        }\n      }]\n    }, {\n      \"width\": 330,\n      \"height\": 120,\n      \"mark\": \"bar\",\n      \"params\": [{\n        \"name\": \"pts\",\n        \"select\": {\"type\": \"point\", \"encodings\": [\"x\"]}\n      }],\n      \"encoding\": {\n        \"x\": {\"field\": \"Major Genre\", \"axis\": {\"labelAngle\": -40}},\n        \"y\": {\"aggregate\": \"count\"},\n        \"color\": {\n          \"condition\": {\n            \"param\": \"pts\",\n            \"value\": \"steelblue\"\n          },\n          \"value\": \"grey\"\n        }\n      }\n    }\n  ],\n  \"resolve\": {\n    \"legend\": {\n      \"color\": \"independent\",\n      \"size\": \"independent\"\n    }\n  }\n}"
    },
    {
        "name": "Grouped Bar Chart (Multiple Measure with Repeat)",
        "description": "Read here for more details about how to set step size for grouped bar.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"repeat\": {\"layer\": [\"Worldwide Gross\", \"US Gross\"]},\n  \"spec\": {\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\n        \"field\": \"Major Genre\",\n        \"type\": \"nominal\"\n      },\n      \"y\": {\n        \"aggregate\": \"sum\",\n        \"field\": {\"repeat\": \"layer\"},\n        \"type\": \"quantitative\",\n        \"title\": \"Total Gross\"\n      },\n      \"color\": {\"datum\": {\"repeat\": \"layer\"}, \"title\": \"Gross\"},\n      \"xOffset\": {\"datum\": {\"repeat\": \"layer\"}}\n    }\n  },\n  \"config\": {\n    \"mark\": {\"invalid\": null}\n  }\n}"
    },
    {
        "name": "Density Plot",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"width\": 400,\n  \"height\": 100,\n  \"transform\":[{\n    \"density\": \"IMDB Rating\",\n    \"bandwidth\": 0.3\n  }],\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"value\",\n      \"title\": \"IMDB Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\n      \"field\": \"density\",\n      \"type\": \"quantitative\"\n    }\n  }\n}"
    },
    {
        "name": "Bubble Plot",
        "description": "A bubbleplot showing horsepower on x, miles per gallons on y, and binned acceleration on size.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bubbleplot showing horsepower on x, miles per gallons on y, and binned acceleration on size.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n    \"size\": {\"field\": \"Acceleration\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Multi Series Line Chart with Halo Stroke",
        "description": "Multi-series Line Chart with Halo. Use pivot and repeat-layer as a workaround to facet groups of lines and their halo strokes. See https://github.com/vega/vega-lite/issues/6192 for more discussion.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Multi-series Line Chart with Halo. Use pivot and repeat-layer as a workaround to facet groups of lines and their halo strokes. See https://github.com/vega/vega-lite/issues/6192 for more discussion.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\n    \"pivot\": \"symbol\",\n    \"value\": \"price\",\n    \"groupby\": [\"date\"]\n  }],\n  \"repeat\": {\n    \"layer\": [\"AAPL\", \"AMZN\", \"GOOG\", \"IBM\", \"MSFT\"]\n  },\n  \"spec\": {\n    \"layer\": [{\n      \"mark\": {\"type\": \"line\", \"stroke\": \"white\", \"strokeWidth\": 4},\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n        \"y\": {\"field\": {\"repeat\": \"layer\"}, \"type\": \"quantitative\", \"title\": \"price\"}\n      }\n    },{\n      \"mark\": {\"type\": \"line\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n        \"y\": {\"field\": {\"repeat\": \"layer\"}, \"type\": \"quantitative\", \"title\": \"price\"},\n        \"stroke\": {\"datum\": {\"repeat\": \"layer\"}, \"type\": \"nominal\"}\n      }\n    }]\n  }\n}"
    },
    {
        "name": "Streamgraph",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 300, \"height\": 200,\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonth\", \"field\": \"date\",\n      \"axis\": {\"domain\": false, \"format\": \"%Y\", \"tickSize\": 0}\n    },\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"count\",\n      \"axis\": null,\n      \"stack\": \"center\"\n    },\n    \"color\": {\"field\":\"series\", \"scale\":{\"scheme\": \"category20b\"}}\n  }\n}"
    },
    {
        "name": "Lasagna Plot (Dense Time-Series Heatmap)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"transform\": [{\"filter\": \"datum.symbol !== 'GOOG'\"}],\n  \"width\": 300,\n  \"height\": 100,\n  \"data\": {\n    \"url\": \"data/stocks.csv\"\n  },\n  \"mark\": \"rect\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"yearmonthdate\",\n      \"field\": \"date\",\n      \"type\": \"ordinal\",\n      \"title\": \"Time\",\n      \"axis\": {\n        \"format\": \"%Y\",\n        \"labelAngle\": 0,\n        \"labelOverlap\": false,\n        \"labelColor\": {\n          \"condition\": {\n            \"test\": {\n              \"timeUnit\": \"monthdate\",\n              \"field\": \"value\",\n              \"equal\": {\"month\": 1, \"date\": 1}\n            },\n            \"value\": \"black\"\n          },\n          \"value\": null\n        },\n        \"tickColor\": {\n          \"condition\": {\n            \"test\": {\n              \"timeUnit\": \"monthdate\",\n              \"field\": \"value\",\n              \"equal\": {\"month\": 1, \"date\": 1}\n            },\n            \"value\": \"black\"\n          },\n          \"value\": null\n        }\n      }\n    },\n    \"color\": {\n      \"aggregate\": \"sum\",\n      \"field\": \"price\",\n      \"type\": \"quantitative\",\n      \"title\": \"Price\"\n    },\n    \"y\": {\n      \"field\": \"symbol\",\n      \"type\": \"nominal\",\n      \"title\": null\n    }\n  }\n}"
    },
    {
        "name": "Pyramid Pie Chart",
        "description": "Reproducing http://robslink.com/SAS/democd91/pyramid_pie.htm",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Reproducing http://robslink.com/SAS/democd91/pyramid_pie.htm\",\n  \"data\": {\n    \"values\": [\n      {\"category\": \"Sky\", \"value\": 75, \"order\": 3},\n      {\"category\": \"Shady side of a pyramid\", \"value\": 10, \"order\": 1},\n      {\"category\": \"Sunny side of a pyramid\", \"value\": 15, \"order\": 2}\n    ]\n  },\n  \"mark\": {\"type\": \"arc\", \"outerRadius\": 80},\n  \"encoding\": {\n    \"theta\": {\n      \"field\": \"value\", \"type\": \"quantitative\",\n      \"scale\": {\"range\": [2.35619449, 8.639379797]},\n      \"stack\": true\n    },\n    \"color\": {\n      \"field\": \"category\", \"type\": \"nominal\",\n      \"scale\": {\n        \"domain\": [\"Sky\", \"Shady side of a pyramid\", \"Sunny side of a pyramid\"],\n        \"range\": [\"#416D9D\", \"#674028\", \"#DEAC58\"]\n      },\n      \"legend\": {\n        \"orient\": \"none\",\n        \"title\": null,\n        \"columns\": 1,\n        \"legendX\": 200,\n        \"legendY\": 80\n      }\n    },\n    \"order\": {\n      \"field\": \"order\"\n    }\n  }\n}"
    },
    {
        "name": "Waterfall Chart of Monthly Profit and Loss",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"label\": \"Begin\", \"amount\": 4000},\n      {\"label\": \"Jan\", \"amount\": 1707},\n      {\"label\": \"Feb\", \"amount\": -1425},\n      {\"label\": \"Mar\", \"amount\": -1030},\n      {\"label\": \"Apr\", \"amount\": 1812},\n      {\"label\": \"May\", \"amount\": -1067},\n      {\"label\": \"Jun\", \"amount\": -1481},\n      {\"label\": \"Jul\", \"amount\": 1228},\n      {\"label\": \"Aug\", \"amount\": 1176},\n      {\"label\": \"Sep\", \"amount\": 1146},\n      {\"label\": \"Oct\", \"amount\": 1205},\n      {\"label\": \"Nov\", \"amount\": -1388},\n      {\"label\": \"Dec\", \"amount\": 1492},\n      {\"label\": \"End\", \"amount\": 0}\n    ]\n  },\n  \"width\": 800,\n  \"height\": 450,\n  \"transform\": [\n    {\"window\": [{\"op\": \"sum\", \"field\": \"amount\", \"as\": \"sum\"}]},\n    {\"window\": [{\"op\": \"lead\", \"field\": \"label\", \"as\": \"lead\"}]},\n    {\n      \"calculate\": \"datum.lead === null ? datum.label : datum.lead\",\n      \"as\": \"lead\"\n    },\n    {\n      \"calculate\": \"datum.label === 'End' ? 0 : datum.sum - datum.amount\",\n      \"as\": \"previous_sum\"\n    },\n    {\n      \"calculate\": \"datum.label === 'End' ? datum.sum : datum.amount\",\n      \"as\": \"amount\"\n    },\n    {\n      \"calculate\": \"(datum.label !== 'Begin' &amp;&amp; datum.label !== 'End' &amp;&amp; datum.amount &gt; 0 ? '+' : '') + datum.amount\",\n      \"as\": \"text_amount\"\n    },\n    {\"calculate\": \"(datum.sum + datum.previous_sum) / 2\", \"as\": \"center\"}\n  ],\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"label\",\n      \"type\": \"ordinal\",\n      \"sort\": null,\n      \"axis\": {\"labelAngle\": 0, \"title\": \"Months\"}\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 45},\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"previous_sum\",\n          \"type\": \"quantitative\",\n          \"title\": \"Amount\"\n        },\n        \"y2\": {\"field\": \"sum\"},\n        \"color\": {\n          \"condition\": [\n            {\n              \"test\": \"datum.label === 'Begin' || datum.label === 'End'\",\n              \"value\": \"#f7e0b6\"\n            },\n            {\"test\": \"datum.sum &lt; datum.previous_sum\", \"value\": \"#f78a64\"}\n          ],\n          \"value\": \"#93c4aa\"\n        }\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"rule\",\n        \"color\": \"#404040\",\n        \"opacity\": 1,\n        \"strokeWidth\": 2,\n        \"xOffset\": -22.5,\n        \"x2Offset\": 22.5\n      },\n      \"encoding\": {\n        \"x2\": {\"field\": \"lead\"},\n        \"y\": {\"field\": \"sum\", \"type\": \"quantitative\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"dy\": {\"expr\": \"datum.amount &gt;= 0 ? -4 : 4\"}, \"baseline\": {\"expr\": \"datum.amount &gt;= 0 ? 'bottom' : 'top'\"}},\n      \"encoding\": {\n        \"y\": {\"field\": \"sum\", \"type\": \"quantitative\"},\n        \"text\": {\"field\": \"sum\", \"type\": \"nominal\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"fontWeight\": \"bold\", \"baseline\": \"middle\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"center\", \"type\": \"quantitative\"},\n        \"text\": {\"field\": \"text_amount\", \"type\": \"nominal\"},\n        \"color\": {\n          \"condition\": [\n            {\n              \"test\": \"datum.label === 'Begin' || datum.label === 'End'\",\n              \"value\": \"#725a30\"\n            }\n          ],\n          \"value\": \"white\"\n        }\n      }\n    }\n  ],\n  \"config\": {\"text\": {\"fontWeight\": \"bold\", \"color\": \"#404040\"}}\n}"
    },
    {
        "name": "Weekly Weather Plot",
        "description": "Inspired by this Vega example. Weekly weather data plot representing high/low ranges of record temperatures (light grey), average temperatures (dark grey), and both predicted and observed temperatures (black) for the given week. The first five days have high/low ranges of observed temperatures, and the last five days have ranges of predicted temperatures, where the upper barbell represents the range of high temperature predictions and the lower barbell represents the range of low temperature predictions. Created by @melissatdiamond.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A layered bar chart with floating bars representing weekly weather data\",\n  \"config\": {\n    \"style\": {\n      \"hilo\": {\n        \"size\": 20\n      }\n    }\n  },\n  \"title\": {\n    \"text\": [\"Weekly Weather\", \"Observations and Predictions\"],\n    \"frame\": \"group\"\n  },\n  \"data\": {\n    \"url\": \"data/weather.json\"\n  },\n  \"width\": 250,\n  \"height\": 200,\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"id\",\n      \"type\": \"ordinal\",\n      \"axis\": {\n        \"domain\": false,\n        \"ticks\": false,\n        \"labels\": false,\n        \"title\": null,\n        \"titlePadding\": 25,\n        \"orient\": \"top\"\n      }\n    },\n    \"y\": {\n      \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [10, 70]},\n      \"axis\": {\"title\": \"Temperature (F)\"}\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 20, \"color\": \"#ccc\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"record.low\"},\n        \"y2\": {\"field\": \"record.high\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 20, \"color\": \"#999\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"normal.low\"},\n        \"y2\": {\"field\": \"normal.high\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 12, \"color\": \"#000\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"actual.low\"},\n        \"y2\": {\"field\": \"actual.high\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 12, \"color\": \"#000\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"forecast.low.low\"},\n        \"y2\": {\"field\": \"forecast.low.high\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 3, \"color\": \"#000\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"forecast.low.high\"},\n        \"y2\": {\"field\": \"forecast.high.low\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"bar\", \"size\": 12, \"color\": \"#000\"},\n      \"encoding\": {\n        \"y\": {\"field\": \"forecast.high.low\"},\n        \"y2\": {\"field\": \"forecast.high.high\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"align\": \"center\", \"baseline\": \"bottom\", \"y\": -5},\n      \"encoding\": {\n        \"text\": {\"field\": \"day\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Becker\u00a1\u00afs Barley Trellis Plot",
        "description": "The Trellis display by Becker et al. helped establish small multiples as a \u201cpowerful mechanism for understanding interactions in studies of how a response depends on explanatory variables\u201d. Here we reproduce a trellis of Barley yields from the 1930s, complete with main-effects ordering to facilitate comparison.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"name\": \"trellis_barley\",\n  \"description\": \"The Trellis display by Becker et al. helped establish small multiples as a \u201cpowerful mechanism for understanding interactions in studies of how a response depends on explanatory variables\u201d. Here we reproduce a trellis of Barley yields from the 1930s, complete with main-effects ordering to facilitate comparison.\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"mark\": \"point\",\n  \"height\": {\"step\": 12},\n  \"encoding\": {\n    \"facet\": {\n      \"field\": \"site\",\n      \"type\": \"ordinal\",\n      \"columns\": 2,\n      \"sort\": {\"op\": \"median\", \"field\": \"yield\"}\n    },\n    \"x\": {\n      \"aggregate\": \"median\",\n      \"field\": \"yield\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"y\": {\n      \"field\": \"variety\",\n      \"type\": \"ordinal\",\n      \"sort\": \"-x\"\n    },\n    \"color\": {\"field\": \"year\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "U.S. State Capitals Overlayed on a Map of U.S.",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 800,\n  \"height\": 500,\n  \"projection\": {\n    \"type\": \"albersUsa\"\n  },\n  \"layer\": [\n    {\n      \"data\": {\n        \"url\": \"data/us-10m.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"states\"\n        }\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"fill\": \"lightgray\",\n        \"stroke\": \"white\"\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/us-state-capitals.json\"\n      },\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"lon\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"lat\",\n          \"type\": \"quantitative\"\n        }\n      },\n      \"layer\": [{\n        \"mark\": {\n          \"type\": \"circle\",\n          \"color\": \"orange\"\n        }\n      }, {\n        \"mark\": {\n          \"type\": \"text\",\n          \"dy\": -10\n        },\n        \"encoding\": {\n          \"text\": {\"field\": \"city\", \"type\": \"nominal\"}\n        }\n      }]\n    }\n  ]\n}"
    },
    {
        "name": "Area Chart with Rectangular Brush",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/unemployment-across-industries.json\"},\n  \"encoding\": {\n      \"x\": {\"timeUnit\": \"yearmonth\", \"field\": \"date\"},\n      \"y\": {\"aggregate\": \"sum\", \"field\": \"count\"}\n  },\n  \"layer\": [{\n    \"params\": [{\n      \"name\": \"brush\",\n      \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n    }],\n    \"mark\": \"area\"\n  }, {\n    \"transform\": [\n      {\"filter\": {\"param\": \"brush\"}}\n    ],\n    \"mark\": {\"type\": \"area\", \"color\": \"goldenrod\"}\n  }]\n}"
    },
    {
        "name": "Seattle Weather Exploration",
        "description": "This graph shows an interactive view of Seattle\u2019s weather, including maximum temperature, amount of precipitation, and type of weather. By clicking and dragging on the scatter plot, you can see the proportion of days in that range that have sun, rain, fog, snow, etc. Created by @jakevdp.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": \"Seattle Weather, 2012-2015\",\n  \"data\": {\n    \"url\": \"data/seattle-weather.csv\"\n  },\n  \"vconcat\": [\n    {\n      \"encoding\": {\n        \"color\": {\n          \"condition\": {\n            \"param\": \"brush\",\n            \"title\": \"Weather\",\n            \"field\": \"weather\",\n            \"type\": \"nominal\",\n            \"scale\": {\n              \"domain\": [\"sun\", \"fog\", \"drizzle\", \"rain\", \"snow\"],\n              \"range\": [\"#e7ba52\", \"#a7a7a7\", \"#aec7e8\", \"#1f77b4\", \"#9467bd\"]\n            }\n          },\n          \"value\": \"lightgray\"\n        },\n        \"size\": {\n          \"title\": \"Precipitation\",\n          \"field\": \"precipitation\",\n          \"scale\": {\"domain\": [-1, 50]},\n          \"type\": \"quantitative\"\n        },\n        \"x\": {\n          \"field\": \"date\",\n          \"timeUnit\": \"monthdate\",\n          \"title\": \"Date\",\n          \"axis\": {\"format\": \"%b\"}\n        },\n        \"y\": {\n          \"title\": \"Maximum Daily Temperature (C)\",\n          \"field\": \"temp_max\",\n          \"scale\": {\"domain\": [-5, 40]},\n          \"type\": \"quantitative\"\n        }\n      },\n      \"width\": 600,\n      \"height\": 300,\n      \"mark\": \"point\",\n      \"params\": [{\n        \"name\": \"brush\",\n        \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n      }],\n      \"transform\": [{\"filter\": {\"param\": \"click\"}}]\n    },\n    {\n      \"encoding\": {\n        \"color\": {\n          \"condition\": {\n            \"param\": \"click\",\n            \"field\": \"weather\",\n            \"scale\": {\n              \"domain\": [\"sun\", \"fog\", \"drizzle\", \"rain\", \"snow\"],\n              \"range\": [\"#e7ba52\", \"#a7a7a7\", \"#aec7e8\", \"#1f77b4\", \"#9467bd\"]\n            }\n          },\n          \"value\": \"lightgray\"\n        },\n        \"x\": {\"aggregate\": \"count\"},\n        \"y\": {\"title\": \"Weather\", \"field\": \"weather\"}\n      },\n      \"width\": 600,\n      \"mark\": \"bar\",\n      \"params\": [{\n        \"name\": \"click\",\n        \"select\": {\"type\": \"point\", \"encodings\": [\"color\"]}\n      }],\n      \"transform\": [{\"filter\": {\"param\": \"brush\"}}]\n    }\n  ]\n}"
    },
    {
        "name": "Stacked Density Estimates",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": \"Distribution of Body Mass of Penguins\",\n  \"width\": 400,\n  \"height\": 80,\n  \"data\": {\n    \"url\": \"data/penguins.json\"\n  },\n  \"mark\": \"area\",\n  \"transform\": [\n    {\n      \"density\": \"Body Mass (g)\",\n      \"groupby\": [\"Species\"],\n      \"extent\": [2500, 6500]\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\"field\": \"value\", \"type\": \"quantitative\", \"title\": \"Body Mass (g)\"},\n    \"y\": {\"field\": \"density\", \"type\": \"quantitative\", \"stack\": \"zero\"},\n    \"color\": {\"field\": \"Species\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Scatterplot with Null Values in Grey",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"IMDB Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\n      \"field\": \"Rotten Tomatoes Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\n      \"condition\": {\n        \"test\": \"datum['IMDB Rating'] === null || datum['Rotten Tomatoes Rating'] === null\",\n        \"value\": \"#aaa\"\n      }\n    }\n  },\n  \"config\": {\n    \"mark\": {\"invalid\": null}\n  }\n}"
    },
    {
        "name": "Slope Graph",
        "description": "Slope graph showing the change in yield for different barley sites. It shows the error in the year labels for the Morris site.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"description\": \"Slope graph showing the change in yield for different barley sites. It shows the error in the year labels for the Morris site.\",\n  \"mark\": \"line\",\n  \"width\": {\"step\": 50},\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"year\",\n      \"type\": \"ordinal\",\n      \"scale\": {\"padding\": 0.5}\n    },\n    \"y\": {\n      \"aggregate\": \"median\",\n      \"field\": \"yield\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\"field\": \"site\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Mosaic Chart with Labels",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/cars.json\"\n  },\n  \"transform\": [\n    {\n      \"aggregate\": [\n        {\n          \"op\": \"count\",\n          \"as\": \"count_*\"\n        }\n      ],\n      \"groupby\": [\n        \"Origin\",\n        \"Cylinders\"\n      ]\n    },\n    {\n      \"stack\": \"count_*\",\n      \"groupby\": [],\n      \"as\": [\n        \"stack_count_Origin1\",\n        \"stack_count_Origin2\"\n      ],\n      \"offset\": \"normalize\",\n      \"sort\": [\n        {\n          \"field\": \"Origin\",\n          \"order\": \"ascending\"\n        }\n      ]\n    },\n    {\n      \"window\": [\n        {\n          \"op\": \"min\",\n          \"field\": \"stack_count_Origin1\",\n          \"as\": \"x\"\n        },\n        {\n          \"op\": \"max\",\n          \"field\": \"stack_count_Origin2\",\n          \"as\": \"x2\"\n        },\n        {\n          \"op\": \"dense_rank\",\n          \"as\": \"rank_Cylinders\"\n        },\n        {\n          \"op\": \"distinct\",\n          \"field\": \"Cylinders\",\n          \"as\": \"distinct_Cylinders\"\n        }\n      ],\n      \"groupby\": [\n        \"Origin\"\n      ],\n      \"frame\": [\n        null,\n        null\n      ],\n      \"sort\": [\n        {\n          \"field\": \"Cylinders\",\n          \"order\": \"ascending\"\n        }\n      ]\n    },\n    {\n      \"window\": [\n        {\n          \"op\": \"dense_rank\",\n          \"as\": \"rank_Origin\"\n        }\n      ],\n      \"frame\": [\n        null,\n        null\n      ],\n      \"sort\": [\n        {\n          \"field\": \"Origin\",\n          \"order\": \"ascending\"\n        }\n      ]\n    },\n    {\n      \"stack\": \"count_*\",\n      \"groupby\": [\n        \"Origin\"\n      ],\n      \"as\": [\n        \"y\",\n        \"y2\"\n      ],\n      \"offset\": \"normalize\",\n      \"sort\": [\n        {\n          \"field\": \"Cylinders\",\n          \"order\": \"ascending\"\n        }\n      ]\n    },\n    {\n      \"calculate\": \"datum.y + (datum.rank_Cylinders - 1) * datum.distinct_Cylinders * 0.01 / 3\",\n      \"as\": \"ny\"\n    },\n    {\n      \"calculate\": \"datum.y2 + (datum.rank_Cylinders - 1) * datum.distinct_Cylinders * 0.01 / 3\",\n      \"as\": \"ny2\"\n    },\n    {\n      \"calculate\": \"datum.x + (datum.rank_Origin - 1) * 0.01\",\n      \"as\": \"nx\"\n    },\n    {\n      \"calculate\": \"datum.x2 + (datum.rank_Origin - 1) * 0.01\",\n      \"as\": \"nx2\"\n    },\n    {\n      \"calculate\": \"(datum.nx+datum.nx2)/2\",\n      \"as\": \"xc\"\n    },\n    {\n      \"calculate\": \"(datum.ny+datum.ny2)/2\",\n      \"as\": \"yc\"\n    }\n  ],\n  \"vconcat\": [\n    {\n      \"mark\": {\n        \"type\": \"text\",\n        \"baseline\": \"middle\",\n        \"align\": \"center\"\n      },\n      \"encoding\": {\n        \"x\": {\n          \"aggregate\": \"min\",\n          \"field\": \"xc\",\n          \"title\": \"Origin\",\n          \"axis\": {\n            \"orient\": \"top\"\n          }\n        },\n        \"color\": {\n          \"field\": \"Origin\",\n          \"legend\": null\n        },\n        \"text\": {\"field\": \"Origin\"}\n      }\n    },\n    {\n      \"layer\": [\n        {\n          \"mark\": {\n            \"type\": \"rect\"\n          },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"nx\",\n              \"type\": \"quantitative\",\n              \"axis\": null\n            },\n            \"x2\": {\"field\": \"nx2\"},\n            \"y\": {\n              \"field\": \"ny\",\n              \"type\": \"quantitative\"\n            },\n            \"y2\": {\"field\": \"ny2\"},\n            \"color\": {\n              \"field\": \"Origin\",\n              \"type\": \"nominal\",\n              \"legend\": null\n            },\n            \"opacity\": {\n              \"field\": \"Cylinders\",\n              \"type\": \"quantitative\",\n              \"legend\": null\n            },\n            \"tooltip\": [\n              {\n                \"field\": \"Origin\",\n                \"type\": \"nominal\"\n              },\n              {\n                \"field\": \"Cylinders\",\n                \"type\": \"quantitative\"\n              }\n            ]\n          }\n        },\n        {\n          \"mark\": {\n            \"type\": \"text\",\n            \"baseline\": \"middle\"\n          },\n          \"encoding\": {\n            \"x\": {\n              \"field\": \"xc\",\n              \"type\": \"quantitative\",\n              \"axis\": null\n            },\n            \"y\": {\n              \"field\": \"yc\",\n              \"type\": \"quantitative\",\n              \"axis\": {\n                \"title\": \"Cylinders\"\n              }\n            },\n            \"text\": {\n              \"field\": \"Cylinders\",\n              \"type\": \"nominal\"\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"resolve\": {\n    \"scale\": {\n      \"x\": \"shared\"\n    }\n  },\n  \"config\": {\n    \"view\": {\n      \"stroke\": \"\"\n    },\n    \"concat\": {\"spacing\": 10},\n    \"axis\": {\n      \"domain\": false,\n      \"ticks\": false,\n      \"labels\": false,\n      \"grid\": false\n    }\n  }\n}"
    },
    {
        "name": "Filtering Top-K Items",
        "description": "Here we use window transform to derive the total number of students along with the rank of the current student to determine the top K students and display their score.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar graph showing the scores of the top 5 students. This shows an example of the window transform, for how the top K (5) can be filtered, and also how a rank can be computed for each student.\",\n  \"data\": {\n    \"values\": [\n      {\"student\": \"A\", \"score\": 100}, {\"student\": \"B\", \"score\": 56},\n      {\"student\": \"C\", \"score\": 88}, {\"student\": \"D\", \"score\": 65},\n      {\"student\": \"E\", \"score\": 45}, {\"student\": \"F\", \"score\": 23},\n      {\"student\": \"G\", \"score\": 66}, {\"student\": \"H\", \"score\": 67},\n      {\"student\": \"I\", \"score\": 13}, {\"student\": \"J\", \"score\": 12},\n      {\"student\": \"K\", \"score\": 50}, {\"student\": \"L\", \"score\": 78},\n      {\"student\": \"M\", \"score\": 66}, {\"student\": \"N\", \"score\": 30},\n      {\"student\": \"O\", \"score\": 97}, {\"student\": \"P\", \"score\": 75},\n      {\"student\": \"Q\", \"score\": 24}, {\"student\": \"R\", \"score\": 42},\n      {\"student\": \"S\", \"score\": 76}, {\"student\": \"T\", \"score\": 78},\n      {\"student\": \"U\", \"score\": 21}, {\"student\": \"V\", \"score\": 46}\n    ]\n  },\n  \"transform\": [\n    {\n      \"window\": [{\n        \"op\": \"rank\",\n        \"as\": \"rank\"\n      }],\n      \"sort\": [{ \"field\": \"score\", \"order\": \"descending\" }]\n    }, {\n      \"filter\": \"datum.rank &lt;= 5\"\n    }\n  ],\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n        \"field\": \"score\",\n        \"type\": \"quantitative\"\n    },\n    \"y\": {\n        \"field\": \"student\",\n        \"type\": \"nominal\",\n        \"sort\": {\"field\": \"score\", \"op\": \"average\", \"order\":\"descending\"}\n    }\n  }\n}"
    },
    {
        "name": "Histogram with a Global Mean Overlay",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"layer\": [{\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\"field\": \"IMDB Rating\", \"bin\": true},\n      \"y\": {\"aggregate\": \"count\"}\n    }\n  },{\n    \"mark\": \"rule\",\n    \"encoding\": {\n      \"x\": {\"aggregate\": \"mean\", \"field\": \"IMDB Rating\"},\n      \"color\": {\"value\": \"red\"},\n      \"size\": {\"value\": 5}\n    }\n  }]\n}"
    },
    {
        "name": "Wheat and Wages Example",
        "description": "A recreation of William Playfair\u2019s classic chart visualizing the price of wheat, the wages of a mechanic, and the reigning British monarch. Based on a chart by @manzt.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 900,\n  \"height\": 400,\n  \"data\": { \"url\": \"data/wheat.json\"},\n  \"transform\": [{\"calculate\": \"+datum.year + 5\", \"as\": \"year_end\"}],\n  \"encoding\": {\n    \"y\": {\n      \"type\": \"quantitative\",\n      \"axis\": { \"zindex\": 1 }\n    },\n    \"x\": {\n      \"type\": \"quantitative\",\n      \"axis\": {\"tickCount\": 5, \"format\": \"d\"}\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"bar\", \"fill\": \"#aaa\", \"stroke\": \"#999\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"year\", \"bin\":\"binned\"},\n        \"x2\": {\"field\": \"year_end\"},\n        \"y\": {\"field\": \"wheat\"}\n      }\n    },\n    {\n      \"data\": {\n        \"values\": [\n          { \"year\": \"1600\" },\n          { \"year\": \"1650\" },\n          { \"year\": \"1700\" },\n          { \"year\": \"1750\" },\n          { \"year\": \"1800\" }\n        ]\n      },\n      \"mark\": {\n        \"type\": \"rule\",\n        \"stroke\": \"#000\",\n        \"strokeWidth\": 0.6,\n        \"opacity\": 0.5\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"year\"}\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"area\",\n        \"color\": \"#a4cedb\",\n        \"opacity\": 0.7\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"year\"},\n        \"y\": {\"field\": \"wages\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"line\", \"color\": \"#000\", \"opacity\": 0.7},\n      \"encoding\": {\n        \"x\": {\"field\": \"year\"},\n        \"y\": {\"field\": \"wages\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"line\", \"yOffset\": -2, \"color\": \"#EE8182\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"year\"},\n        \"y\": {\"field\": \"wages\"}\n      }\n    },\n    {\n      \"data\": {\"url\": \"data/monarchs.json\"},\n      \"transform\": [\n        { \"calculate\": \"((!datum.commonwealth &amp;&amp; datum.index % 2) ? -1: 1) * 2 + 95\", \"as\": \"offset\" },\n        { \"calculate\": \"95\", \"as\": \"y\" }\n      ],\n      \"mark\": {\"type\": \"rect\", \"stroke\": \"#000\"},\n      \"encoding\": {\n        \"x\": {\"field\": \"start\"},\n        \"x2\": {\"field\": \"end\"},\n        \"y\": {\"field\": \"y\"},\n        \"y2\": { \"field\": \"offset\" },\n        \"fill\": {\n          \"field\": \"commonwealth\",\n          \"scale\": { \"range\": [\"black\", \"white\"] },\n          \"legend\": null\n        }\n      }\n    },\n    {\n      \"data\": {\"url\": \"data/monarchs.json\"},\n      \"transform\": [\n        { \"calculate\": \"((!datum.commonwealth &amp;&amp; datum.index % 2) ? -1: 1) + 95\", \"as\": \"off2\" },\n        { \"calculate\": \"+datum.start + (+datum.end - +datum.start)/2\", \"as\": \"x\"}\n      ],\n      \"mark\": {\n        \"type\": \"text\",\n        \"yOffset\": 16,\n        \"fontSize\": 9,\n        \"baseline\": \"bottom\",\n        \"fontStyle\": \"italic\"\n      },\n      \"encoding\": {\n        \"x\": {\"field\": \"x\"},\n        \"y\": {\"field\": \"off2\"},\n        \"text\": {\"field\": \"name\"}\n      }\n    }\n  ],\n  \"config\": {\n    \"axis\": {\n      \"title\": null,\n      \"gridColor\": \"white\",\n      \"gridOpacity\": 0.25,\n      \"domain\": false\n    },\n    \"view\": { \"stroke\": \"transparent\" }\n  }\n}"
    },
    {
        "name": "Trellis Area",
        "description": "Stock prices of four large companies as a small multiples of area charts.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of four large companies as a small multiples of area charts.\",\n  \"transform\": [{\"filter\": \"datum.symbol !== 'GOOG'\"}],\n  \"width\": 300,\n  \"height\": 40,\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"date\",\n      \"type\": \"temporal\",\n      \"title\": \"Time\",\n      \"axis\": {\"grid\": false}\n    },\n    \"y\": {\n      \"field\": \"price\",\n      \"type\": \"quantitative\",\n      \"title\": \"Price\",\n      \"axis\": {\"grid\": false}\n    },\n    \"color\": {\n      \"field\": \"symbol\",\n      \"type\": \"nominal\",\n      \"legend\": null\n    },\n    \"row\": {\n      \"field\": \"symbol\",\n      \"type\": \"nominal\",\n      \"title\": \"Symbol\"\n    }\n  }\n}"
    },
    {
        "name": "Nested View Concatenation Aligned with Axis minExtent",
        "description": "Nested concatenation aligned by setting axis minExtent",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Nested concatenation aligned by setting axis minExtent\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"vconcat\": [{\n    \"title\": \"Ratings\",\n    \"repeat\": {\"column\": [\"Rotten Tomatoes Rating\", \"IMDB Rating\"]},\n    \"spec\": {\n      \"width\": 150,\n      \"height\": 50,\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": {\"repeat\": \"column\"},\n          \"bin\": {\"maxbins\": 20}\n        },\n        \"y\": {\"aggregate\": \"count\"}\n      }\n    }\n  },{\n    \"title\": \"Gross\",\n    \"repeat\": {\"column\": [\"US Gross\", \"Worldwide Gross\"]},\n    \"spec\": {\n      \"width\": 150,\n      \"height\": 50,\n      \"encoding\": {\n        \"x\": {\n          \"field\": {\"repeat\": \"column\"},\n          \"bin\": {\"maxbins\": 20}\n        },\n        \"y\": {\"aggregate\": \"count\"}\n      },\n      \"mark\": \"bar\"\n    }\n  }],\n  \"config\": {\n    \"countTitle\": \"Count\",\n    \"axisX\": {\"titleLimit\": 150},\n    \"axisY\": {\n      \"minExtent\": 40\n    }\n  }\n}"
    },
    {
        "name": "Line between Airports in the U.S.",
        "description": "Line drawn between airports in the U.S. simulating a flight itinerary",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Line drawn between airports in the U.S. simulating a flight itinerary\",\n  \"width\": 800,\n  \"height\": 500,\n  \"layer\": [\n    {\n      \"data\": {\n        \"url\": \"data/us-10m.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"states\"\n        }\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"fill\": \"#eee\",\n        \"stroke\": \"white\"\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/airports.csv\"\n      },\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"longitude\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"latitude\",\n          \"type\": \"quantitative\"\n        },\n        \"size\": {\n          \"value\": 5\n        },\n        \"color\": {\n          \"value\": \"gray\"\n        }\n      }\n    },\n    {\n      \"data\": {\n        \"values\": [\n          {\"airport\": \"SEA\", \"order\": 1},\n          {\"airport\": \"SFO\", \"order\": 2},\n          {\"airport\": \"LAX\", \"order\": 3},\n          {\"airport\": \"LAS\", \"order\": 4},\n          {\"airport\": \"DFW\", \"order\": 5},\n          {\"airport\": \"DEN\", \"order\": 6},\n          {\"airport\": \"ORD\", \"order\": 7},\n          {\"airport\": \"JFK\", \"order\": 8}\n        ]\n      },\n      \"transform\": [\n        {\n          \"lookup\": \"airport\",\n          \"from\": {\n            \"data\": {\n              \"url\": \"data/airports.csv\"\n            },\n            \"key\": \"iata\",\n            \"fields\": [\n              \"latitude\",\n              \"longitude\"\n            ]\n          }\n        }\n      ],\n      \"projection\": {\n        \"type\": \"albersUsa\"\n      },\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"longitude\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"latitude\",\n          \"type\": \"quantitative\"\n        },\n        \"order\": {\n          \"field\": \"order\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Paintbrush Highlight",
        "description": "Select multiple points with the shift key.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Select multiple points with the shift key.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"params\": [{\n    \"name\": \"paintbrush\",\n    \"select\": {\"type\": \"point\", \"on\": \"pointerover\", \"nearest\": true}\n  }],\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n    \"size\": {\n      \"condition\": {\"param\": \"paintbrush\", \"value\": 300},\n      \"value\": 50\n    }\n  }\n}"
    },
    {
        "name": "Connections among Major U.S. Airports.",
        "description": "An interactive visualization of connections among major U.S. airports in 2008. Based on a U.S. airports example by Mike Bostock.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"An interactive visualization of connections among major U.S. airports in 2008. Based on a U.S. airports example by Mike Bostock.\",\n  \"layer\": [\n    {\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"fill\": \"#ddd\",\n        \"stroke\": \"#fff\",\n        \"strokeWidth\": 1\n      },\n      \"data\": {\n        \"url\": \"data/us-10m.json\",\n        \"format\": {\"type\": \"topojson\", \"feature\": \"states\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"rule\", \"color\": \"#000\", \"opacity\": 0.35},\n      \"data\": {\"url\": \"data/flights-airport.csv\"},\n      \"transform\": [\n        {\"filter\": {\"param\": \"org\", \"empty\": false}},\n        {\n          \"lookup\": \"origin\",\n          \"from\": {\n            \"data\": {\"url\": \"data/airports.csv\"},\n            \"key\": \"iata\",\n            \"fields\": [\"latitude\", \"longitude\"]\n          }\n        },\n        {\n          \"lookup\": \"destination\",\n          \"from\": {\n            \"data\": {\"url\": \"data/airports.csv\"},\n            \"key\": \"iata\",\n            \"fields\": [\"latitude\", \"longitude\"]\n          },\n          \"as\": [\"lat2\", \"lon2\"]\n        }\n      ],\n      \"encoding\": {\n        \"latitude\": {\"field\": \"latitude\"},\n        \"longitude\": {\"field\": \"longitude\"},\n        \"latitude2\": {\"field\": \"lat2\"},\n        \"longitude2\": {\"field\": \"lon2\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"circle\"},\n      \"data\": {\"url\": \"data/flights-airport.csv\"},\n      \"transform\": [\n        {\"aggregate\": [{\"op\": \"count\", \"as\": \"routes\"}], \"groupby\": [\"origin\"]},\n        {\n          \"lookup\": \"origin\",\n          \"from\": {\n            \"data\": {\"url\": \"data/airports.csv\"},\n            \"key\": \"iata\",\n            \"fields\": [\"state\", \"latitude\", \"longitude\"]\n          }\n        },\n        {\"filter\": \"datum.state !== 'PR' &amp;&amp; datum.state !== 'VI'\"}\n      ],\n      \"params\": [{\n        \"name\": \"org\",\n        \"select\": {\n          \"type\": \"point\",\n          \"on\": \"pointerover\",\n          \"nearest\": true,\n          \"fields\": [\"origin\"]\n        }\n      }],\n      \"encoding\": {\n        \"latitude\": {\"field\": \"latitude\"},\n        \"longitude\": {\"field\": \"longitude\"},\n        \"size\": {\n          \"field\": \"routes\",\n          \"type\": \"quantitative\",\n          \"scale\": {\"rangeMax\": 1000},\n          \"legend\": null\n        },\n        \"order\": {\n          \"field\": \"routes\",\n          \"sort\": \"descending\"\n        }\n      }\n    }\n  ],\n  \"projection\": {\"type\": \"albersUsa\"},\n  \"width\": 900,\n  \"height\": 500\n}"
    },
    {
        "name": "Stacked Bar Chart with Rounded Corners",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"mark\": {\"type\": \"bar\", \"cornerRadiusTopLeft\": 3, \"cornerRadiusTopRight\": 3},\n  \"encoding\": {\n    \"x\": {\"timeUnit\": \"month\", \"field\": \"date\", \"type\": \"ordinal\"},\n    \"y\": {\"aggregate\": \"count\"},\n    \"color\": {\"field\": \"weather\"}\n  }\n}"
    },
    {
        "name": "Scatterplot with Filled Circles",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Step Chart",
        "description": "Google\u2019s stock price over time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Google's stock price over time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol==='GOOG'\"}],\n  \"mark\": {\n    \"type\": \"line\",\n    \"interpolate\": \"step-after\"\n  },\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Top-K Plot with \u00a1\u00b0Others\u00a1\u00b1",
        "description": "By @manzt, adapted from https://observablehq.com/@manzt/top-k-plot-with-others-vega-lite-example.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Top-K plot with \\\"others\\\" by Trevor Manz, adapted from https://observablehq.com/@manzt/top-k-plot-with-others-vega-lite-example.\",\n  \"title\": \"Top Directors by Average Worldwide Gross\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"mark\": \"bar\",\n  \"transform\": [\n    {\n      \"aggregate\": [{\"op\": \"mean\", \"field\": \"Worldwide Gross\", \"as\": \"aggregate_gross\"}],\n      \"groupby\": [\"Director\"]\n    },\n    {\n      \"window\": [{\"op\": \"row_number\", \"as\": \"rank\"}],\n      \"sort\": [{ \"field\": \"aggregate_gross\", \"order\": \"descending\" }]\n    },\n    {\n      \"calculate\": \"datum.rank &lt; 10 ? datum.Director : 'All Others'\", \"as\": \"ranked_director\"\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\n      \"aggregate\": \"mean\",\n      \"field\": \"aggregate_gross\",\n      \"type\": \"quantitative\",\n      \"title\": null\n    },\n    \"y\": {\n      \"sort\": {\"op\": \"mean\", \"field\": \"aggregate_gross\", \"order\": \"descending\"},\n      \"field\": \"ranked_director\",\n      \"type\": \"ordinal\",\n      \"title\": null\n    }\n  }\n}"
    },
    {
        "name": "Line Chart with Highlighted Rectangles",
        "description": "The population of the German city of Falkensee over time",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"The population of the German city of Falkensee over time\",\n  \"width\": 500,\n  \"data\": {\n    \"values\": [\n      {\"year\": \"1875\", \"population\": 1309},\n      {\"year\": \"1890\", \"population\": 1558},\n      {\"year\": \"1910\", \"population\": 4512},\n      {\"year\": \"1925\", \"population\": 8180},\n      {\"year\": \"1933\", \"population\": 15915},\n      {\"year\": \"1939\", \"population\": 24824},\n      {\"year\": \"1946\", \"population\": 28275},\n      {\"year\": \"1950\", \"population\": 29189},\n      {\"year\": \"1964\", \"population\": 29881},\n      {\"year\": \"1971\", \"population\": 26007},\n      {\"year\": \"1981\", \"population\": 24029},\n      {\"year\": \"1985\", \"population\": 23340},\n      {\"year\": \"1989\", \"population\": 22307},\n      {\"year\": \"1990\", \"population\": 22087},\n      {\"year\": \"1991\", \"population\": 22139},\n      {\"year\": \"1992\", \"population\": 22105},\n      {\"year\": \"1993\", \"population\": 22242},\n      {\"year\": \"1994\", \"population\": 22801},\n      {\"year\": \"1995\", \"population\": 24273},\n      {\"year\": \"1996\", \"population\": 25640},\n      {\"year\": \"1997\", \"population\": 27393},\n      {\"year\": \"1998\", \"population\": 29505},\n      {\"year\": \"1999\", \"population\": 32124},\n      {\"year\": \"2000\", \"population\": 33791},\n      {\"year\": \"2001\", \"population\": 35297},\n      {\"year\": \"2002\", \"population\": 36179},\n      {\"year\": \"2003\", \"population\": 36829},\n      {\"year\": \"2004\", \"population\": 37493},\n      {\"year\": \"2005\", \"population\": 38376},\n      {\"year\": \"2006\", \"population\": 39008},\n      {\"year\": \"2007\", \"population\": 39366},\n      {\"year\": \"2008\", \"population\": 39821},\n      {\"year\": \"2009\", \"population\": 40179},\n      {\"year\": \"2010\", \"population\": 40511},\n      {\"year\": \"2011\", \"population\": 40465},\n      {\"year\": \"2012\", \"population\": 40905},\n      {\"year\": \"2013\", \"population\": 41258},\n      {\"year\": \"2014\", \"population\": 41777}\n    ],\n    \"format\": {\n      \"parse\": {\"year\": \"date:'%Y'\"}\n    }\n  },\n  \"layer\": [\n    {\n      \"mark\": \"rect\",\n      \"data\": {\n        \"values\": [\n          {\n            \"start\": \"1933\",\n            \"end\": \"1945\",\n            \"event\": \"Nazi Rule\"\n          },\n          {\n            \"start\": \"1948\",\n            \"end\": \"1989\",\n            \"event\": \"GDR (East Germany)\"\n          }\n        ],\n        \"format\": {\n          \"parse\": {\"start\": \"date:'%Y'\", \"end\": \"date:'%Y'\"}\n        }\n      },\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"start\",\n          \"timeUnit\": \"year\"\n        },\n        \"x2\": {\n          \"field\": \"end\",\n          \"timeUnit\": \"year\"\n        },\n        \"color\": {\"field\": \"event\", \"type\": \"nominal\"}\n      }\n    },\n    {\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"year\",\n          \"timeUnit\": \"year\",\n          \"title\": \"year (year)\"\n        },\n        \"y\": {\"field\": \"population\", \"type\": \"quantitative\"},\n        \"color\": {\"value\": \"#333\"}\n      }\n    },\n    {\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"year\",\n          \"timeUnit\": \"year\"\n        },\n        \"y\": {\"field\": \"population\", \"type\": \"quantitative\"},\n        \"color\": {\"value\": \"#333\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Trellis Area Plot Showing Annual Temperatures in Seattle",
        "description": "Temperature normals in Seattle. Derived from Seattle Annual Temperate example from the Vega example gallery.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Temperature normals in Seattle. Derived from [Seattle Annual Temperate](https://vega.github.io/vega/examples/annual-temperature/) example from the Vega example gallery.\",\n  \"title\": \"Seattle Temperature Normals\",\n  \"data\": {\"url\": \"data/seattle-weather-hourly-normals.csv\"},\n  \"transform\": [\n    {\"calculate\": \"(hours(datum.date) + 18) % 24\", \"as\": \"order\"}\n  ],\n  \"spacing\": {\"row\": 1},\n  \"facet\": {\n    \"row\": {\n      \"field\": \"date\",\n      \"timeUnit\": \"hours\",\n      \"type\": \"nominal\",\n      \"sort\": {\"field\": \"order\"},\n      \"header\": {\n        \"labelAngle\": 0,\n        \"labelPadding\": 2,\n        \"titlePadding\": -4,\n        \"labelAlign\": \"left\",\n        \"labelExpr\": \"hours(datum.value) == 0 ? 'Midnight' : hours(datum.value) == 12 ? 'Noon' : timeFormat(datum.value, '%I:%M %p')\"\n      }\n    }\n  },\n  \"spec\": {\n    \"width\": 800,\n    \"height\": 25,\n    \"view\": {\"stroke\": null},\n    \"mark\": \"area\",\n    \"encoding\": {\n      \"x\": {\n        \"field\": \"date\",\n        \"type\": \"temporal\",\n        \"title\": \"Month\",\n        \"timeUnit\": \"monthdate\",\n        \"axis\": {\"format\": \"%b\"}\n      },\n      \"y\": {\n        \"field\": \"temperature\",\n        \"type\": \"quantitative\",\n        \"aggregate\": \"mean\",\n        \"scale\": {\"zero\": false},\n        \"axis\": {\"title\": null, \"labels\": false, \"ticks\": false}\n      }\n    }\n  },\n  \"config\": {\"axis\": {\"grid\": false, \"domain\": false}}\n}"
    },
    {
        "name": "Population Pyramid",
        "description": "A population pyramid for the US in 2000.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A population pyramid for the US in 2000.\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"}\n  ],\n  \"spacing\": 0,\n  \"hconcat\": [{\n    \"transform\": [{\n      \"filter\": {\"field\": \"gender\", \"equal\": \"Female\"}\n    }],\n    \"title\": \"Female\",\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"age\", \"axis\": null, \"sort\": \"descending\"\n      },\n      \"x\": {\n        \"aggregate\": \"sum\", \"field\": \"people\",\n        \"title\": \"population\",\n        \"axis\": {\"format\": \"s\"},\n        \"sort\": \"descending\"\n      },\n      \"color\": {\n        \"field\": \"gender\",\n        \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]},\n        \"legend\": null\n      }\n    }\n  }, {\n    \"width\": 20,\n    \"view\": {\"stroke\": null},\n    \"mark\": {\n      \"type\": \"text\",\n      \"align\": \"center\"\n    },\n    \"encoding\": {\n      \"y\": {\"field\": \"age\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"descending\"},\n      \"text\": {\"field\": \"age\", \"type\": \"quantitative\"}\n    }\n  }, {\n    \"transform\": [{\n      \"filter\": {\"field\": \"gender\", \"equal\": \"Male\"}\n    }],\n    \"title\": \"Male\",\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"age\", \"title\": null,\n        \"axis\": null, \"sort\": \"descending\"\n      },\n      \"x\": {\n        \"aggregate\": \"sum\", \"field\": \"people\",\n        \"title\": \"population\",\n        \"axis\": {\"format\": \"s\"}\n      },\n      \"color\": {\n        \"field\": \"gender\",\n        \"legend\": null\n      }\n    }\n  }],\n  \"config\": {\n    \"view\": {\"stroke\": null},\n    \"axis\": {\"grid\": false}\n  }\n}"
    },
    {
        "name": "Income in the U.S. by State, Faceted over Income Brackets",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 500,\n  \"height\": 300,\n  \"data\": {\n    \"url\": \"data/income.json\"\n  },\n  \"transform\": [\n    {\n      \"lookup\": \"id\",\n      \"from\": {\n        \"data\": {\n          \"url\": \"data/us-10m.json\",\n          \"format\": {\n            \"type\": \"topojson\",\n            \"feature\": \"states\"\n          }\n        },\n        \"key\": \"id\"\n      },\n      \"as\": \"geo\"\n    }\n  ],\n  \"projection\": {\"type\": \"albersUsa\"},\n  \"mark\": \"geoshape\",\n  \"encoding\": {\n    \"shape\": {\"field\": \"geo\", \"type\": \"geojson\"},\n    \"color\": {\"field\": \"pct\", \"type\": \"quantitative\"},\n    \"row\": {\"field\": \"group\"}\n  }\n}"
    },
    {
        "name": "Scatterplot Pan & Zoom",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"params\": [{\n    \"name\": \"grid\",\n    \"select\": \"interval\",\n    \"bind\": \"scales\"\n  }],\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Horsepower\", \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [75, 150]}\n    },\n    \"y\": {\n      \"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [20, 40]}\n    },\n    \"size\": {\"field\": \"Cylinders\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "An interactive scatter plot of global health statistics by country and year.",
        "description": "Similar to the Vega version at https://vega.github.io/vega/examples/global-development/.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"An interactive scatter plot of global health statistics by country and year.\",\n  \"data\": {\"url\": \"data/gapminder.json\"},\n  \"width\": 800,\n  \"height\": 500,\n  \"layer\": [\n    {\n      \"transform\": [\n        {\"filter\": {\"field\": \"country\", \"equal\": \"Afghanistan\"}},\n        {\"filter\": {\"param\": \"year\"}}\n      ],\n      \"mark\": {\n        \"type\": \"text\",\n        \"fontSize\": 100,\n        \"x\": 420,\n        \"y\": 250,\n        \"opacity\": 0.06\n      },\n      \"encoding\": {\"text\": {\"field\": \"year\"}}\n    },\n    {\n      \"transform\": [\n        {\n          \"lookup\": \"cluster\",\n          \"from\": {\n            \"key\": \"id\",\n            \"fields\": [\"name\"],\n            \"data\": {\n              \"values\": [\n                {\"id\": 0, \"name\": \"South Asia\"},\n                {\"id\": 1, \"name\": \"Europe &amp; Central Asia\"},\n                {\"id\": 2, \"name\": \"Sub-Saharan Africa\"},\n                {\"id\": 3, \"name\": \"America\"},\n                {\"id\": 4, \"name\": \"East Asia &amp; Pacific\"},\n                {\"id\": 5, \"name\": \"Middle East &amp; North Africa\"}\n              ]\n            }\n          }\n        }\n      ],\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"fertility\",\n          \"type\": \"quantitative\",\n          \"scale\": {\"domain\": [0, 9]},\n          \"axis\": {\"tickCount\": 5, \"title\": \"Fertility\"}\n        },\n        \"y\": {\n          \"field\": \"life_expect\",\n          \"type\": \"quantitative\",\n          \"scale\": {\"domain\": [20, 85]},\n          \"axis\": {\"tickCount\": 5, \"title\": \"Life Expectancy\"}\n        }\n      },\n      \"layer\": [\n        {\n          \"mark\": {\n            \"type\": \"line\",\n            \"size\": 4,\n            \"color\": \"lightgray\",\n            \"strokeCap\": \"round\"\n          },\n          \"encoding\": {\n            \"detail\": {\"field\": \"country\"},\n            \"order\": {\"field\": \"year\"},\n            \"opacity\": {\n              \"condition\": {\n                \"test\": {\"or\": [\n                  {\"param\": \"hovered\", \"empty\": false},\n                  {\"param\": \"clicked\", \"empty\": false}\n                ]},\n                \"value\": 0.8\n              },\n              \"value\": 0\n            }\n          }\n        },\n        {\n          \"params\": [\n            {\n              \"name\": \"year\",\n              \"value\": [{\"year\": 1955}],\n              \"select\": {\n                \"type\": \"point\",\n                \"fields\": [\"year\"]\n              },\n              \"bind\": {\n                \"name\": \"Year\",\n                \"input\": \"range\",\n                \"min\": 1955, \"max\": 2005, \"step\": 5\n              }\n            },\n            {\n              \"name\": \"hovered\",\n              \"select\": {\n                \"type\": \"point\",\n                \"fields\": [\"country\"],\n                \"toggle\": false,\n                \"on\": \"pointerover\"\n              }\n            },\n            {\n              \"name\": \"clicked\",\n              \"select\": {\"type\": \"point\", \"fields\": [\"country\"]}\n            }\n          ],\n          \"transform\": [{\"filter\": {\"param\": \"year\"}}],\n          \"mark\": {\"type\": \"circle\", \"size\": 100, \"opacity\": 0.9},\n          \"encoding\": {\"color\": {\"field\": \"name\", \"title\": \"Region\"}}\n        },\n        {\n          \"transform\": [\n            {\n              \"filter\": {\n                \"and\": [\n                  {\"param\": \"year\"},\n                  {\"or\": [\n                    {\"param\": \"clicked\", \"empty\": false},\n                    {\"param\": \"hovered\", \"empty\": false}\n                  ]}\n                ]\n              }\n            }\n          ],\n          \"mark\": {\n            \"type\": \"text\",\n            \"yOffset\": -12,\n            \"fontSize\": 12,\n            \"fontWeight\": \"bold\"\n          },\n          \"encoding\": {\n            \"text\": {\"field\": \"country\"},\n            \"color\": {\"field\": \"name\", \"title\": \"Region\"}\n          }\n        },\n        {\n          \"transform\": [\n            {\"filter\": {\"param\": \"hovered\", \"empty\": false}},\n            {\"filter\": {\"not\": {\"param\": \"year\"}}}\n          ],\n          \"layer\": [\n            {\n              \"mark\": {\n                \"type\": \"text\",\n                \"yOffset\": -12,\n                \"fontSize\": 12,\n                \"color\": \"gray\"\n              },\n              \"encoding\": {\"text\": {\"field\": \"year\"}}\n            },\n            {\"mark\": {\"type\": \"circle\", \"color\": \"gray\"}}\n          ]\n        }\n      ]\n    }\n  ]\n}"
    },
    {
        "name": "Horizontal Stacked Bar Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"aggregate\": \"sum\", \"field\": \"yield\"},\n    \"y\": {\"field\": \"variety\"},\n    \"color\": {\"field\": \"site\"}\n  }\n}"
    },
    {
        "name": "Bubble Plot (Gapminder)",
        "description": "A bubble plot showing the correlation between health and income for 187 countries in the world (modified from an example in Lisa Charlotte Rost\u2019s blog post \u2018One Chart, Twelve Charting Libraries\u2019 \u2013http://lisacharlotterost.github.io/2016/05/17/one-chart-code/).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bubble plot showing the correlation between health and income for 187 countries in the world (modified from an example in Lisa Charlotte Rost's blog post 'One Chart, Twelve Charting Libraries' --http://lisacharlotterost.github.io/2016/05/17/one-chart-code/).\",\n  \"width\": 500,\"height\": 300,\n  \"data\": {\n    \"url\": \"data/gapminder-health-income.csv\"\n  },\n  \"params\": [{\n    \"name\": \"view\",\n    \"select\": \"interval\",\n    \"bind\": \"scales\"\n  }],\n  \"mark\": \"circle\",\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"health\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false},\n      \"axis\": {\"minExtent\": 30}\n    },\n    \"x\": {\n      \"field\": \"income\",\n      \"scale\": {\"type\": \"log\"}\n    },\n    \"size\": {\"field\": \"population\", \"type\": \"quantitative\"},\n    \"color\": {\"value\": \"#000\"}\n  }\n}"
    },
    {
        "name": "Line Chart with Monotone Interpolation",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol==='GOOG'\"}],\n  \"mark\": {\n    \"type\": \"line\",\n    \"interpolate\": \"monotone\"\n  },\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Using the lookup transform to combine data",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/lookup_groups.csv\"},\n  \"transform\": [{\n    \"lookup\": \"person\",\n    \"from\": {\n      \"data\": {\"url\": \"data/lookup_people.csv\"},\n      \"key\": \"name\",\n      \"fields\": [\"age\", \"height\"]\n    }\n  }],\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"group\"},\n    \"y\": {\"field\": \"age\", \"aggregate\": \"mean\"}\n  }\n}"
    },
    {
        "name": "Faceted Density Plot",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": \"Distribution of Body Mass of Penguins\",\n  \"width\": 400,\n  \"height\": 80,\n  \"data\": {\n    \"url\": \"data/penguins.json\"\n  },\n  \"mark\": \"area\",\n  \"transform\": [\n    {\n      \"density\": \"Body Mass (g)\",\n      \"groupby\": [\"Species\"],\n      \"extent\": [2500, 6500]\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\"field\": \"value\", \"type\": \"quantitative\", \"title\": \"Body Mass (g)\"},\n    \"y\": {\"field\": \"density\", \"type\": \"quantitative\", \"stack\": \"zero\"},\n    \"row\": {\"field\": \"Species\"}\n  }\n}"
    },
    {
        "name": "London Tube Lines",
        "description": "This example was created by @jwoLondon.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 700,\n  \"height\": 500,\n  \"view\": {\n    \"stroke\": \"transparent\"\n  },\n  \"layer\": [\n    {\n      \"data\": {\n        \"url\": \"data/londonBoroughs.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"boroughs\"\n        }\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"stroke\": \"white\",\n        \"strokeWidth\": 2\n      },\n      \"encoding\": {\n        \"color\": {\n          \"value\": \"#eee\"\n        }\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/londonCentroids.json\",\n        \"format\": {\n          \"type\": \"json\"\n        }\n      },\n      \"transform\": [\n        {\n          \"calculate\": \"indexof (datum.name,' ') &gt; 0  ? substring(datum.name,0,indexof(datum.name, ' ')) : datum.name\",\n          \"as\": \"bLabel\"\n        }\n      ],\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"longitude\": {\n          \"field\": \"cx\",\n          \"type\": \"quantitative\"\n        },\n        \"latitude\": {\n          \"field\": \"cy\",\n          \"type\": \"quantitative\"\n        },\n        \"text\": {\n          \"field\": \"bLabel\",\n          \"type\": \"nominal\"\n        },\n        \"size\": {\n          \"value\": 8\n        },\n        \"opacity\": {\n          \"value\": 0.6\n        }\n      }\n    },\n    {\n      \"data\": {\n        \"url\": \"data/londonTubeLines.json\",\n        \"format\": {\n          \"type\": \"topojson\",\n          \"feature\": \"line\"\n        }\n      },\n      \"mark\": {\n        \"type\": \"geoshape\",\n        \"filled\": false,\n        \"strokeWidth\": 2\n      },\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"id\",\n          \"type\": \"nominal\",\n          \"legend\": {\n            \"title\": null,\n            \"orient\": \"bottom-right\",\n            \"offset\": 0\n          },\n          \"scale\": {\n            \"domain\": [\n              \"Bakerloo\",\n              \"Central\",\n              \"Circle\",\n              \"District\",\n              \"DLR\",\n              \"Hammersmith &amp; City\",\n              \"Jubilee\",\n              \"Metropolitan\",\n              \"Northern\",\n              \"Piccadilly\",\n              \"Victoria\",\n              \"Waterloo &amp; City\"\n            ],\n            \"range\": [\n              \"rgb(137,78,36)\",\n              \"rgb(220,36,30)\",\n              \"rgb(255,206,0)\",\n              \"rgb(1,114,41)\",\n              \"rgb(0,175,173)\",\n              \"rgb(215,153,175)\",\n              \"rgb(106,114,120)\",\n              \"rgb(114,17,84)\",\n              \"rgb(0,0,0)\",\n              \"rgb(0,24,168)\",\n              \"rgb(0,160,226)\",\n              \"rgb(106,187,170)\"\n            ]\n          }\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Query Widgets",
        "description": "Drag the sliders to highlight points.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Drag the sliders to highlight points.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [{\"calculate\": \"year(datum.Year)\", \"as\": \"Year\"}],\n  \"layer\": [{\n    \"params\": [{\n      \"name\": \"CylYr\",\n      \"value\": [{\"Cylinders\": 4, \"Year\": 1977}],\n      \"select\": {\"type\": \"point\", \"fields\": [\"Cylinders\", \"Year\"]},\n      \"bind\": {\n        \"Cylinders\": {\"input\": \"range\", \"min\": 3, \"max\": 8, \"step\": 1},\n        \"Year\": {\"input\": \"range\", \"min\": 1969, \"max\": 1981, \"step\": 1}\n      }\n    }],\n    \"mark\": \"circle\",\n    \"encoding\": {\n      \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n      \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n      \"color\": {\n        \"condition\": {\"param\": \"CylYr\", \"field\": \"Origin\", \"type\": \"nominal\"},\n        \"value\": \"grey\"\n      }\n    }\n  }, {\n    \"transform\": [{\"filter\": {\"param\": \"CylYr\"}}],\n    \"mark\": \"circle\",\n    \"encoding\": {\n      \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n      \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n      \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n      \"size\": {\"value\": 100}\n    }\n  }]\n}"
    },
    {
        "name": "Normalized (Percentage) Stacked Bar Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"}\n  ],\n  \"mark\": \"bar\",\n  \"width\": {\"step\": 17},\n  \"encoding\": {\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"people\",\n      \"title\": \"population\",\n      \"stack\":  \"normalize\"\n    },\n    \"x\": {\"field\": \"age\"},\n    \"color\": {\n      \"field\": \"gender\",\n      \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]}\n    }\n  }\n}"
    },
    {
        "name": "Cumulative Frequency Distribution",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"transform\": [{\n    \"aggregate\":[{\"op\": \"count\", \"field\": \"*\", \"as\": \"count\"}],\n    \"groupby\": [\"IMDB Rating\"]\n  },\n  {\n    \"sort\": [{\"field\": \"IMDB Rating\"}],\n    \"window\": [{\"op\": \"sum\", \"field\": \"count\", \"as\": \"Cumulative Count\"}],\n    \"frame\": [null, 0]\n  }],\n  \"mark\": \"area\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"IMDB Rating\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\n      \"field\": \"Cumulative Count\",\n      \"type\": \"quantitative\"\n    }\n  }\n}"
    },
    {
        "name": "Bubble Plot (Natural Disasters)",
        "description": "Visualization of global deaths from natural disasters. Copy of chart from Our World in Data.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/disasters.csv\"\n  },\n  \"width\": 600,\n  \"height\": 400,\n  \"transform\": [\n    {\"filter\": \"datum.Entity !== 'All natural disasters'\"}\n  ],\n  \"mark\": {\n    \"type\": \"circle\",\n    \"opacity\": 0.8,\n    \"stroke\": \"black\",\n    \"strokeWidth\": 1\n  },\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"Year\",\n      \"type\": \"temporal\",\n      \"axis\": {\"grid\": false}\n    },\n    \"y\": {\"field\": \"Entity\", \"type\": \"nominal\", \"axis\": {\"title\": \"\"}},\n    \"size\": {\n      \"field\": \"Deaths\",\n      \"type\": \"quantitative\",\n      \"title\": \"Annual Global Deaths\",\n      \"legend\": {\"clipHeight\": 30},\n      \"scale\": {\"rangeMax\": 5000}\n    },\n    \"color\": {\"field\": \"Entity\", \"type\": \"nominal\", \"legend\": null}\n  }\n}"
    },
    {
        "name": "Line Chart with Conditional Axis Properties",
        "description": "Line chart with conditional axis ticks, labels, and grid.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Line chart with conditional axis ticks, labels, and grid.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [\n  \t{\"filter\": \"datum.symbol==='GOOG'\"},\n  \t{\"filter\": {\"field\": \"date\", \"timeUnit\": \"year\", \"range\": [2006, 2007]}}\n  ],\n  \"width\": 400,\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"date\", \"type\": \"temporal\",\n      \"axis\": {\n        \"tickCount\": 8,\n        \"labelAlign\": \"left\",\n        \"labelExpr\": \"[timeFormat(datum.value, '%b'), timeFormat(datum.value, '%m') == '01' ? timeFormat(datum.value, '%Y') : '']\",\n        \"labelOffset\": 4,\n        \"labelPadding\": -24,\n        \"tickSize\": 30,\n        \"gridDash\": {\n          \"condition\": {\"test\": {\"field\": \"value\", \"timeUnit\": \"month\", \"equal\": 1}, \"value\": []},\n          \"value\": [2,2]\n        },\n        \"tickDash\": {\n          \"condition\": {\"test\": {\"field\": \"value\", \"timeUnit\": \"month\", \"equal\": 1}, \"value\": []},\n          \"value\": [2,2]\n        }\n      }\n    },\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n  },\n  \"config\": {\n    \"axis\": {\n      \"domainColor\": \"#ddd\",\n      \"tickColor\": \"#ddd\"\n    }\n  }\n}"
    },
    {
        "name": "Layering Rolling Averages over Raw Values",
        "description": "Plot showing a 30 day rolling average with raw values in the background.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Plot showing a 30 day rolling average with raw values in the background.\",\n  \"width\": 400,\n  \"height\": 300,\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"transform\": [{\n    \"window\": [\n      {\n        \"field\": \"temp_max\",\n        \"op\": \"mean\",\n        \"as\": \"rolling_mean\"\n      }\n    ],\n    \"frame\": [-15, 15]\n  }],\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"title\": \"Date\"},\n    \"y\": {\"type\": \"quantitative\", \"axis\": {\"title\": \"Max Temperature and Rolling Mean\"}}\n  },\n  \"layer\": [\n    {\n      \"mark\": {\"type\": \"point\", \"opacity\": 0.3},\n      \"encoding\": {\n        \"y\": {\"field\": \"temp_max\", \"title\": \"Max Temperature\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"line\", \"color\": \"red\", \"size\": 3},\n      \"encoding\": {\n        \"y\": {\"field\": \"rolling_mean\", \"title\": \"Rolling Mean of Max Temperature\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Compact Trellis Grid of Bar Charts",
        "description": "A simple grid of bar charts to compare performance data.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple grid of bar charts to compare performance data.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"a1\", \"b\": \"b1\", \"c\": \"x\", \"p\": \"0.14\"},\n      {\"a\": \"a1\", \"b\": \"b1\", \"c\": \"y\", \"p\": \"0.60\"},\n      {\"a\": \"a1\", \"b\": \"b1\", \"c\": \"z\", \"p\": \"0.03\"},\n      {\"a\": \"a1\", \"b\": \"b2\", \"c\": \"x\", \"p\": \"0.80\"},\n      {\"a\": \"a1\", \"b\": \"b2\", \"c\": \"y\", \"p\": \"0.38\"},\n      {\"a\": \"a1\", \"b\": \"b2\", \"c\": \"z\", \"p\": \"0.55\"},\n      {\"a\": \"a1\", \"b\": \"b3\", \"c\": \"x\", \"p\": \"0.11\"},\n      {\"a\": \"a1\", \"b\": \"b3\", \"c\": \"y\", \"p\": \"0.58\"},\n      {\"a\": \"a1\", \"b\": \"b3\", \"c\": \"z\", \"p\": \"0.79\"},\n      {\"a\": \"a2\", \"b\": \"b1\", \"c\": \"x\", \"p\": \"0.83\"},\n      {\"a\": \"a2\", \"b\": \"b1\", \"c\": \"y\", \"p\": \"0.87\"},\n      {\"a\": \"a2\", \"b\": \"b1\", \"c\": \"z\", \"p\": \"0.67\"},\n      {\"a\": \"a2\", \"b\": \"b2\", \"c\": \"x\", \"p\": \"0.97\"},\n      {\"a\": \"a2\", \"b\": \"b2\", \"c\": \"y\", \"p\": \"0.84\"},\n      {\"a\": \"a2\", \"b\": \"b2\", \"c\": \"z\", \"p\": \"0.90\"},\n      {\"a\": \"a2\", \"b\": \"b3\", \"c\": \"x\", \"p\": \"0.74\"},\n      {\"a\": \"a2\", \"b\": \"b3\", \"c\": \"y\", \"p\": \"0.64\"},\n      {\"a\": \"a2\", \"b\": \"b3\", \"c\": \"z\", \"p\": \"0.19\"},\n      {\"a\": \"a3\", \"b\": \"b1\", \"c\": \"x\", \"p\": \"0.57\"},\n      {\"a\": \"a3\", \"b\": \"b1\", \"c\": \"y\", \"p\": \"0.35\"},\n      {\"a\": \"a3\", \"b\": \"b1\", \"c\": \"z\", \"p\": \"0.49\"},\n      {\"a\": \"a3\", \"b\": \"b2\", \"c\": \"x\", \"p\": \"0.91\"},\n      {\"a\": \"a3\", \"b\": \"b2\", \"c\": \"y\", \"p\": \"0.38\"},\n      {\"a\": \"a3\", \"b\": \"b2\", \"c\": \"z\", \"p\": \"0.91\"},\n      {\"a\": \"a3\", \"b\": \"b3\", \"c\": \"x\", \"p\": \"0.99\"},\n      {\"a\": \"a3\", \"b\": \"b3\", \"c\": \"y\", \"p\": \"0.80\"},\n      {\"a\": \"a3\", \"b\": \"b3\", \"c\": \"z\", \"p\": \"0.37\"}\n    ]\n  },\n  \"width\": 60,\n  \"height\": {\"step\": 8},\n  \"spacing\": 5,\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"y\": {\"field\": \"c\", \"type\": \"nominal\", \"axis\": null},\n    \"x\": {\n      \"field\": \"p\",\n      \"type\": \"quantitative\",\n      \"axis\": {\"format\": \"%\"},\n      \"title\": null\n    },\n    \"color\": {\n      \"field\": \"c\",\n      \"type\": \"nominal\",\n      \"legend\": {\"orient\": \"bottom\", \"titleOrient\": \"left\"},\n      \"title\": \"settings\"\n    },\n    \"row\": {\"field\": \"a\", \"title\": \"Factor A\", \"header\": {\"labelAngle\": 0}},\n    \"column\": {\"field\": \"b\", \"title\": \"Factor B\"}\n  }\n}"
    },
    {
        "name": "Projection explorer",
        "description": "Compare different projections.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 500,\n  \"height\": 300,\n  \"params\": [\n    {\n      \"name\": \"projection\",\n      \"value\": \"equalEarth\",\n      \"bind\": {\n        \"input\": \"select\",\n        \"options\": [\n          \"albers\",\n          \"albersUsa\",\n          \"azimuthalEqualArea\",\n          \"azimuthalEquidistant\",\n          \"conicConformal\",\n          \"conicEqualArea\",\n          \"conicEquidistant\",\n          \"equalEarth\",\n          \"equirectangular\",\n          \"gnomonic\",\n          \"mercator\",\n          \"naturalEarth1\",\n          \"orthographic\",\n          \"stereographic\",\n          \"transverseMercator\"\n        ]\n      }\n    }\n  ],\n  \"data\": {\n    \"url\": \"data/world-110m.json\",\n    \"format\": {\"type\": \"topojson\", \"feature\": \"countries\"}\n  },\n  \"projection\": {\"type\": {\"expr\": \"projection\"}},\n  \"mark\": {\"type\": \"geoshape\", \"fill\": \"lightgray\", \"stroke\": \"gray\"}\n}"
    },
    {
        "name": "Interactive Average",
        "description": "The plot below uses an interval selection, which causes the chart to include an interactive brush (shown in grey). The brush selection parameterizes the red guideline, which visualizes the average value within the selected interval.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"layer\": [{\n    \"params\": [{\n      \"name\": \"brush\",\n      \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n    }],\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\n        \"timeUnit\": \"month\",\n        \"field\": \"date\",\n        \"type\": \"ordinal\"\n      },\n      \"y\": {\n        \"aggregate\": \"mean\",\n        \"field\": \"precipitation\",\n        \"type\": \"quantitative\"\n      },\n      \"opacity\": {\n        \"condition\": {\n          \"param\": \"brush\", \"value\": 1\n        },\n        \"value\": 0.7\n      }\n    }\n  }, {\n    \"transform\": [{\n      \"filter\": {\"param\": \"brush\"}\n    }],\n    \"mark\": \"rule\",\n    \"encoding\": {\n      \"y\": {\n        \"aggregate\": \"mean\",\n        \"field\": \"precipitation\",\n        \"type\": \"quantitative\"\n      },\n      \"color\": {\"value\": \"firebrick\"},\n      \"size\": {\"value\": 3}\n    }\n  }]\n}"
    },
    {
        "name": "Normalized (Percentage) Stacked Bar Chart With Labels",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"}\n  ],\n  \"height\": {\"step\": 17},\n  \"encoding\": {\n    \"y\": {\"field\": \"age\"}\n  },\n  \"layer\": [{\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\n        \"aggregate\": \"sum\", \"field\": \"people\",\n        \"title\": \"population\",\n        \"stack\":  \"normalize\"\n      },\n      \"color\": {\n        \"field\": \"gender\",\n        \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]}\n      }\n    }\n  }, {\n    \"mark\": {\"type\": \"text\", \"opacity\": 0.9, \"color\": \"white\"},\n    \"encoding\": {\n      \"x\": {\n        \"aggregate\": \"sum\", \"field\": \"people\",\n        \"title\": \"population\",\n        \"stack\":  \"normalize\",\n        \"bandPosition\": 0.5\n      },\n      \"text\": {\n        \"aggregate\": \"sum\", \"field\": \"people\",\n        \"title\": \"population\"\n      },\n      \"detail\": {\n        \"field\": \"gender\"\n      }\n    }\n  }]\n}"
    },
    {
        "name": "Layered Histogram and Cumulative Histogram",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"transform\": [{\n    \"bin\": true,\n    \"field\": \"IMDB Rating\",\n    \"as\": \"bin_IMDB_Rating\"\n  }, {\n    \"aggregate\": [{\"op\": \"count\", \"as\": \"count\"}],\n    \"groupby\": [\"bin_IMDB_Rating\", \"bin_IMDB_Rating_end\"]\n  }, {\n    \"filter\": \"datum.bin_IMDB_Rating !== null\"\n  }, {\n    \"sort\": [{\"field\": \"bin_IMDB_Rating\"}],\n    \"window\": [{\"op\": \"sum\", \"field\": \"count\", \"as\": \"Cumulative Count\"}],\n    \"frame\": [null, 0]\n  }],\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"bin_IMDB_Rating\", \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false},\n      \"title\": \"IMDB Rating\",\n      \"bin\": \"binned\"\n    },\n    \"x2\": {\"field\": \"bin_IMDB_Rating_end\"}\n  },\n  \"layer\": [{\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"y\": {\"field\": \"Cumulative Count\", \"type\": \"quantitative\"}\n    }\n  }, {\n    \"mark\": {\"type\": \"bar\", \"color\": \"yellow\", \"opacity\": 0.5},\n    \"encoding\": {\n      \"y\": {\"field\": \"count\", \"type\": \"quantitative\"}\n    }\n  }]\n}"
    },
    {
        "name": "Scatter Plot with Text Marks",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [{\n    \"calculate\": \"datum.Origin[0]\",\n    \"as\": \"OriginInitial\"\n  }],\n  \"mark\": \"text\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n    \"text\": {\"field\": \"OriginInitial\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Distributions and Medians of Likert Scale Ratings",
        "description": "Distributions and Medians of Likert Scale Ratings. (Figure 9 from @jhoffswell and @zcliu\u2019s \u2018Interactive Repair of Tables Extracted from PDF Documents on Mobile Devices\u2019 \u2013 http://idl.cs.washington.edu/files/2019-InteractiveTableRepair-CHI.pdf).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Likert Scale Ratings Distributions and Medians. (Figure 9 from @jhoffswell and @zcliu's ['Interactive Repair of Tables Extracted from PDF Documents on Mobile Devices'](https://idl.cs.washington.edu/files/2019-InteractiveTableRepair-CHI.pdf))\",\n  \"datasets\": {\n    \"medians\": [\n      {\"name\": \"Identify Errors:\", \"median\": 1.999976, \"lo\": \"Easy\", \"hi\": \"Hard\"},\n      {\"name\": \"Fix Errors:\", \"median\": 2, \"lo\": \"Easy\", \"hi\": \"Hard\"},\n      {\"name\": \"Easier to Fix:\", \"median\": 1.999969, \"lo\": \"Toolbar\", \"hi\": \"Gesture\"},\n      {\"name\": \"Faster to Fix:\", \"median\": 2.500045, \"lo\": \"Toolbar\", \"hi\": \"Gesture\"},\n      {\"name\": \"Easier on Phone:\", \"median\": 1.500022, \"lo\": \"Toolbar\", \"hi\": \"Gesture\"},\n      {\"name\": \"Easier on Tablet:\", \"median\": 2.99998, \"lo\": \"Toolbar\", \"hi\": \"Gesture\"},\n      {\"name\": \"Device Preference:\", \"median\": 4.500007, \"lo\": \"Phone\", \"hi\": \"Tablet\"}\n    ],\n    \"values\": [\n      {\"value\": \"P1\", \"name\": \"Participant ID\", \"id\": \"P1\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P1\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P1\"},\n      {\"value\": 3, \"name\": \"Easier to Fix:\", \"id\": \"P1\"},\n      {\"value\": 4, \"name\": \"Faster to Fix:\", \"id\": \"P1\"},\n      {\"value\": 2, \"name\": \"Easier on Phone:\", \"id\": \"P1\"},\n      {\"value\": 5, \"name\": \"Easier on Tablet:\", \"id\": \"P1\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P1\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P1\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P1\"},\n      {\"value\": \"P2\", \"name\": \"Participant ID\", \"id\": \"P2\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P2\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P2\"},\n      {\"value\": 4, \"name\": \"Easier to Fix:\", \"id\": \"P2\"},\n      {\"value\": 5, \"name\": \"Faster to Fix:\", \"id\": \"P2\"},\n      {\"value\": 5, \"name\": \"Easier on Phone:\", \"id\": \"P2\"},\n      {\"value\": 5, \"name\": \"Easier on Tablet:\", \"id\": \"P2\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P2\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P2\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P2\"},\n      {\"value\": \"P3\", \"name\": \"Participant ID\", \"id\": \"P3\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P3\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P3\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P3\"},\n      {\"value\": 1, \"name\": \"Faster to Fix:\", \"id\": \"P3\"},\n      {\"value\": 2, \"name\": \"Easier on Phone:\", \"id\": \"P3\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P3\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P3\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P3\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P3\"},\n      {\"value\": \"P4\", \"name\": \"Participant ID\", \"id\": \"P4\"},\n      {\"value\": 3, \"name\": \"Identify Errors:\", \"id\": \"P4\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P4\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P4\"},\n      {\"value\": 2, \"name\": \"Faster to Fix:\", \"id\": \"P4\"},\n      {\"value\": 4, \"name\": \"Easier on Phone:\", \"id\": \"P4\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P4\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P4\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P4\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P4\"},\n      {\"value\": \"P5\", \"name\": \"Participant ID\", \"id\": \"P5\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P5\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P5\"},\n      {\"value\": 4, \"name\": \"Easier to Fix:\", \"id\": \"P5\"},\n      {\"value\": 4, \"name\": \"Faster to Fix:\", \"id\": \"P5\"},\n      {\"value\": 4, \"name\": \"Easier on Phone:\", \"id\": \"P5\"},\n      {\"value\": 5, \"name\": \"Easier on Tablet:\", \"id\": \"P5\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P5\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P5\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P5\"},\n      {\"value\": \"P6\", \"name\": \"Participant ID\", \"id\": \"P6\"},\n      {\"value\": 1, \"name\": \"Identify Errors:\", \"id\": \"P6\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P6\"},\n      {\"value\": 3, \"name\": \"Easier to Fix:\", \"id\": \"P6\"},\n      {\"value\": 4, \"name\": \"Faster to Fix:\", \"id\": \"P6\"},\n      {\"value\": 4, \"name\": \"Easier on Phone:\", \"id\": \"P6\"},\n      {\"value\": 4, \"name\": \"Easier on Tablet:\", \"id\": \"P6\"},\n      {\"value\": 4, \"name\": \"Device Preference:\", \"id\": \"P6\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P6\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P6\"},\n      {\"value\": \"P7\", \"name\": \"Participant ID\", \"id\": \"P7\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P7\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P7\"},\n      {\"value\": 4, \"name\": \"Easier to Fix:\", \"id\": \"P7\"},\n      {\"value\": 5, \"name\": \"Faster to Fix:\", \"id\": \"P7\"},\n      {\"value\": 3, \"name\": \"Easier on Phone:\", \"id\": \"P7\"},\n      {\"value\": 2, \"name\": \"Easier on Tablet:\", \"id\": \"P7\"},\n      {\"value\": 4, \"name\": \"Device Preference:\", \"id\": \"P7\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P7\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P7\"},\n      {\"value\": \"P8\", \"name\": \"Participant ID\", \"id\": \"P8\"},\n      {\"value\": 3, \"name\": \"Identify Errors:\", \"id\": \"P8\"},\n      {\"value\": 1, \"name\": \"Fix Errors:\", \"id\": \"P8\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P8\"},\n      {\"value\": 4, \"name\": \"Faster to Fix:\", \"id\": \"P8\"},\n      {\"value\": 2, \"name\": \"Easier on Phone:\", \"id\": \"P8\"},\n      {\"value\": 5, \"name\": \"Easier on Tablet:\", \"id\": \"P8\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P8\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P8\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P8\"},\n      {\"value\": \"P9\", \"name\": \"Participant ID\", \"id\": \"P9\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P9\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P9\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P9\"},\n      {\"value\": 4, \"name\": \"Faster to Fix:\", \"id\": \"P9\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P9\"},\n      {\"value\": 4, \"name\": \"Easier on Tablet:\", \"id\": \"P9\"},\n      {\"value\": 4, \"name\": \"Device Preference:\", \"id\": \"P9\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P9\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P9\"},\n      {\"value\": \"P10\", \"name\": \"Participant ID\", \"id\": \"P10\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P10\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Easier to Fix:\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Faster to Fix:\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P10\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P10\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P10\"},\n      {\"value\": \"P11\", \"name\": \"Participant ID\", \"id\": \"P11\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P11\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P11\"},\n      {\"value\": 1, \"name\": \"Easier to Fix:\", \"id\": \"P11\"},\n      {\"value\": 1, \"name\": \"Faster to Fix:\", \"id\": \"P11\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P11\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P11\"},\n      {\"value\": 4, \"name\": \"Device Preference:\", \"id\": \"P11\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P11\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P11\"},\n      {\"value\": \"P12\", \"name\": \"Participant ID\", \"id\": \"P12\"},\n      {\"value\": 1, \"name\": \"Identify Errors:\", \"id\": \"P12\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P12\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P12\"},\n      {\"value\": 3, \"name\": \"Faster to Fix:\", \"id\": \"P12\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P12\"},\n      {\"value\": 3, \"name\": \"Easier on Tablet:\", \"id\": \"P12\"},\n      {\"value\": 3, \"name\": \"Device Preference:\", \"id\": \"P12\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P12\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P12\"},\n      {\"value\": \"P13\", \"name\": \"Participant ID\", \"id\": \"P13\"},\n      {\"value\": 2, \"name\": \"Identify Errors:\", \"id\": \"P13\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P13\"},\n      {\"value\": 1, \"name\": \"Easier to Fix:\", \"id\": \"P13\"},\n      {\"value\": 1, \"name\": \"Faster to Fix:\", \"id\": \"P13\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P13\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P13\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P13\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P13\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P13\"},\n      {\"value\": \"P14\", \"name\": \"Participant ID\", \"id\": \"P14\"},\n      {\"value\": 3, \"name\": \"Identify Errors:\", \"id\": \"P14\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P14\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P14\"},\n      {\"value\": 2, \"name\": \"Faster to Fix:\", \"id\": \"P14\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P14\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P14\"},\n      {\"value\": 1, \"name\": \"Device Preference:\", \"id\": \"P14\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P14\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P14\"},\n      {\"value\": \"P15\", \"name\": \"Participant ID\", \"id\": \"P15\"},\n      {\"value\": 4, \"name\": \"Identify Errors:\", \"id\": \"P15\"},\n      {\"value\": 5, \"name\": \"Fix Errors:\", \"id\": \"P15\"},\n      {\"value\": 1, \"name\": \"Easier to Fix:\", \"id\": \"P15\"},\n      {\"value\": 1, \"name\": \"Faster to Fix:\", \"id\": \"P15\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P15\"},\n      {\"value\": 1, \"name\": \"Easier on Tablet:\", \"id\": \"P15\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P15\"},\n      {\"value\": 1, \"name\": \"Tablet_First\", \"id\": \"P15\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P15\"},\n      {\"value\": \"P16\", \"name\": \"Participant ID\", \"id\": \"P16\"},\n      {\"value\": 1, \"name\": \"Identify Errors:\", \"id\": \"P16\"},\n      {\"value\": 3, \"name\": \"Fix Errors:\", \"id\": \"P16\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P16\"},\n      {\"value\": 2, \"name\": \"Faster to Fix:\", \"id\": \"P16\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P16\"},\n      {\"value\": 4, \"name\": \"Easier on Tablet:\", \"id\": \"P16\"},\n      {\"value\": 5, \"name\": \"Device Preference:\", \"id\": \"P16\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P16\"},\n      {\"value\": 1, \"name\": \"Toolbar_First\", \"id\": \"P16\"},\n      {\"value\": \"P17\", \"name\": \"Participant ID\", \"id\": \"P17\"},\n      {\"value\": 3, \"name\": \"Identify Errors:\", \"id\": \"P17\"},\n      {\"value\": 2, \"name\": \"Fix Errors:\", \"id\": \"P17\"},\n      {\"value\": 2, \"name\": \"Easier to Fix:\", \"id\": \"P17\"},\n      {\"value\": 2, \"name\": \"Faster to Fix:\", \"id\": \"P17\"},\n      {\"value\": 1, \"name\": \"Easier on Phone:\", \"id\": \"P17\"},\n      {\"value\": 3, \"name\": \"Easier on Tablet:\", \"id\": \"P17\"},\n      {\"value\": 2, \"name\": \"Device Preference:\", \"id\": \"P17\"},\n      {\"value\": 0, \"name\": \"Tablet_First\", \"id\": \"P17\"},\n      {\"value\": 0, \"name\": \"Toolbar_First\", \"id\": \"P17\"}\n    ]\n  },\n  \"data\": {\"name\": \"medians\"},\n  \"title\": \"Questionnaire Ratings\",\n  \"width\": 250,\n  \"height\": 175,\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"name\",\n      \"type\": \"nominal\",\n      \"sort\": null,\n      \"axis\": {\n        \"domain\": false,\n        \"offset\": 50,\n        \"labelFontWeight\": \"bold\",\n        \"ticks\": false,\n        \"grid\": true,\n        \"title\": null\n      }\n    },\n    \"x\": {\n      \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [0, 6]},\n      \"axis\": {\"grid\": false, \"values\": [1, 2, 3, 4, 5], \"title\": null}\n    }\n  },\n  \"view\": {\"stroke\": null},\n  \"layer\": [\n    {\n      \"mark\": \"circle\",\n      \"data\": {\"name\": \"values\"},\n      \"transform\": [\n        {\"filter\": \"datum.name != 'Toolbar_First'\"},\n        {\"filter\": \"datum.name != 'Tablet_First'\"},\n        {\"filter\": \"datum.name != 'Participant ID'\"}\n      ],\n      \"encoding\": {\n        \"x\": {\"field\": \"value\"},\n        \"size\": {\n          \"aggregate\": \"count\",\n          \"type\": \"quantitative\",\n          \"title\": \"Number of Ratings\",\n          \"legend\": {\"offset\": 75}\n        },\n        \"color\": {\"value\": \"#6EB4FD\"}\n      }\n    },\n    {\n      \"mark\": \"tick\",\n      \"encoding\": {\n        \"x\": {\"field\": \"median\"},\n        \"color\": {\"value\": \"black\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"x\": -5, \"align\": \"right\"},\n      \"encoding\": {\n        \"text\": {\"field\": \"lo\"}\n      }\n    },\n    {\n      \"mark\": {\"type\": \"text\", \"x\": 255, \"align\": \"left\"},\n      \"encoding\": {\n        \"text\": {\"field\": \"hi\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Earthquakes Example",
        "description": "Interactive globe visualization of earthquakes",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 300,\n  \"height\": 300,\n  \"projection\": {\n    \"type\": \"orthographic\",\n    \"rotate\": {\"expr\": \"[rotate0, rotate1, 0]\"}\n  },\n  \"params\": [\n    {\n      \"name\": \"rotate0\",\n      \"value\": 0,\n      \"bind\": {\"input\": \"range\", \"min\": -90, \"max\": 90, \"step\": 1}\n    },\n    {\n      \"name\": \"rotate1\",\n      \"value\": 0,\n      \"bind\": {\"input\": \"range\", \"min\": -90, \"max\": 90, \"step\": 1}\n    },\n    {\n      \"name\": \"earthquakeSize\",\n      \"value\": 6,\n      \"bind\": {\"input\": \"range\", \"min\": 0, \"max\": 12, \"step\": 0.1}\n    }\n  ],\n  \"layer\": [\n    {\n      \"data\": {\"sphere\": true},\n      \"mark\": {\"type\": \"geoshape\", \"fill\": \"aliceblue\"}\n    },\n    {\n      \"data\": {\n        \"name\": \"world\",\n        \"url\": \"data/world-110m.json\",\n        \"format\": {\"type\": \"topojson\", \"feature\": \"countries\"}\n      },\n      \"mark\": {\"type\": \"geoshape\", \"fill\": \"mintcream\", \"stroke\": \"black\"}\n    },\n    {\n      \"data\": {\n        \"name\": \"earthquakes\",\n        \"url\": \"data/earthquakes.json\",\n        \"format\": {\"type\": \"json\", \"property\": \"features\"}\n      },\n      \"transform\": [\n        {\"calculate\": \"datum.geometry.coordinates[0]\", \"as\": \"longitude\"},\n        {\"calculate\": \"datum.geometry.coordinates[1]\", \"as\": \"latitude\"},\n        {\n          \"filter\": \"(rotate0 * -1) - 90 &lt; datum.longitude &amp;&amp; datum.longitude &lt; (rotate0 * -1) + 90 &amp;&amp; (rotate1 * -1) - 90 &lt; datum.latitude &amp;&amp; datum.latitude &lt; (rotate1 * -1) + 90\"\n        },\n        {\"calculate\": \"datum.properties.mag\", \"as\": \"magnitude\"}\n      ],\n      \"mark\": {\"type\": \"circle\", \"color\": \"red\", \"opacity\": 0.25},\n      \"encoding\": {\n        \"longitude\": {\"field\": \"longitude\", \"type\": \"quantitative\"},\n        \"latitude\": {\"field\": \"latitude\", \"type\": \"quantitative\"},\n        \"size\": {\n          \"legend\": null,\n          \"field\": \"magnitude\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"sqrt\",\n            \"domain\": [0, 100],\n            \"range\": [0, {\"expr\": \"pow(earthquakeSize, 3)\"}]\n          }\n        },\n        \"tooltip\": [{\"field\": \"magnitude\"}]\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Gantt Chart (Ranged Bar Marks)",
        "description": "A simple bar chart with ranged data (aka Gantt Chart).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A simple bar chart with ranged data (aka Gantt Chart).\",\n  \"data\": {\n    \"values\": [\n      {\"task\": \"A\", \"start\": 1, \"end\": 3},\n      {\"task\": \"B\", \"start\": 3, \"end\": 8},\n      {\"task\": \"C\", \"start\": 8, \"end\": 10}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"y\": {\"field\": \"task\", \"type\": \"ordinal\"},\n    \"x\": {\"field\": \"start\", \"type\": \"quantitative\"},\n    \"x2\": {\"field\": \"end\"}\n  }\n}"
    },
    {
        "name": "Wilkinson Dot Plot",
        "description": "A Wilkinson Dot Plot",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A Wilkinson Dot Plot\",\n  \"height\": 100,\n  \"data\": {\n    \"values\": [\n      1,1,1,1,1,1,1,1,1,1,\n      2,2,2,\n      3,3,\n      4,4,4,4,4,4\n    ]\n  },\n  \"transform\": [{\n    \"window\": [{\"op\": \"rank\", \"as\": \"id\"}],\n    \"groupby\": [\"data\"]\n  }],\n  \"mark\": {\n  \t\"type\": \"circle\",\n  \t\"opacity\": 1\n  },\n  \"encoding\": {\n    \"x\": {\"field\": \"data\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"id\", \"type\": \"ordinal\", \"axis\": null, \"sort\": \"descending\"}\n  }\n}"
    },
    {
        "name": "Image-based Scatter Plot",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"x\": 0.5, \"y\": 0.5, \"img\": \"data/ffox.png\"},\n      {\"x\": 1.5, \"y\": 1.5, \"img\": \"data/gimp.png\"},\n      {\"x\": 2.5, \"y\": 2.5, \"img\": \"data/7zip.png\"}\n    ]\n  },\n  \"mark\": {\"type\": \"image\", \"width\": 50, \"height\": 50},\n  \"encoding\": {\n    \"x\": {\"field\": \"x\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"y\", \"type\": \"quantitative\"},\n    \"url\": {\"field\": \"img\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Bump Chart",
        "description": "Bump chart",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Bump chart\",\n  \"data\": {\n    \"values\": [\n      {\"build\": 1, \"result\": \"PASSED\"},\n      {\"build\": 2, \"result\": \"PASSED\"},\n      {\"build\": 3, \"result\": \"FAILED\"},\n      {\"build\": 4, \"result\": \"FAILED\"},\n      {\"build\": 5, \"result\": \"SKIPPED\"},\n      {\"build\": 6, \"result\": \"PASSED\"},\n      {\"build\": 7, \"result\": \"PASSED\"},\n      {\"build\": 8, \"result\": \"FAILED\"},\n      {\"build\": 9, \"result\": \"PASSED\"},\n      {\"build\": 10, \"result\": \"PASSED\"},\n      {\"build\": 11, \"result\": \"SKIPPED\"},\n      {\"build\": 12, \"result\": \"PASSED\"},\n      {\"build\": 13, \"result\": \"PASSED\"},\n      {\"build\": 14, \"result\": \"FAILED\"},\n      {\"build\": 15, \"result\": \"PASSED\"},\n      {\"build\": 16, \"result\": \"SKIPPED\"}\n    ]\n  },\n  \"mark\": {\"type\": \"line\", \"point\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"build\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"result\", \"type\": \"nominal\"},\n    \"order\": {\"field\": \"build\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Parallel Coordinate Plot",
        "description": "Though Vega-Lite supports only one scale per axes, one can create a parallel coordinate plot by folding variables, using joinaggregate to normalize their values and using ticks and rules to manually create axes.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Though Vega-Lite supports only one scale per axes, one can create a parallel coordinate plot by folding variables, using `joinaggregate` to normalize their values and using ticks and rules to manually create axes.\",\n  \"data\": {\n    \"url\": \"data/penguins.json\"\n  },\n  \"width\": 600,\n  \"height\": 300,\n  \"transform\": [\n    {\"filter\": \"datum['Beak Length (mm)']\"},\n    {\"window\": [{\"op\": \"count\", \"as\": \"index\"}]},\n    {\"fold\": [\"Beak Length (mm)\", \"Beak Depth (mm)\", \"Flipper Length (mm)\", \"Body Mass (g)\"]},\n    {\n      \"joinaggregate\": [\n        {\"op\": \"min\", \"field\": \"value\", \"as\": \"min\"},\n        {\"op\": \"max\", \"field\": \"value\", \"as\": \"max\"}\n      ],\n      \"groupby\": [\"key\"]\n    },\n    {\n      \"calculate\": \"(datum.value - datum.min) / (datum.max-datum.min)\",\n      \"as\": \"norm_val\"\n    },\n    {\n      \"calculate\": \"(datum.min + datum.max) / 2\",\n      \"as\": \"mid\"\n    }\n  ],\n  \"layer\": [{\n    \"mark\": {\"type\": \"rule\", \"color\": \"#ccc\"},\n    \"encoding\": {\n      \"detail\": {\"aggregate\": \"count\"},\n      \"x\": {\"field\": \"key\"}\n    }\n  }, {\n    \"mark\": \"line\",\n    \"encoding\": {\n      \"color\": {\"type\": \"nominal\", \"field\": \"Species\"},\n      \"detail\": {\"type\": \"nominal\", \"field\": \"index\"},\n      \"opacity\": {\"value\": 0.3},\n      \"x\": {\"type\": \"nominal\", \"field\": \"key\"},\n      \"y\": {\"type\": \"quantitative\", \"field\": \"norm_val\", \"axis\": null},\n      \"tooltip\": [{\n        \"type\": \"quantitative\",\n        \"field\": \"Beak Length (mm)\"\n      }, {\n        \"type\": \"quantitative\",\n        \"field\": \"Beak Depth (mm)\"\n      }, {\n        \"type\": \"quantitative\",\n        \"field\": \"Flipper Length (mm)\"\n      }, {\n        \"type\": \"quantitative\",\n        \"field\": \"Body Mass (g)\"\n      }]\n    }\n  }, {\n    \"encoding\": {\n      \"x\": {\"type\": \"nominal\", \"field\": \"key\"},\n      \"y\": {\"value\": 0}\n    },\n    \"layer\": [{\n      \"mark\": {\"type\": \"text\", \"style\": \"label\"},\n      \"encoding\": {\n        \"text\": {\"aggregate\": \"max\", \"field\": \"max\"}\n      }\n    }, {\n      \"mark\": {\"type\": \"tick\", \"style\": \"tick\", \"size\": 8, \"color\": \"#ccc\"}\n    }]\n  }, {\n    \"encoding\": {\n      \"x\": {\"type\": \"nominal\", \"field\": \"key\"},\n      \"y\": {\"value\": 150}\n    },\n    \"layer\": [{\n      \"mark\": {\"type\": \"text\", \"style\": \"label\"},\n      \"encoding\": {\n        \"text\": {\"aggregate\": \"min\", \"field\": \"mid\"}\n      }\n    }, {\n      \"mark\": {\"type\": \"tick\", \"style\": \"tick\", \"size\": 8, \"color\": \"#ccc\"}\n    }]\n  }, {\n    \"encoding\": {\n      \"x\": {\"type\": \"nominal\", \"field\": \"key\"},\n      \"y\": {\"value\": 300}\n    },\n    \"layer\": [{\n      \"mark\": {\"type\": \"text\", \"style\": \"label\"},\n      \"encoding\": {\n        \"text\": {\"aggregate\": \"min\", \"field\": \"min\"}\n      }\n    }, {\n      \"mark\": {\"type\": \"tick\", \"style\": \"tick\", \"size\": 8, \"color\": \"#ccc\"}\n    }]\n  }],\n  \"config\": {\n    \"axisX\": {\"domain\": false, \"labelAngle\": 0, \"tickColor\": \"#ccc\", \"title\": null},\n    \"view\": {\"stroke\": null},\n    \"style\": {\n      \"label\": {\"baseline\": \"middle\", \"align\": \"right\", \"dx\": -5},\n      \"tick\": {\"orient\": \"horizontal\"}\n    }\n  }\n}"
    },
    {
        "name": "Comparative Likert Scale Ratings",
        "description": "Comparing Likert scale ratings between two conditions. (Figure 10. from @kanitw et al.\u2019s \u201cVoyager 2: Augmenting Visual Analysis with Partial View Specifications\u201d \u2013 http://idl.cs.washington.edu/files/2017-Voyager2-CHI.pdf).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\n        \"measure\": \"Open Exploration\",\n        \"mean\": 1.813,\n        \"lo\": 1.255,\n        \"hi\": 2.37,\n        \"study\": \"PoleStar vs Voyager\"\n      },\n      {\n        \"measure\": \"Focused Question Answering\",\n        \"mean\": -1.688,\n        \"lo\": -2.325,\n        \"hi\": -1.05,\n        \"study\": \"PoleStar vs Voyager\"\n      },\n      {\n        \"measure\": \"Open Exploration\",\n        \"mean\": 2.1875,\n        \"lo\": 1.665,\n        \"hi\": 2.71,\n        \"study\": \"PoleStar vs Voyager 2\"\n      },\n      {\n        \"measure\": \"Focused Question Answering\",\n        \"mean\": -0.0625,\n        \"lo\": -0.474,\n        \"hi\": 0.349,\n        \"study\": \"PoleStar vs Voyager 2\"\n      }\n    ]\n  },\n  \"spacing\": 10,\n  \"vconcat\": [\n    {\n      \"title\": {\n        \"text\": \"Mean of Subject Ratings (95% CIs)\",\n        \"frame\": \"bounds\"\n      },\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"study\",\n          \"type\": \"nominal\",\n          \"axis\": {\n            \"title\": null,\n            \"labelPadding\": 5,\n            \"domain\": false,\n            \"ticks\": false,\n            \"grid\": false\n          }\n        },\n        \"x\": {\n          \"type\": \"quantitative\",\n          \"scale\": {\"domain\": [-3, 3]},\n          \"axis\": {\n            \"title\": \"\",\n            \"gridDash\": [3, 3],\n            \"gridColor\": {\n              \"condition\": {\n                \"test\": \"datum.value === 0\",\n                \"value\": \"#666\"\n              },\n              \"value\": \"#CCC\"\n            }\n          }\n        }\n      },\n      \"layer\": [\n        {\n          \"mark\": \"rule\",\n          \"encoding\": {\n            \"x\": {\"field\": \"lo\"},\n            \"x2\": {\"field\": \"hi\"}\n          }\n        },\n        {\n          \"mark\": {\n            \"type\": \"circle\",\n            \"stroke\": \"black\",\n            \"opacity\": 1\n          },\n          \"encoding\": {\n            \"x\": {\"field\": \"mean\"},\n            \"color\": {\n              \"field\": \"measure\",\n              \"type\": \"nominal\",\n              \"scale\": {\n                \"range\": [\"black\", \"white\"]\n              },\n              \"legend\": null\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"data\": {\n        \"values\": [\n          {\n            \"from\": -0.25,\n            \"to\": -2.9,\n            \"label\": \"PoleStar\"\n          },\n          {\n            \"from\": 0.25,\n            \"to\": 2.9,\n            \"label\": \"Voyager / Voyager 2\"\n          }\n        ]\n      },\n      \"encoding\": {\n        \"x\": {\n          \"type\": \"quantitative\",\n          \"scale\": {\"zero\": false},\n          \"axis\": null\n        }\n      },\n      \"layer\": [\n        {\n          \"mark\": \"rule\",\n          \"encoding\": {\n            \"x\": {\"field\": \"from\"},\n            \"x2\": {\"field\": \"to\"}\n          }\n        },\n        {\n          \"mark\": {\n            \"type\": \"point\",\n            \"filled\": true,\n            \"size\": 60,\n            \"fill\": \"black\"\n          },\n          \"encoding\": {\n            \"x\": {\"field\": \"to\"},\n            \"shape\": {\n              \"condition\": {\n                \"test\": \"datum.to &gt; 0\",\n                \"value\": \"triangle-right\"\n              },\n              \"value\": \"triangle-left\"\n            }\n          }\n        },\n        {\n          \"mark\": {\n            \"type\": \"text\",\n            \"align\": \"right\",\n            \"style\": \"arrow-label\",\n            \"text\": [\"Polestar\", \"More Valuable\"]\n          },\n          \"transform\": [{\"filter\": \"datum.label === 'PoleStar'\"}],\n          \"encoding\": {\n            \"x\": {\"field\": \"from\"}\n          }\n        },\n        {\n          \"mark\": {\n            \"type\": \"text\",\n            \"align\": \"left\",\n            \"style\": \"arrow-label\",\n            \"text\": [\"Voyager / Voyager 2\", \"More Valuable\"]\n          },\n          \"transform\": [{\"filter\": \"datum.label !== 'PoleStar'\"}],\n          \"encoding\": {\n            \"x\": {\"field\": \"from\"}\n          }\n        }\n      ]\n    }\n  ],\n  \"config\": {\n    \"view\": {\"stroke\": \"transparent\"},\n    \"style\": {\n      \"arrow-label\": {\"dy\": 12, \"fontSize\": 9.5},\n      \"arrow-label2\": {\"dy\": 24, \"fontSize\": 9.5}\n    },\n    \"title\": {\"fontSize\": 12}\n  }\n}"
    },
    {
        "name": "Multi Series Line Chart with an Interactive Point Highlight",
        "description": "Stock prices of 5 Tech Companies over Time, with a point marker on hover. Note that the hidden markers are intentionally bigger to make it easier for readers to hover.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time, with a point marker on hover. Note that the hidden markers are intentionally bigger to make it easier for readers to hover.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  },\n  \"layer\": [{\n      \"mark\": \"line\"\n    }, {\n      \"params\": [{\n          \"name\": \"hover\",\n          \"select\": {\"type\": \"point\", \"on\": \"pointerover\", \"clear\": \"pointerout\"}\n        }],\n      \"mark\": {\"type\": \"circle\", \"tooltip\": true},\n      \"encoding\": {\n        \"opacity\": {\n          \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 1},\n          \"value\": 0\n        },\n        \"size\": {\n          \"condition\": {\"test\": {\"param\": \"hover\", \"empty\": false}, \"value\": 48},\n          \"value\": 100\n        }\n      }\n    }]\n}"
    },
    {
        "name": "A Bar Chart Encoding Color Names in the Data",
        "description": "A bar chart that directly encodes color names in the data.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart that directly encodes color names in the data.\",\n  \"data\": {\n    \"values\": [\n      {\n        \"color\": \"red\",\n        \"b\": 28\n      },\n      {\n        \"color\": \"green\",\n        \"b\": 55\n      },\n      {\n        \"color\": \"blue\",\n        \"b\": 43\n      }\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"color\",\n      \"type\": \"nominal\"\n    },\n    \"y\": {\n      \"field\": \"b\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\n      \"field\": \"color\",\n      \"type\": \"nominal\",\n      \"scale\": null\n    }\n  }\n}"
    },
    {
        "name": "Isotype Dot Plot",
        "description": "Inspired by this Only An Ocean Between, 1943. Population Live Stock, p.13. This example was created by @jwoLondon.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"config\": {\"view\": {\"stroke\": \"\"}},\n  \"width\": 800,\n  \"height\": 200,\n  \"data\": {\n    \"values\": [\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\", \"col\": 3},\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\", \"col\": 2},\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\", \"col\": 1},\n      {\"country\": \"Great Britain\", \"animal\": \"pigs\", \"col\": 2},\n      {\"country\": \"Great Britain\", \"animal\": \"pigs\", \"col\": 1},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 10},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 9},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 8},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 7},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 6},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 5},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 4},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 3},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 2},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\", \"col\": 1},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 9},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 8},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 7},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 6},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 5},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 4},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 3},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 2},\n      {\"country\": \"United States\", \"animal\": \"cattle\", \"col\": 1},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 6},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 5},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 4},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 3},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 2},\n      {\"country\": \"United States\", \"animal\": \"pigs\", \"col\": 1},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 7},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 6},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 5},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 4},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 3},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 2},\n      {\"country\": \"United States\", \"animal\": \"sheep\", \"col\": 1}\n    ]\n  },\n  \"mark\": {\"type\": \"point\", \"filled\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n    \"y\": {\"field\": \"animal\", \"type\": \"ordinal\", \"axis\": null},\n    \"row\": {\"field\": \"country\", \"header\": {\"title\": \"\"}},\n    \"shape\": {\n      \"field\": \"animal\",\n      \"type\": \"nominal\",\n      \"scale\": {\n        \"domain\": [\"person\", \"cattle\", \"pigs\", \"sheep\"],\n        \"range\": [\n          \"M1.7 -1.7h-0.8c0.3 -0.2 0.6 -0.5 0.6 -0.9c0 -0.6 -0.4 -1 -1 -1c-0.6 0 -1 0.4 -1 1c0 0.4 0.2 0.7 0.6 0.9h-0.8c-0.4 0 -0.7 0.3 -0.7 0.6v1.9c0 0.3 0.3 0.6 0.6 0.6h0.2c0 0 0 0.1 0 0.1v1.9c0 0.3 0.2 0.6 0.3 0.6h1.3c0.2 0 0.3 -0.3 0.3 -0.6v-1.8c0 0 0 -0.1 0 -0.1h0.2c0.3 0 0.6 -0.3 0.6 -0.6v-2c0.2 -0.3 -0.1 -0.6 -0.4 -0.6z\",\n          \"M4 -2c0 0 0.9 -0.7 1.1 -0.8c0.1 -0.1 -0.1 0.5 -0.3 0.7c-0.2 0.2 1.1 1.1 1.1 1.2c0 0.2 -0.2 0.8 -0.4 0.7c-0.1 0 -0.8 -0.3 -1.3 -0.2c-0.5 0.1 -1.3 1.6 -1.5 2c-0.3 0.4 -0.6 0.4 -0.6 0.4c0 0.1 0.3 1.7 0.4 1.8c0.1 0.1 -0.4 0.1 -0.5 0c0 0 -0.6 -1.9 -0.6 -1.9c-0.1 0 -0.3 -0.1 -0.3 -0.1c0 0.1 -0.5 1.4 -0.4 1.6c0.1 0.2 0.1 0.3 0.1 0.3c0 0 -0.4 0 -0.4 0c0 0 -0.2 -0.1 -0.1 -0.3c0 -0.2 0.3 -1.7 0.3 -1.7c0 0 -2.8 -0.9 -2.9 -0.8c-0.2 0.1 -0.4 0.6 -0.4 1c0 0.4 0.5 1.9 0.5 1.9l-0.5 0l-0.6 -2l0 -0.6c0 0 -1 0.8 -1 1c0 0.2 -0.2 1.3 -0.2 1.3c0 0 0.3 0.3 0.2 0.3c0 0 -0.5 0 -0.5 0c0 0 -0.2 -0.2 -0.1 -0.4c0 -0.1 0.2 -1.6 0.2 -1.6c0 0 0.5 -0.4 0.5 -0.5c0 -0.1 0 -2.7 -0.2 -2.7c-0.1 0 -0.4 2 -0.4 2c0 0 0 0.2 -0.2 0.5c-0.1 0.4 -0.2 1.1 -0.2 1.1c0 0 -0.2 -0.1 -0.2 -0.2c0 -0.1 -0.1 -0.7 0 -0.7c0.1 -0.1 0.3 -0.8 0.4 -1.4c0 -0.6 0.2 -1.3 0.4 -1.5c0.1 -0.2 0.6 -0.4 0.6 -0.4z\",\n          \"M1.2 -2c0 0 0.7 0 1.2 0.5c0.5 0.5 0.4 0.6 0.5 0.6c0.1 0 0.7 0 0.8 0.1c0.1 0 0.2 0.2 0.2 0.2c0 0 -0.6 0.2 -0.6 0.3c0 0.1 0.4 0.9 0.6 0.9c0.1 0 0.6 0 0.6 0.1c0 0.1 0 0.7 -0.1 0.7c-0.1 0 -1.2 0.4 -1.5 0.5c-0.3 0.1 -1.1 0.5 -1.1 0.7c-0.1 0.2 0.4 1.2 0.4 1.2l-0.4 0c0 0 -0.4 -0.8 -0.4 -0.9c0 -0.1 -0.1 -0.3 -0.1 -0.3l-0.2 0l-0.5 1.3l-0.4 0c0 0 -0.1 -0.4 0 -0.6c0.1 -0.1 0.3 -0.6 0.3 -0.7c0 0 -0.8 0 -1.5 -0.1c-0.7 -0.1 -1.2 -0.3 -1.2 -0.2c0 0.1 -0.4 0.6 -0.5 0.6c0 0 0.3 0.9 0.3 0.9l-0.4 0c0 0 -0.4 -0.5 -0.4 -0.6c0 -0.1 -0.2 -0.6 -0.2 -0.5c0 0 -0.4 0.4 -0.6 0.4c-0.2 0.1 -0.4 0.1 -0.4 0.1c0 0 -0.1 0.6 -0.1 0.6l-0.5 0l0 -1c0 0 0.5 -0.4 0.5 -0.5c0 -0.1 -0.7 -1.2 -0.6 -1.4c0.1 -0.1 0.1 -1.1 0.1 -1.1c0 0 -0.2 0.1 -0.2 0.1c0 0 0 0.9 0 1c0 0.1 -0.2 0.3 -0.3 0.3c-0.1 0 0 -0.5 0 -0.9c0 -0.4 0 -0.4 0.2 -0.6c0.2 -0.2 0.6 -0.3 0.8 -0.8c0.3 -0.5 1 -0.6 1 -0.6z\",\n          \"M-4.1 -0.5c0.2 0 0.2 0.2 0.5 0.2c0.3 0 0.3 -0.2 0.5 -0.2c0.2 0 0.2 0.2 0.4 0.2c0.2 0 0.2 -0.2 0.5 -0.2c0.2 0 0.2 0.2 0.4 0.2c0.2 0 0.2 -0.2 0.4 -0.2c0.1 0 0.2 0.2 0.4 0.1c0.2 0 0.2 -0.2 0.4 -0.3c0.1 0 0.1 -0.1 0.4 0c0.3 0 0.3 -0.4 0.6 -0.4c0.3 0 0.6 -0.3 0.7 -0.2c0.1 0.1 1.4 1 1.3 1.4c-0.1 0.4 -0.3 0.3 -0.4 0.3c-0.1 0 -0.5 -0.4 -0.7 -0.2c-0.3 0.2 -0.1 0.4 -0.2 0.6c-0.1 0.1 -0.2 0.2 -0.3 0.4c0 0.2 0.1 0.3 0 0.5c-0.1 0.2 -0.3 0.2 -0.3 0.5c0 0.3 -0.2 0.3 -0.3 0.6c-0.1 0.2 0 0.3 -0.1 0.5c-0.1 0.2 -0.1 0.2 -0.2 0.3c-0.1 0.1 0.3 1.1 0.3 1.1l-0.3 0c0 0 -0.3 -0.9 -0.3 -1c0 -0.1 -0.1 -0.2 -0.3 -0.2c-0.2 0 -0.3 0.1 -0.4 0.4c0 0.3 -0.2 0.8 -0.2 0.8l-0.3 0l0.3 -1c0 0 0.1 -0.6 -0.2 -0.5c-0.3 0.1 -0.2 -0.1 -0.4 -0.1c-0.2 -0.1 -0.3 0.1 -0.4 0c-0.2 -0.1 -0.3 0.1 -0.5 0c-0.2 -0.1 -0.1 0 -0.3 0.3c-0.2 0.3 -0.4 0.3 -0.4 0.3l0.2 1.1l-0.3 0l-0.2 -1.1c0 0 -0.4 -0.6 -0.5 -0.4c-0.1 0.3 -0.1 0.4 -0.3 0.4c-0.1 -0.1 -0.2 1.1 -0.2 1.1l-0.3 0l0.2 -1.1c0 0 -0.3 -0.1 -0.3 -0.5c0 -0.3 0.1 -0.5 0.1 -0.7c0.1 -0.2 -0.1 -1 -0.2 -1.1c-0.1 -0.2 -0.2 -0.8 -0.2 -0.8c0 0 -0.1 -0.5 0.4 -0.8z\"\n        ]\n      },\n      \"legend\": null\n    },\n    \"color\": {\n      \"field\": \"animal\",\n      \"type\": \"nominal\",\n      \"legend\": null,\n      \"scale\": {\n        \"domain\": [\"person\", \"cattle\", \"pigs\", \"sheep\"],\n        \"range\": [\n          \"rgb(162,160,152)\",\n          \"rgb(194,81,64)\",\n          \"rgb(93,93,93)\",\n          \"rgb(91,131,149)\"\n        ]\n      }\n    },\n    \"opacity\": {\"value\": 1},\n    \"size\": {\"value\": 200}\n  }\n}"
    },
    {
        "name": "Strip plot with custom axis tick labels",
        "description": "After using the numerical values to calculate the average rating, they are replaced by string labels.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"mark\": {\"size\": 80, \"type\": \"circle\"},\n  \"encoding\": {\n    \"x\": {\n      \"aggregate\": \"mean\",\n      \"axis\": {\n        \"labelExpr\": \"datum.label == 0 ? 'Poor' : datum.label == 5 ? 'Neutral' : 'Great'\",\n        \"labelFlush\": false,\n        \"values\": [0, 5, 10]\n      },\n      \"field\": \"IMDB Rating\",\n      \"scale\": {\"domain\": [0, 10]},\n      \"title\": null\n    },\n    \"y\": {\"field\": \"Major Genre\", \"sort\": \"x\", \"title\": null}\n  }\n}"
    },
    {
        "name": "Line Chart with Varying Size (using the trail mark)",
        "description": "Stock prices of 5 Tech Companies over Time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": \"trail\",\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"},\n    \"size\": {\"field\": \"price\", \"type\": \"quantitative\"},\n    \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Bar Chart Showing Argmax Value",
        "description": "The production budget of the movie that has the highest US Gross in each major genre.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"The production budget of the movie that has the highest US Gross in each major genre.\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"aggregate\": {\"argmax\": \"US Gross\"},\n      \"field\": \"Production Budget\",\n      \"type\": \"quantitative\"\n    },\n    \"y\": {\"field\": \"Major Genre\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Layered Bar Chart",
        "description": "A bar chart showing the US population distribution of age groups and gender in 2000.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart showing the US population distribution of age groups and gender in 2000.\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"}\n  ],\n  \"width\": {\"step\": 17},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"age\", \"type\": \"ordinal\"},\n    \"y\": {\n      \"aggregate\": \"sum\", \"field\": \"people\",\n      \"title\": \"population\",\n      \"stack\": null\n    },\n    \"color\": {\n      \"field\": \"gender\",\n      \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]}\n    },\n    \"opacity\": {\"value\": 0.7}\n  }\n}"
    },
    {
        "name": "Isotype Dot Plot with Emoji",
        "description": "This example was inspired by @jakevdp and Isotype Bar Chart by @jwoLondon.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"config\": {\"view\": {\"stroke\": \"\"}},\n  \"width\": 800,\n  \"height\": 200,\n  \"data\": {\n    \"values\": [\n      {\"country\": \"Great Britain\", \"animal\": \"pigs\"},\n      {\"country\": \"Great Britain\", \"animal\": \"pigs\"},\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\"},\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\"},\n      {\"country\": \"Great Britain\", \"animal\": \"cattle\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"Great Britain\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"pigs\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"cattle\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"},\n      {\"country\": \"United States\", \"animal\": \"sheep\"}\n    ]\n  },\n  \"transform\": [\n    {\n      \"calculate\": \"{'cattle': '\ud83d\udc04', 'pigs': '\ud83d\udc16', 'sheep': '\ud83d\udc0f'}[datum.animal]\",\n      \"as\": \"emoji\"\n    },\n    {\"window\": [{\"op\": \"rank\", \"as\": \"rank\"}], \"groupby\": [\"country\", \"animal\"]}\n  ],\n  \"mark\": {\"type\": \"text\", \"baseline\": \"middle\"},\n  \"encoding\": {\n    \"x\": {\"field\": \"rank\", \"type\": \"ordinal\", \"axis\": null},\n    \"y\": {\"field\": \"animal\", \"type\": \"nominal\", \"axis\": null, \"sort\": null},\n    \"row\": {\"field\": \"country\", \"header\": {\"title\": \"\"}},\n    \"text\": {\"field\": \"emoji\", \"type\": \"nominal\"},\n    \"size\": {\"value\": 65}\n  }\n}"
    },
    {
        "name": "Dot Plot with Jittering",
        "description": "Shows the relationship between horsepower and the number of cylinders using point marks with random offset (jittering).",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Shows the relationship between horsepower and the number of cylinders using point marks with random offset (jittering).\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [{\"calculate\": \"random()\", \"as\": \"random\"}],\n  \"height\": {\"step\": 50},\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Cylinders\", \"type\": \"ordinal\"},\n    \"yOffset\": {\"field\": \"random\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "A comet chart showing changes between between two states",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/barley.json\"},\n  \"title\": \"Barley Yield comparison between 1932 and 1931\",\n  \"transform\": [\n    {\"pivot\": \"year\", \"value\": \"yield\", \"groupby\": [\"variety\", \"site\"]},\n    {\"fold\": [\"1931\", \"1932\"], \"as\": [\"year\", \"yield\"]},\n    {\"calculate\": \"toNumber(datum.year)\", \"as\": \"year\"},\n    {\"calculate\": \"datum['1932'] - datum['1931']\", \"as\": \"delta\"}\n  ],\n  \"mark\": \"trail\",\n  \"encoding\": {\n    \"x\": {\"field\": \"year\", \"title\": null},\n    \"y\": {\"field\": \"variety\", \"title\": \"Variety\"},\n    \"size\": {\n      \"field\": \"yield\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"range\": [0, 12]},\n      \"legend\": {\"values\": [20, 60]},\n      \"title\": \"Barley Yield (bushels/acre)\"\n    },\n    \"tooltip\": [{\"field\": \"year\", \"type\": \"quantitative\"}, {\"field\": \"yield\"}],\n    \"color\": {\n      \"field\": \"delta\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"domainMid\": 0},\n      \"title\": \"Yield Delta (%)\"\n    },\n    \"column\": {\"field\": \"site\", \"title\": \"Site\"}\n  },\n  \"view\": {\"stroke\": null},\n  \"config\": {\"legend\": {\"orient\": \"bottom\", \"direction\": \"horizontal\"}}\n}"
    },
    {
        "name": "Layering Averages over Raw Values",
        "description": "Plot showing average data with raw values in the background.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Plot showing average data with raw values in the background.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol==='GOOG'\"}],\n  \"layer\": [{\n    \"mark\": {\"type\": \"point\", \"opacity\": 0.3},\n    \"encoding\": {\n      \"x\": {\"timeUnit\":\"year\", \"field\": \"date\"},\n      \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n    }\n  }, {\n    \"mark\": \"line\",\n    \"encoding\": {\n      \"x\": {\"timeUnit\":\"year\", \"field\": \"date\"},\n      \"y\": {\"aggregate\": \"mean\", \"field\": \"price\"}\n    }\n  }]\n}"
    },
    {
        "name": "Multi Series Line Chart with Tooltip",
        "description": "The plot displays labels for all stock prices of the hovered time. This example uses a pivot transform to compute the data for the tooltip.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"width\": 400,\n  \"height\": 300,\n  \"encoding\": {\"x\": {\"field\": \"date\", \"type\": \"temporal\"}},\n  \"layer\": [\n    {\n      \"encoding\": {\n        \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"},\n        \"y\": {\"field\": \"price\", \"type\": \"quantitative\"}\n      },\n      \"layer\": [\n        {\"mark\": \"line\"},\n        {\"transform\": [{\"filter\": {\"param\": \"hover\", \"empty\": false}}], \"mark\": \"point\"}\n      ]\n    },\n    {\n      \"transform\": [{\"pivot\": \"symbol\", \"value\": \"price\", \"groupby\": [\"date\"]}],\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"opacity\": {\n          \"condition\": {\"value\": 0.3, \"param\": \"hover\", \"empty\": false},\n          \"value\": 0\n        },\n        \"tooltip\": [\n          {\"field\": \"AAPL\", \"type\": \"quantitative\"},\n          {\"field\": \"AMZN\", \"type\": \"quantitative\"},\n          {\"field\": \"GOOG\", \"type\": \"quantitative\"},\n          {\"field\": \"IBM\", \"type\": \"quantitative\"},\n          {\"field\": \"MSFT\", \"type\": \"quantitative\"}\n        ]\n      },\n      \"params\": [{\n        \"name\": \"hover\",\n        \"select\": {\n          \"type\": \"point\",\n          \"fields\": [\"date\"],\n          \"nearest\": true,\n          \"on\": \"pointerover\",\n          \"clear\": \"pointerout\"\n        }\n      }]\n    }\n  ]\n}"
    },
    {
        "name": "Diverging Stacked Bar Chart (Population Pyramid)",
        "description": "A population pyramid for the US in 2000, created using stack. See https://vega.github.io/vega-lite/examples/concat_population_pyramid.html for a variant of this created using concat.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A population pyramid for the US in 2000, created using stack. See https://vega.github.io/vega-lite/examples/concat_population_pyramid.html for a variant of this created using concat.\",\n  \"data\": { \"url\": \"data/population.json\"},\n  \"transform\": [\n    {\"filter\": \"datum.year == 2000\"},\n    {\"calculate\": \"datum.sex == 2 ? 'Female' : 'Male'\", \"as\": \"gender\"},\n    {\"calculate\": \"datum.sex == 2 ? -datum.people : datum.people\", \"as\": \"signed_people\"}\n  ],\n  \"width\": 300,\n  \"height\": 200,\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"age\",\n      \"axis\": null, \"sort\": \"descending\"\n    },\n    \"x\": {\n      \"aggregate\": \"sum\", \"field\": \"signed_people\",\n      \"title\": \"population\",\n      \"axis\": {\"format\": \"s\"}\n    },\n    \"color\": {\n      \"field\": \"gender\",\n      \"scale\": {\"range\": [\"#675193\", \"#ca8861\"]},\n      \"legend\": {\"orient\": \"top\", \"title\": null}\n    }\n  },\n  \"config\": {\n    \"view\": {\"stroke\": null},\n    \"axis\": {\"grid\": false}\n  }\n}"
    },
    {
        "name": "Diverging Stacked Bar Chart (with Neutral Parts)",
        "description": "A diverging stacked bar chart for sentiments towards a set of eight questions, displayed as percentages with neutral responses straddling the 0% mark",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A diverging stacked bar chart for sentiments towards a set of eight questions, displayed as percentages with neutral responses straddling the 0% mark\",\n  \"data\": {\n    \"values\": [\n      {\"question\": \"Question 1\", \"type\": \"Strongly disagree\", \"value\": 24, \"percentage\": 0.7},\n      {\"question\": \"Question 1\", \"type\": \"Disagree\", \"value\": 294, \"percentage\": 9.1},\n      {\"question\": \"Question 1\", \"type\": \"Neither agree nor disagree\", \"value\": 594, \"percentage\": 18.5},\n      {\"question\": \"Question 1\", \"type\": \"Agree\", \"value\": 1927, \"percentage\": 59.9},\n      {\"question\": \"Question 1\", \"type\": \"Strongly agree\", \"value\": 376, \"percentage\": 11.7},\n      {\"question\": \"Question 2\", \"type\": \"Strongly disagree\", \"value\": 2, \"percentage\": 18.2},\n      {\"question\": \"Question 2\", \"type\": \"Disagree\", \"value\": 2, \"percentage\": 18.2},\n      {\"question\": \"Question 2\", \"type\": \"Neither agree nor disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 2\", \"type\": \"Agree\", \"value\": 7, \"percentage\": 63.6},\n      {\"question\": \"Question 2\", \"type\": \"Strongly agree\", \"value\": 11, \"percentage\": 0},\n      {\"question\": \"Question 3\", \"type\": \"Strongly disagree\", \"value\": 2, \"percentage\": 20},\n      {\"question\": \"Question 3\", \"type\": \"Disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 3\", \"type\": \"Neither agree nor disagree\", \"value\": 2, \"percentage\": 20},\n      {\"question\": \"Question 3\", \"type\": \"Agree\", \"value\": 4, \"percentage\": 40},\n      {\"question\": \"Question 3\", \"type\": \"Strongly agree\", \"value\": 2, \"percentage\": 20},\n      {\"question\": \"Question 4\", \"type\": \"Strongly disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 4\", \"type\": \"Disagree\", \"value\": 2, \"percentage\": 12.5},\n      {\"question\": \"Question 4\", \"type\": \"Neither agree nor disagree\", \"value\": 1, \"percentage\": 6.3},\n      {\"question\": \"Question 4\", \"type\": \"Agree\", \"value\": 7, \"percentage\": 43.8},\n      {\"question\": \"Question 4\", \"type\": \"Strongly agree\", \"value\": 6, \"percentage\": 37.5},\n      {\"question\": \"Question 5\", \"type\": \"Strongly disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 5\", \"type\": \"Disagree\", \"value\": 1, \"percentage\": 4.2},\n      {\"question\": \"Question 5\", \"type\": \"Neither agree nor disagree\", \"value\": 3, \"percentage\": 12.5},\n      {\"question\": \"Question 5\", \"type\": \"Agree\", \"value\": 16, \"percentage\": 66.7},\n      {\"question\": \"Question 5\", \"type\": \"Strongly agree\", \"value\": 4, \"percentage\": 16.7},\n      {\"question\": \"Question 6\", \"type\": \"Strongly disagree\", \"value\": 1, \"percentage\": 6.3},\n      {\"question\": \"Question 6\", \"type\": \"Disagree\", \"value\": 1, \"percentage\": 6.3},\n      {\"question\": \"Question 6\", \"type\": \"Neither agree nor disagree\", \"value\": 2, \"percentage\": 12.5},\n      {\"question\": \"Question 6\", \"type\": \"Agree\", \"value\": 9, \"percentage\": 56.3},\n      {\"question\": \"Question 6\", \"type\": \"Strongly agree\", \"value\": 3, \"percentage\": 18.8},\n      {\"question\": \"Question 7\", \"type\": \"Strongly disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 7\", \"type\": \"Disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 7\", \"type\": \"Neither agree nor disagree\", \"value\": 1, \"percentage\": 20},\n      {\"question\": \"Question 7\", \"type\": \"Agree\", \"value\": 4, \"percentage\": 80},\n      {\"question\": \"Question 7\", \"type\": \"Strongly agree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 8\", \"type\": \"Strongly disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 8\", \"type\": \"Disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 8\", \"type\": \"Neither agree nor disagree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 8\", \"type\": \"Agree\", \"value\": 0, \"percentage\": 0},\n      {\"question\": \"Question 8\", \"type\": \"Strongly agree\", \"value\": 2, \"percentage\": 100}\n    ]\n  },\n  \"transform\": [\n    {\n      \"calculate\": \"if(datum.type === 'Strongly disagree',-2,0) + if(datum.type==='Disagree',-1,0) + if(datum.type =='Neither agree nor disagree',0,0) + if(datum.type ==='Agree',1,0) + if(datum.type ==='Strongly agree',2,0)\",\n      \"as\": \"q_order\"\n    },\n    {\n      \"calculate\": \"if(datum.type === 'Disagree' || datum.type === 'Strongly disagree', datum.percentage,0) + if(datum.type === 'Neither agree nor disagree', datum.percentage / 2,0)\",\n      \"as\": \"signed_percentage\"\n    },\n    {\"stack\": \"percentage\", \"as\": [\"v1\", \"v2\"], \"groupby\": [\"question\"]},\n    {\n      \"joinaggregate\": [\n        {\n          \"field\": \"signed_percentage\",\n          \"op\": \"sum\",\n          \"as\": \"offset\"\n        }\n      ],\n      \"groupby\": [\"question\"]\n    },\n    {\"calculate\": \"datum.v1 - datum.offset\", \"as\": \"nx\"},\n    {\"calculate\": \"datum.v2 - datum.offset\", \"as\": \"nx2\"}\n  ],\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"nx\",\n      \"type\": \"quantitative\",\n      \"title\": \"Percentage\"\n    },\n    \"x2\": {\"field\": \"nx2\"},\n    \"y\": {\n      \"field\": \"question\",\n      \"type\": \"nominal\",\n      \"title\": \"Question\",\n      \"axis\": {\n        \"offset\": 5,\n        \"ticks\": false,\n        \"minExtent\": 60,\n        \"domain\": false\n      }\n    },\n    \"color\": {\n      \"field\": \"type\",\n      \"type\": \"nominal\",\n      \"title\": \"Response\",\n      \"scale\": {\n        \"domain\": [\"Strongly disagree\", \"Disagree\", \"Neither agree nor disagree\", \"Agree\", \"Strongly agree\"],\n        \"range\": [\"#c30d24\", \"#f3a583\", \"#cccccc\", \"#94c6da\", \"#1770ab\"],\n        \"type\": \"ordinal\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Line Chart to Show Benchmarking Results",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 400,\n  \"height\": 200,\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"row\",\n      \"type\": \"quantitative\",\n      \"title\": \"Trial\",\n      \"scale\": {\"nice\": false},\n      \"axis\": {\"grid\": false}\n      },\n    \"y\": {\n      \"field\": \"fps\",\n      \"title\": \"Frames Per Second (fps)\",\n      \"axis\": {\"grid\": false},\n      \"scale\": {\"type\": \"log\"}\n    },\n    \"color\": {\n      \"field\": \"system\",\n      \"type\": \"nominal\",\n      \"title\": \"System\",\n      \"legend\": {\n        \"orient\": \"bottom-right\"\n      }\n    },\n    \"size\": {\"value\": 1}\n  },\n  \"layer\": [{\n    \"data\": {\n      \"name\": \"falcon\"\n    },\n    \"transform\": [\n      {\"window\": [{\"op\": \"row_number\", \"as\": \"row\"}]},\n      {\"calculate\": \"1000/datum.data\", \"as\": \"fps\"},\n      {\"calculate\": \"'Falcon'\", \"as\": \"system\"}\n    ],\n    \"mark\": \"line\"\n  },\n  {\n    \"data\": {\n      \"name\": \"square\"\n    },\n    \"transform\": [\n      {\"window\": [{\"op\": \"row_number\", \"as\": \"row\"}]},\n      {\"calculate\": \"1000/datum.data\", \"as\": \"fps\"},\n      {\"calculate\": \"'Square Crossfilter (3M)'\", \"as\": \"system\"}\n    ],\n    \"mark\": \"line\"\n  }],\n  \"datasets\": {\n    \"falcon\": [16.81999969482422,19.759998321533203,16.079999923706055,19.579999923706055,16.420000076293945,16.200000762939453,16.020000457763672,15.9399995803833,16.280000686645508,16.119998931884766,16.15999984741211,16.119998931884766,16.139999389648438,16.100000381469727,16.200000762939453,16.260000228881836,19.35999870300293,19.700000762939453,15.9399995803833,19.139999389648438,16.200000762939453,16.119998931884766,19.520000457763672,19.700000762939453,16.200000762939453,20.979999542236328,16.299999237060547,16.420000076293945,16.81999969482422,16.5,16.560001373291016,16.18000030517578,16.079999923706055,16.239999771118164,16.040000915527344,16.299999237060547,19.399999618530273,15.699999809265137,16.239999771118164,15.920000076293945,16.259998321533203,16.219999313354492,16.520000457763672,16.459999084472656,16.360000610351562,15.719999313354492,16.060001373291016,15.960000991821289,16.479999542236328,16.600000381469727,16.240001678466797,16.940000534057617,16.220001220703125,15.959999084472656,15.899999618530273,16.479999542236328,16.31999969482422,15.75999927520752,15.999998092651367,16.18000030517578,16.219999313354492,15.800000190734863,16.139999389648438,16.299999237060547,16.360000610351562,16.260000228881836,15.959999084472656,15.9399995803833,16.53999900817871,16.139999389648438,16.259998321533203,16.200000762939453,15.899999618530273,16.079999923706055,16.079999923706055,15.699999809265137,15.660000801086426,16.139999389648438,23.100000381469727,16.600000381469727,16.420000076293945,16.020000457763672,15.619999885559082,16.35999870300293,15.719999313354492,15.920001029968262,15.5600004196167,16.34000015258789,22.82000160217285,15.660000801086426,15.5600004196167,16,16,15.819999694824219,16.399999618530273,16.46000099182129,16.059999465942383,16.239999771118164,15.800000190734863,16.15999984741211,16.360000610351562,19.700000762939453,16.10000228881836,16.139999389648438,15.819999694824219,16.439998626708984,16.139999389648438,16.020000457763672,15.860000610351562,16.059999465942383,16.020000457763672,15.920000076293945,15.819999694824219,16.579999923706055,15.880000114440918,16.579999923706055,15.699999809265137,19.380001068115234,19.239999771118164,16,15.980000495910645,15.959999084472656,16.200000762939453,15.980000495910645,16.34000015258789,16.31999969482422,16.260000228881836,15.920000076293945,15.540000915527344,16.139999389648438,16.459999084472656,16.34000015258789,15.819999694824219,19.719999313354492,15.75999927520752,16.499998092651367,15.719999313354492,16.079999923706055,16.439998626708984,16.200000762939453,15.959999084472656,16,16.100000381469727,19.31999969482422,16.100000381469727,16.18000030517578,15.959999084472656,22.639999389648438,15.899999618530273,16.279998779296875,16.100000381469727,15.920000076293945,16.079999923706055,16.260000228881836,15.899999618530273,15.820001602172852,15.699999809265137,15.979998588562012,16.380001068115234,16.040000915527344,19.420000076293945,15.9399995803833,16.15999984741211,15.960000991821289,16.259998321533203,15.780000686645508,15.880000114440918,15.980000495910645,16.060001373291016,16.119998931884766,23.020000457763672,15.619999885559082,15.920000076293945,16.060001373291016,14.780000686645508,16.260000228881836,19.520000457763672,16.31999969482422,16.600000381469727,16.219999313354492,19.740001678466797,19.46000099182129,15.940000534057617,15.839999198913574,16.100000381469727,16.46000099182129,16.17999839782715,16.100000381469727,15.9399995803833,16.060001373291016,15.860000610351562,15.819999694824219,16.03999900817871,16.17999839782715,15.819999694824219,17.299999237060547,15.9399995803833,15.739999771118164,15.719999313354492,15.679998397827148,15.619999885559082,15.600000381469727,16.03999900817871,15.5,15.600001335144043,19.439998626708984,15.960000991821289,16.239999771118164,16.040000915527344,16.239999771118164],\n    \"square\": [24.200000762939453,17.899999618530273,15.800000190734863,58.400001525878906,151,2523.10009765625,245.3000030517578,136,72.30000305175781,55.70000076293945,42.400001525878906,37.70000076293945,30.100000381469727,30.100000381469727,21.799999237060547,20.600000381469727,21.799999237060547,17.600000381469727,18.200000762939453,21,941.7000122070312,177.39999389648438,2821.800048828125,359.20001220703125,318,217.10000610351562,126,69,57.79999923706055,45.29999923706055,35.599998474121094,29.100000381469727,23.799999237060547,44.20000076293945,17.700000762939453,17.700000762939453,15.699999809265137,27.799999237060547,22.799999237060547,3853.60009765625,91.5999984741211,181.39999389648438,476.29998779296875,265.8999938964844,254.60000610351562,2583.199951171875,124.80000305175781,73.19999694824219,56.400001525878906,48.70000076293945,41.599998474121094,21.100000381469727,20.299999237060547,21.299999237060547,18.299999237060547,17.100000381469727,19.5,828.2000122070312,162.1999969482422,217.89999389648438,205.5,197.60000610351562,2249.800048828125,103.0999984741211,71.69999694824219,57.599998474121094,41.400001525878906,34.5,22,20.5,21.700000762939453,18.299999237060547,17.299999237060547,19.399999618530273,666.7999877929688,214.89999389648438,212.3000030517578,125.80000305175781,67.69999694824219,56.099998474121094,45.79999923706055,38.29999923706055,33,35.400001525878906,22.700000762939453,19.399999618530273,19.899999618530273,24.100000381469727,19.299999237060547,21.299999237060547,3508.699951171875,204.10000610351562,125.4000015258789,65.30000305175781,60.79999923706055,44.099998474121094,36.29999923706055,30.5,28.600000381469727,16.5,18.600000381469727,23.700000762939453,22.299999237060547,17.600000381469727,19.200000762939453,448.79998779296875,124.4000015258789,66.5999984741211,53.5,51,45.20000076293945,28.399999618530273,29.200000762939453,26.700000762939453,25.899999618530273,18.100000381469727,17.600000381469727,20.100000381469727,25.200000762939453,3332,67.5,53.599998474121094,56.599998474121094,39.900001525878906,27.600000381469727,29.600000381469727,33.5,17.200000762939453,18.799999237060547,25.200000762939453,16.700000762939453,16.899999618530273,240.1999969482422,52.400001525878906,42.099998474121094,33.900001525878906,28,28.600000381469727,17.299999237060547,20,21,22.799999237060547,16.700000762939453,19.200000762939453,175.39999389648438,43.5,34.70000076293945,29.700000762939453,34.900001525878906,25.799999237060547,17.299999237060547,22.600000381469727,17.600000381469727,17.200000762939453,19.200000762939453,111.80000305175781,35.400001525878906,27.600000381469727,25.399999618530273,21.899999618530273,18.600000381469727,18.100000381469727,21.200000762939453,17.899999618530273,17,80.5999984741211,29.799999237060547,30.100000381469727,16,26.799999237060547,17.5,22.299999237060547,16.799999237060547,22.399999618530273,77.4000015258789,31,29.700000762939453,28.700000762939453,26,16.899999618530273,15.800000190734863,19,52.599998474121094,25.200000762939453,16.700000762939453,17.899999618530273,21,19.799999237060547,18.799999237060547,46.5,17.5,16.799999237060547,18.299999237060547,18.299999237060547,14.899999618530273,41,18.299999237060547,17.299999237060547,17,17.5,32.29999923706055,22.600000381469727,16.600000381469727,17.899999618530273,25.600000381469727,17.5,20.299999237060547,25.200000762939453,18.600000381469727,17.700000762939453]\n  }\n}"
    },
    {
        "name": "Isotype Grid",
        "description": "Inspired by this D3 example by Alan Smith. Drag region to select. This example was created by @jwoLondon.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"config\": {\"view\": {\"stroke\": \"\"}},\n  \"width\": 400,\n  \"height\": 400,\n  \"data\": {\n    \"values\": [\n      {\"id\": 1},\n      {\"id\": 2},\n      {\"id\": 3},\n      {\"id\": 4},\n      {\"id\": 5},\n      {\"id\": 6},\n      {\"id\": 7},\n      {\"id\": 8},\n      {\"id\": 9},\n      {\"id\": 10},\n      {\"id\": 11},\n      {\"id\": 12},\n      {\"id\": 13},\n      {\"id\": 14},\n      {\"id\": 15},\n      {\"id\": 16},\n      {\"id\": 17},\n      {\"id\": 18},\n      {\"id\": 19},\n      {\"id\": 20},\n      {\"id\": 21},\n      {\"id\": 22},\n      {\"id\": 23},\n      {\"id\": 24},\n      {\"id\": 25},\n      {\"id\": 26},\n      {\"id\": 27},\n      {\"id\": 28},\n      {\"id\": 29},\n      {\"id\": 30},\n      {\"id\": 31},\n      {\"id\": 32},\n      {\"id\": 33},\n      {\"id\": 34},\n      {\"id\": 35},\n      {\"id\": 36},\n      {\"id\": 37},\n      {\"id\": 38},\n      {\"id\": 39},\n      {\"id\": 40},\n      {\"id\": 41},\n      {\"id\": 42},\n      {\"id\": 43},\n      {\"id\": 44},\n      {\"id\": 45},\n      {\"id\": 46},\n      {\"id\": 47},\n      {\"id\": 48},\n      {\"id\": 49},\n      {\"id\": 50},\n      {\"id\": 51},\n      {\"id\": 52},\n      {\"id\": 53},\n      {\"id\": 54},\n      {\"id\": 55},\n      {\"id\": 56},\n      {\"id\": 57},\n      {\"id\": 58},\n      {\"id\": 59},\n      {\"id\": 60},\n      {\"id\": 61},\n      {\"id\": 62},\n      {\"id\": 63},\n      {\"id\": 64},\n      {\"id\": 65},\n      {\"id\": 66},\n      {\"id\": 67},\n      {\"id\": 68},\n      {\"id\": 69},\n      {\"id\": 70},\n      {\"id\": 71},\n      {\"id\": 72},\n      {\"id\": 73},\n      {\"id\": 74},\n      {\"id\": 75},\n      {\"id\": 76},\n      {\"id\": 77},\n      {\"id\": 78},\n      {\"id\": 79},\n      {\"id\": 80},\n      {\"id\": 81},\n      {\"id\": 82},\n      {\"id\": 83},\n      {\"id\": 84},\n      {\"id\": 85},\n      {\"id\": 86},\n      {\"id\": 87},\n      {\"id\": 88},\n      {\"id\": 89},\n      {\"id\": 90},\n      {\"id\": 91},\n      {\"id\": 92},\n      {\"id\": 93},\n      {\"id\": 94},\n      {\"id\": 95},\n      {\"id\": 96},\n      {\"id\": 97},\n      {\"id\": 98},\n      {\"id\": 99},\n      {\"id\": 100}\n    ]\n  },\n  \"transform\": [\n    {\"calculate\": \"ceil (datum.id/10)\", \"as\": \"col\"},\n    {\"calculate\": \"datum.id - datum.col*10\", \"as\": \"row\"}\n  ],\n  \"mark\": {\"type\": \"point\", \"filled\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"col\", \"type\": \"ordinal\", \"axis\": null},\n    \"y\": {\"field\": \"row\", \"type\": \"ordinal\", \"axis\": null},\n    \"shape\": {\n      \"value\": \"M1.7 -1.7h-0.8c0.3 -0.2 0.6 -0.5 0.6 -0.9c0 -0.6 -0.4 -1 -1 -1c-0.6 0 -1 0.4 -1 1c0 0.4 0.2 0.7 0.6 0.9h-0.8c-0.4 0 -0.7 0.3 -0.7 0.6v1.9c0 0.3 0.3 0.6 0.6 0.6h0.2c0 0 0 0.1 0 0.1v1.9c0 0.3 0.2 0.6 0.3 0.6h1.3c0.2 0 0.3 -0.3 0.3 -0.6v-1.8c0 0 0 -0.1 0 -0.1h0.2c0.3 0 0.6 -0.3 0.6 -0.6v-2c0.2 -0.3 -0.1 -0.6 -0.4 -0.6z\"\n    },\n    \"color\": {\n      \"condition\": {\"param\": \"highlight\", \"value\": \"rgb(194,81,64)\"},\n      \"value\": \"rgb(167,165,156)\"\n    },\n    \"size\": {\"value\": 90}\n  },\n  \"params\": [{\"name\": \"highlight\", \"select\": \"interval\"}]\n}"
    },
    {
        "name": "Bar Chart with Labels",
        "description": "Bar chart with text labels. Set domain to make the frame cover the labels.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Bar chart with text labels. Set domain to make the frame cover the labels.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28},\n      {\"a\": \"B\", \"b\": 55},\n      {\"a\": \"C\", \"b\": 43}\n    ]\n  },\n  \"encoding\": {\n    \"y\": {\"field\": \"a\", \"type\": \"nominal\"},\n    \"x\": {\"field\": \"b\", \"type\": \"quantitative\", \"scale\": {\"domain\": [0, 60]}}\n  },\n  \"layer\": [{\n    \"mark\": \"bar\"\n  }, {\n    \"mark\": {\n      \"type\": \"text\",\n      \"align\": \"left\",\n      \"baseline\": \"middle\",\n      \"dx\": 3\n    },\n    \"encoding\": {\n      \"text\": {\"field\": \"b\", \"type\": \"quantitative\"}\n    }\n  }]\n}"
    },
    {
        "name": "Quantile-Quantile Plot (QQ Plot)",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/normal-2d.json\"\n  },\n  \"transform\": [\n    {\n      \"quantile\": \"u\",\n      \"step\": 0.01,\n      \"as\": [\n        \"p\",\n        \"v\"\n      ]\n    },\n    {\n      \"calculate\": \"quantileUniform(datum.p)\",\n      \"as\": \"unif\"\n    },\n    {\n      \"calculate\": \"quantileNormal(datum.p)\",\n      \"as\": \"norm\"\n    }\n  ],\n  \"hconcat\": [\n    {\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"unif\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"v\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"norm\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"v\",\n          \"type\": \"quantitative\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Bar Chart with Label Overlays",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"width\": 200,\n  \"height\": {\"step\": 16},\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"Major Genre\",\n      \"type\": \"nominal\",\n      \"axis\": null\n    }\n  },\n  \"layer\": [{\n    \"mark\": {\"type\": \"bar\", \"color\": \"#ddd\"},\n    \"encoding\": {\n      \"x\": {\n        \"aggregate\": \"mean\",\n        \"field\": \"IMDB Rating\",\n        \"scale\": {\"domain\": [0, 10]},\n        \"title\": \"Mean IMDB Ratings\"\n      }\n    }\n  }, {\n    \"mark\": {\"type\": \"text\", \"align\": \"left\", \"x\": 5},\n    \"encoding\": {\n      \"text\": {\"field\": \"Major Genre\"},\n      \"detail\": {\"aggregate\": \"count\"}\n    }\n  }]\n}"
    },
    {
        "name": "Drawing Sine and Cosine Curves with the Sequence Generator",
        "description": "Plots two functions using a generated sequence.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Plots two functions using a generated sequence.\",\n  \"width\": 300,\n  \"height\": 150,\n  \"data\": {\n    \"sequence\": {\n      \"start\": 0,\n      \"stop\": 12.7,\n      \"step\": 0.1,\n      \"as\": \"x\"\n    }\n  },\n  \"transform\": [\n    {\n      \"calculate\": \"sin(datum.x)\",\n      \"as\": \"sin(x)\"\n    },\n    {\n      \"calculate\": \"cos(datum.x)\",\n      \"as\": \"cos(x)\"\n    },\n    {\n      \"fold\": [\"sin(x)\", \"cos(x)\"]\n    }\n  ],\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\n      \"type\": \"quantitative\",\n      \"field\": \"x\"\n    },\n    \"y\": {\n      \"field\": \"value\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\n      \"field\": \"key\",\n      \"type\": \"nominal\",\n      \"title\": null\n    }\n  }\n}"
    },
    {
        "name": "Linear Regression",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"layer\": [\n    {\n      \"mark\": {\n        \"type\": \"point\",\n        \"filled\": true\n      },\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"Rotten Tomatoes Rating\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"IMDB Rating\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"line\",\n        \"color\": \"firebrick\"\n      },\n      \"transform\": [\n        {\n          \"regression\": \"IMDB Rating\",\n          \"on\": \"Rotten Tomatoes Rating\"\n        }\n      ],\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"Rotten Tomatoes Rating\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"IMDB Rating\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"transform\": [\n        {\n          \"regression\": \"IMDB Rating\",\n          \"on\": \"Rotten Tomatoes Rating\",\n          \"params\": true\n        },\n        {\"calculate\": \"'R\u00b2: '+format(datum.rSquared, '.2f')\", \"as\": \"R2\"}\n      ],\n      \"mark\": {\n        \"type\": \"text\",\n        \"color\": \"firebrick\",\n        \"x\": \"width\",\n        \"align\": \"right\",\n        \"y\": -5\n      },\n      \"encoding\": {\n        \"text\": {\"type\": \"nominal\", \"field\": \"R2\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Selectable Heatmap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\"actual\": \"A\", \"predicted\": \"A\", \"count\": 13},\n      {\"actual\": \"A\", \"predicted\": \"B\", \"count\": 0},\n      {\"actual\": \"A\", \"predicted\": \"C\", \"count\": 0},\n      {\"actual\": \"B\", \"predicted\": \"A\", \"count\": 0},\n      {\"actual\": \"B\", \"predicted\": \"B\", \"count\": 10},\n      {\"actual\": \"B\", \"predicted\": \"C\", \"count\": 6},\n      {\"actual\": \"C\", \"predicted\": \"A\", \"count\": 0},\n      {\"actual\": \"C\", \"predicted\": \"B\", \"count\": 0},\n      {\"actual\": \"C\", \"predicted\": \"C\", \"count\": 9}\n    ]\n  },\n  \"params\": [{\"name\": \"highlight\", \"select\": \"point\"}],\n  \"mark\": {\"type\": \"rect\", \"strokeWidth\": 2},\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"actual\",\n      \"type\": \"nominal\"\n    },\n    \"x\": {\n      \"field\": \"predicted\",\n      \"type\": \"nominal\"\n    },\n    \"fill\": {\n      \"field\": \"count\",\n      \"type\": \"quantitative\"\n    },\n    \"stroke\": {\n      \"condition\": {\n        \"param\": \"highlight\",\n        \"empty\": false,\n        \"value\": \"black\"\n      },\n      \"value\": null\n    },\n    \"opacity\": {\n      \"condition\": {\"param\": \"highlight\", \"value\": 1},\n      \"value\": 0.5\n    },\n    \"order\": {\"condition\": {\"param\": \"highlight\", \"value\": 1}, \"value\": 0}\n  },\n  \"config\": {\n    \"scale\": {\n      \"bandPaddingInner\": 0,\n      \"bandPaddingOuter\": 0\n    },\n    \"view\": {\"step\": 40},\n    \"range\": {\n      \"ramp\": {\n        \"scheme\": \"yellowgreenblue\"\n      }\n    },\n    \"axis\": {\n      \"domain\": false\n    }\n  }\n}"
    },
    {
        "name": "Bar Chart showing Initials of Month Names",
        "description": "Using labelExpr to show only initial letters of month names.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Using `labelExpr` to show only initial letters of month names.\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"month\",\n      \"field\": \"date\",\n      \"axis\": {\n        \"labelAlign\": \"left\",\n        \"labelExpr\": \"datum.label[0]\"\n      }\n    },\n    \"y\": {\"aggregate\": \"mean\", \"field\": \"precipitation\"}\n  }\n}"
    },
    {
        "name": "Line chart with varying stroke dash",
        "description": "Stock prices of 5 Tech Companies over Time.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Stock prices of 5 Tech Companies over Time.\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\"},\n    \"strokeDash\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Loess Regression",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/movies.json\"\n  },\n  \"layer\": [\n    {\n      \"mark\": {\n        \"type\": \"point\",\n        \"filled\": true\n      },\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"Rotten Tomatoes Rating\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"IMDB Rating\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"line\",\n        \"color\": \"firebrick\"\n      },\n      \"transform\": [\n        {\n          \"loess\": \"IMDB Rating\",\n          \"on\": \"Rotten Tomatoes Rating\"\n        }\n      ],\n      \"encoding\": {\n        \"x\": {\n          \"field\": \"Rotten Tomatoes Rating\",\n          \"type\": \"quantitative\"\n        },\n        \"y\": {\n          \"field\": \"IMDB Rating\",\n          \"type\": \"quantitative\"\n        }\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Bar Chart with a Minimap",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"hconcat\": [{\n    \"mark\": \"bar\",\n    \"transform\": [{\n      \"filter\": {\"param\": \"brush\"}\n    }],\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"Name\",\n        \"type\": \"nominal\",\n        \"axis\": {\"minExtent\": 200, \"title\": null},\n        \"sort\": \"-x\"\n      },\n      \"x\": {\n        \"aggregate\": \"count\",\n        \"scale\":{\"domain\":  [0, 6]},\n        \"axis\": {\"orient\": \"top\"}\n      }\n    }\n  }, {\n    \"height\": 200,\n    \"width\": 50,\n    \"params\": [{\n      \"name\": \"brush\",\n      \"select\": {\n        \"type\": \"interval\",\n        \"encodings\": [\"y\"]\n      }\n    }],\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"y\": {\n        \"field\": \"Name\",\n        \"type\": \"nominal\",\n        \"sort\": \"-x\",\n        \"axis\": null\n      },\n      \"x\": {\n        \"aggregate\": \"count\",\n        \"axis\": null\n      }\n    }\n  }]\n}"
    },
    {
        "name": "Bar Chart with bars center-aligned with time unit ticks",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"timeUnit\": \"month\", \"field\": \"date\", \"type\": \"temporal\", \"bandPosition\": 0},\n    \"y\": {\"aggregate\": \"mean\", \"field\": \"precipitation\"}\n  }\n}"
    },
    {
        "name": "Line chart with a dashed part",
        "description": "Line chart with a dashed part created by drawing multiple connecting lines. Note that the data source contains the data point at (E, 81) twice.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Line chart with a dashed part created by drawing multiple connecting lines. Note that the data source contains the data point at (E, 81) twice.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28, \"predicted\": false},\n      {\"a\": \"B\", \"b\": 55, \"predicted\": false},\n      {\"a\": \"D\", \"b\": 91, \"predicted\": false},\n      {\"a\": \"E\", \"b\": 81, \"predicted\": false},\n      {\"a\": \"E\", \"b\": 81, \"predicted\": true},\n      {\"a\": \"G\", \"b\": 19, \"predicted\": true},\n      {\"a\": \"H\", \"b\": 87, \"predicted\": true}\n    ]\n  },\n  \"mark\": \"line\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"},\n    \"strokeDash\": {\"field\": \"predicted\", \"type\": \"nominal\"}\n  }\n}"
    },
    {
        "name": "Using window transform to impute missing values by averaging the previous and next values.",
        "description": "Using window transform to impute missing values in a line chart by averaging the previous and next values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Using window transform to impute missing values in a line chart by averaging the previous and next values.\",\n  \"width\": 300,\n  \"data\": {\n    \"values\": [\n      {\"a\": \"Jan 1, 2000\", \"b\": 28},\n      {\"a\": \"Jan 2, 2000\", \"b\": 55},\n      {\"a\": \"Jan 3, 2000\", \"b\": null},\n      {\"a\": \"Jan 4, 2000\", \"b\": 65},\n      {\"a\": \"Jan 5, 2000\", \"b\": 43},\n      {\"a\": \"Jan 6, 2000\", \"b\": null},\n      {\"a\": \"Jan 7, 2000\", \"b\": 55},\n      {\"a\": \"Jan 8, 2000\", \"b\": 43}\n    ]\n  },\n  \"transform\": [{\n    \"window\": [{\n      \"op\": \"lag\",\n      \"field\": \"b\",\n      \"as\": \"prev\"\n    },{\n      \"op\": \"lead\",\n      \"field\": \"b\",\n      \"as\": \"next\"\n    }]\n  }, {\n    \"calculate\": \"datum.b === null ? (datum.prev + datum.next)/2 : datum.b\",\n    \"as\": \"b\"\n  }],\n  \"mark\": {\"type\": \"line\", \"point\": true},\n  \"encoding\": {\n    \"x\": {\"timeUnit\": \"yearmonthdate\", \"field\": \"a\", \"type\": \"temporal\", \"axis\": {\"format\": \"%d %b\"}},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Interactive Index Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/stocks.csv\",\n    \"format\": {\"parse\": {\"date\": \"date\"}}\n  },\n  \"width\": 650,\n  \"height\": 300,\n  \"layer\": [\n    {\n      \"params\": [{\n        \"name\": \"index\",\n        \"value\": [{\"x\": {\"year\": 2005, \"month\": 1, \"date\": 1}}],\n        \"select\": {\n          \"type\": \"point\",\n          \"encodings\": [\"x\"],\n          \"on\": \"pointerover\",\n          \"nearest\": true\n        }\n      }],\n      \"mark\": \"point\",\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"axis\": null},\n        \"opacity\": {\"value\": 0}\n      }\n    },\n    {\n      \"transform\": [\n        {\n          \"lookup\": \"symbol\",\n          \"from\": {\"param\": \"index\", \"key\": \"symbol\"}\n        },\n        {\n          \"calculate\": \"datum.index &amp;&amp; datum.index.price &gt; 0 ? (datum.price - datum.index.price)/datum.index.price : 0\",\n          \"as\": \"indexed_price\"\n        }\n      ],\n      \"mark\": \"line\",\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"axis\": null},\n        \"y\": {\n          \"field\": \"indexed_price\", \"type\": \"quantitative\",\n          \"axis\": {\"format\": \"%\"}\n        },\n        \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n      }\n    },\n    {\n      \"transform\": [{\"filter\": {\"param\": \"index\"}}],\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"axis\": null},\n        \"color\": {\"value\": \"firebrick\"}\n      },\n      \"layer\": [\n        {\"mark\": {\"type\": \"rule\", \"strokeWidth\": 0.5}},\n        {\n          \"mark\": {\"type\": \"text\", \"align\": \"center\", \"fontWeight\": 100},\n          \"encoding\": {\n            \"text\": {\"field\": \"date\", \"timeUnit\": \"yearmonth\"},\n            \"y\": {\"value\": 310}\n          }\n        }\n      ]\n    }\n  ]\n}"
    },
    {
        "name": "Bar Chart with Negative Values and a Zero-Baseline",
        "description": "A bar chart with negative values. We can hide the axis domain line, and instead use a conditional grid color to draw a zero baseline.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart with negative values. We can hide the axis domain line, and instead use a conditional grid color to draw a zero baseline.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": -28}, {\"a\": \"B\", \"b\": 55}, {\"a\": \"C\", \"b\": -33},\n      {\"a\": \"D\", \"b\": 91}, {\"a\": \"E\", \"b\": 81}, {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": -19}, {\"a\": \"H\", \"b\": 87}, {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"a\", \"type\": \"nominal\",\n      \"axis\": {\n        \"domain\": false,\n        \"ticks\": false,\n        \"labelAngle\": 0,\n        \"labelPadding\": 4\n      }\n    },\n    \"y\": {\n      \"field\": \"b\", \"type\": \"quantitative\",\n      \"axis\": {\n        \"gridColor\": {\n          \"condition\": {\"test\": \"datum.value === 0\", \"value\": \"black\"},\n          \"value\": \"#ddd\"\n        }\n      }\n    }\n  }\n}"
    },
    {
        "name": "Focus + Context - Smooth Histogram Zooming",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/flights-5k.json\",\n    \"format\": {\"parse\": {\"date\": \"date\"}}\n  },\n  \"transform\": [{\"calculate\": \"hours(datum.date) + minutes(datum.date) / 60\", \"as\": \"time\"}],\n  \"vconcat\": [{\n    \"width\": 963,\n    \"height\": 100,\n    \"params\": [{\n      \"name\": \"brush\",\n      \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}\n    }],\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\"field\": \"time\", \"bin\": {\"maxbins\": 30}},\n      \"y\": {\"aggregate\": \"count\"}\n    }\n  }, {\n    \"width\": 963,\n    \"height\": 100,\n    \"mark\": \"bar\",\n    \"encoding\": {\n      \"x\": {\n        \"field\": \"time\",\n        \"bin\": {\"maxbins\": 30, \"extent\": {\"param\": \"brush\"}}\n      },\n      \"y\": {\"aggregate\": \"count\"}\n    }\n  }]\n}"
    },
    {
        "name": "Horizontal Bar Chart with Negative Values and Labels",
        "description": "A bar chart with negative values. We can hide the axis domain line, and instead use a conditional grid color to draw a zero baseline.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A bar chart with negative values. We can hide the axis domain line, and instead use a conditional grid color to draw a zero baseline.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": -28},\n      {\"a\": \"B\", \"b\": 55},\n      {\"a\": \"C\", \"b\": -33},\n      {\"a\": \"D\", \"b\": 91},\n      {\"a\": \"E\", \"b\": 81},\n      {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": -19},\n      {\"a\": \"H\", \"b\": 87},\n      {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"a\",\n      \"type\": \"nominal\",\n      \"axis\": {\n        \"domain\": false,\n        \"ticks\": false,\n        \"labelAngle\": 0,\n        \"labelPadding\": 4\n      }\n    },\n    \"x\": {\n      \"field\": \"b\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"padding\": 20},\n      \"axis\": {\n        \"gridColor\": {\n          \"condition\": {\"test\": \"datum.value === 0\", \"value\": \"black\"},\n          \"value\": \"#ddd\"\n        }\n      }\n    }\n  },\n  \"layer\": [\n    {\"mark\": \"bar\"},\n    {\n      \"mark\": {\n        \"type\": \"text\",\n        \"align\": {\"expr\": \"datum.b &lt; 0 ? 'right' : 'left'\"},\n        \"dx\": {\"expr\": \"datum.b &lt; 0 ? -2 : 2\"}\n      },\n      \"encoding\": {\"text\": {\"field\": \"b\", \"type\": \"quantitative\"}}\n    }\n  ]\n}"
    },
    {
        "name": "Dynamic Color Legend",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"title\": \"Seattle Weather, 2012-2015\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"params\": [\n    {\"name\": \"color_rain\", \"value\": \"#4682b4\", \"bind\": {\"input\": \"color\"}},\n    {\"name\": \"color_sun\", \"value\": \"#4682b4\", \"bind\": {\"input\": \"color\"}},\n    {\"name\": \"color_fog\", \"value\": \"#4682b4\", \"bind\": {\"input\": \"color\"}},\n    {\"name\": \"color_drizzle\", \"value\": \"#4682b4\", \"bind\": {\"input\": \"color\"}},\n    {\"name\": \"color_snow\", \"value\": \"#4682b4\", \"bind\": {\"input\": \"color\"}}\n  ],\n  \"vconcat\": [\n    {\n      \"encoding\": {\n        \"color\": {\n          \"condition\": {\n            \"param\": \"brush\",\n            \"title\": \"Weather\",\n            \"field\": \"weather\",\n            \"type\": \"nominal\",\n            \"scale\": {\n              \"domain\": [\"sun\", \"fog\", \"drizzle\", \"rain\", \"snow\"],\n              \"range\": [\n                {\"expr\": \"color_sun\"},\n                {\"expr\": \"color_fog\"},\n                {\"expr\": \"color_drizzle\"},\n                {\"expr\": \"color_rain\"},\n                {\"expr\": \"color_snow\"}\n              ]\n            }\n          },\n          \"value\": \"lightgray\"\n        },\n        \"size\": {\n          \"title\": \"Precipitation\",\n          \"field\": \"precipitation\",\n          \"scale\": {\"domain\": [-1, 50]},\n          \"type\": \"quantitative\"\n        },\n        \"x\": {\n          \"field\": \"date\",\n          \"timeUnit\": \"monthdate\",\n          \"title\": \"Date\",\n          \"axis\": {\"format\": \"%b\"}\n        },\n        \"y\": {\n          \"title\": \"Maximum Daily Temperature (C)\",\n          \"field\": \"temp_max\",\n          \"scale\": {\"domain\": [-5, 40]},\n          \"type\": \"quantitative\"\n        }\n      },\n      \"width\": 600,\n      \"height\": 300,\n      \"mark\": \"point\",\n      \"params\": [\n        {\"name\": \"brush\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\"]}}\n      ],\n      \"transform\": [{\"filter\": {\"param\": \"click\"}}]\n    },\n    {\n      \"encoding\": {\n        \"color\": {\n          \"condition\": {\n            \"param\": \"click\",\n            \"field\": \"weather\"\n\n          },\n          \"value\": \"lightgray\"\n        },\n        \"x\": {\"aggregate\": \"count\"},\n        \"y\": {\"title\": \"Weather\", \"field\": \"weather\"}\n      },\n      \"width\": 600,\n      \"mark\": \"bar\",\n      \"params\": [\n        {\"name\": \"click\", \"select\": {\"type\": \"point\", \"encodings\": [\"color\"]}}\n      ],\n      \"transform\": [{\"filter\": {\"param\": \"brush\"}}]\n    }\n  ]\n}"
    },
    {
        "name": "Bar Chart with a Spacing-Saving Y-Axis",
        "description": "Bar Chart with a spacing-saving y-axis",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Bar Chart with a spacing-saving y-axis\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"height\": {\"step\": 50},\n  \"mark\": {\"type\": \"bar\", \"yOffset\": 5, \"cornerRadiusEnd\": 2, \"height\": {\"band\": 0.5}},\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"Origin\",\n      \"scale\": {\"padding\": 0},\n      \"axis\": {\n        \"bandPosition\": 0,\n        \"grid\": true,\n        \"domain\": false,\n        \"ticks\": false,\n        \"labelAlign\": \"left\",\n        \"labelBaseline\": \"middle\",\n        \"labelPadding\": -5,\n        \"labelOffset\": -15,\n        \"titleX\": 5,\n        \"titleY\": -5,\n        \"titleAngle\": 0,\n        \"titleAlign\": \"left\"\n      }\n    },\n    \"x\": {\n      \"aggregate\": \"count\",\n      \"axis\": {\"grid\": false},\n      \"title\": \"Number of Cars\"\n    }\n  }\n}"
    },
    {
        "name": "Search Input",
        "description": "Search to highlight the relevant car models. Regexes are supported so you can type e.g. mazda|ford",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"mark\": \"point\",\n  \"encoding\": {\n    \"opacity\": {\n      \"condition\": {\n        \"test\": \"test(regexp(search_input,'i'),datum.Name)\",\n        \"value\": 0.8\n      },\n      \"value\": 0.1\n    },\n    \"tooltip\": {\"field\": \"Name\", \"type\": \"nominal\"},\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n  },\n  \"params\": [\n    {\n      \"name\": \"search_input\",\n      \"bind\": {\n        \"input\": \"search\",\n        \"placeholder\": \"Car model\",\n        \"name\": \"Search\"\n      },\n      \"value\": \"\"\n    }\n  ]\n}"
    },
    {
        "name": "Heat Lane Chart",
        "description": "Heat lane chart based on https://www.smashingmagazine.com/2022/07/accessibility-first-approach-chart-visual-design/",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Heat lane chart based on https://www.smashingmagazine.com/2022/07/accessibility-first-approach-chart-visual-design/\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"height\": 150,\n  \"width\": 400,\n  \"title\": \"Heat Lane of Horsepower\",\n  \"transform\": [\n    {\n      \"bin\": true,\n      \"field\": \"Horsepower\",\n      \"as\": [\"bin_Horsepower_start\", \"bin_Horsepower_end\"]\n    },\n    {\n      \"aggregate\": [{\"op\": \"count\", \"as\": \"count\"}],\n      \"groupby\": [\"bin_Horsepower_start\", \"bin_Horsepower_end\"]\n    },\n    {\"bin\": true, \"field\": \"count\", \"as\": [\"bin_count_start\", \"bin_count_end\"]},\n    {\"calculate\": \"-datum.bin_count_end/2\", \"as\": \"y2\"},\n    {\"calculate\": \"datum.bin_count_end/2\", \"as\": \"y\"},\n    {\n      \"joinaggregate\": [\n        {\"field\": \"bin_count_end\", \"op\": \"max\", \"as\": \"max_bin_count_end\"}\n      ]\n    }\n  ],\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"bin_Horsepower_start\",\n      \"type\": \"quantitative\",\n      \"title\": \"Horsepower\",\n      \"axis\": {\"grid\": false}\n    },\n    \"x2\": {\"field\": \"bin_Horsepower_end\"},\n    \"y\": {\"field\": \"y\", \"axis\": null},\n    \"y2\": {\"field\": \"y2\"}\n  },\n  \"layer\": [\n    {\n      \"mark\": {\n        \"type\": \"bar\",\n        \"xOffset\": 2,\n        \"x2Offset\": -2,\n        \"cornerRadius\": 3\n      },\n      \"encoding\": {\n        \"color\": {\n          \"field\": \"max_bin_count_end\",\n          \"type\": \"ordinal\",\n          \"title\": \"count\",\n          \"scale\": {\"scheme\": \"lighttealblue\"}\n        }\n      }\n    },\n    {\n      \"mark\": {\n        \"type\": \"bar\",\n        \"xOffset\": 2,\n        \"x2Offset\": -2,\n        \"yOffset\": -3,\n        \"y2Offset\": 3\n      },\n      \"encoding\": {\n        \"color\": {\"field\": \"bin_count_end\", \"type\": \"ordinal\", \"title\": \"count\"}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Change zorder on hover",
        "description": "Show points on top when hovered over with the pointer",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"https://cdn.jsdelivr.net/npm/vega-datasets@v1.29.0/data/cars.json\"\n  },\n  \"mark\": {\"type\": \"circle\", \"opacity\": 1},\n  \"encoding\": {\n    \"color\": {\n      \"condition\": {\"param\": \"param_122\", \"value\": \"coral\", \"empty\": false},\n      \"value\": \"grey\"\n    },\n    \"order\": {\n      \"condition\": {\"param\": \"param_122\", \"value\": 1, \"empty\": false},\n      \"value\": 0\n    },\n    \"size\": {\n      \"condition\": {\"param\": \"param_122\", \"value\": 400, \"empty\": false},\n      \"value\": 100\n    },\n    \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"}\n  },\n  \"params\": [\n    {\"name\": \"param_122\", \"select\": {\"type\": \"point\", \"on\": \"pointerover\"}}\n  ]\n}"
    },
    {
        "name": "Non-linear Histogram",
        "description": "A histogram for a data source that provides non-linear bins. Thanks to @Saba9 who helps create this example.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"A histogram for a data source that provides non-linear bins. Thanks to [@Saba9](https://github.com/Saba9) who helps create this example.\",\n  \"data\": {\n    \"values\": [\n      {\n        \"startTime\": \"0\",\n        \"endTime\": \"8.33\",\n        \"residency\": 0\n      },\n      {\n        \"startTime\": \"8.33\",\n        \"endTime\": \"12.50\",\n        \"residency\": 0\n      },\n      {\n        \"startTime\": \"12.50\",\n        \"endTime\": \"16.67\",\n        \"residency\": 31.17\n      },\n      {\n        \"startTime\": \"16.67\",\n        \"endTime\": \"33.33\",\n        \"residency\": 38.96\n      },\n      {\n        \"startTime\": \"33.33\",\n        \"endTime\": \"50.00\",\n        \"residency\": 6.49\n      },\n      {\n        \"startTime\": \"50.00\",\n        \"endTime\": \"66.67\",\n        \"residency\": 2.9\n      },\n      {\n        \"startTime\": \"66.67\",\n        \"endTime\": \"83.33\",\n        \"residency\": 2.6\n      },\n      {\n        \"startTime\": \"83.33\",\n        \"endTime\": \"\u221e\",\n        \"residency\": 16.88\n      }\n    ]\n  },\n  \"title\": \"Distribution of Frame Render Time (fps)\",\n  \"width\": {\"step\": 40},\n  \"height\": 100,\n  \"mark\": {\"type\": \"bar\", \"cornerRadiusEnd\": 0, \"orient\": \"vertical\"},\n  \"encoding\": {\n    \"x\": {\n      \"title\": \"\",\n      \"field\": \"startTime\",\n      \"type\": \"ordinal\",\n      \"scale\": {\"type\": \"point\", \"padding\": 0},\n      \"axis\": {\"labelAngle\": 0, \"labelExpr\": \"datum.value === '\u221e' ? '0' : format(1000/datum.value, 'd')\"},\n      \"sort\": null\n    },\n    \"x2\": {\"field\": \"endTime\"},\n    \"y\": {\n      \"title\": \"\",\n      \"field\": \"residency\",\n      \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [0, 100]},\n      \"axis\": {\n        \"labelExpr\": \"datum.label + '%'\"\n      }\n    }\n  }\n}"
    },
    {
        "name": "Marginal Histograms",
        "description": "Marginal histograms show the counts along the x and y dimension.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/movies.json\"},\n  \"spacing\": 15,\n  \"bounds\": \"flush\",\n  \"vconcat\": [{\n    \"mark\": \"bar\",\n    \"height\": 60,\n    \"encoding\": {\n      \"x\": {\n        \"bin\": true,\n        \"field\": \"IMDB Rating\",\n        \"axis\": null\n      },\n      \"y\": {\n        \"aggregate\": \"count\",\n        \"scale\": {\n          \"domain\": [0,1000]\n        },\n        \"title\": \"\"\n      }\n    }\n  }, {\n    \"spacing\": 15,\n    \"bounds\": \"flush\",\n    \"hconcat\": [{\n      \"mark\": \"rect\",\n      \"encoding\": {\n        \"x\": {\"bin\": true, \"field\": \"IMDB Rating\"},\n        \"y\": {\"bin\": true, \"field\": \"Rotten Tomatoes Rating\"},\n        \"color\": {\"aggregate\": \"count\"}\n      }\n    }, {\n      \"mark\": \"bar\",\n      \"width\": 60,\n      \"encoding\": {\n        \"y\": {\n          \"bin\": true,\n          \"field\": \"Rotten Tomatoes Rating\",\n          \"axis\": null\n        },\n        \"x\": {\n          \"aggregate\": \"count\",\n          \"scale\": {\"domain\": [0,1000]},\n          \"title\": \"\"\n        }\n      }\n    }]\n  }],\n  \"config\": {\n    \"view\": {\n      \"stroke\": \"transparent\"\n    }\n  }\n}"
    },
    {
        "name": "Mean overlay over precipitation chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"layer\": [\n    {\n      \"mark\": \"bar\",\n      \"encoding\": {\n        \"x\": {\n          \"timeUnit\": \"month\",\n          \"field\": \"date\",\n          \"type\": \"ordinal\"\n\n        },\n        \"y\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"precipitation\",\n          \"type\": \"quantitative\"\n        }\n      }\n    },\n    {\n      \"mark\": \"rule\",\n      \"encoding\": {\n        \"y\": {\n          \"aggregate\": \"mean\",\n          \"field\": \"precipitation\",\n          \"type\": \"quantitative\"\n        },\n        \"color\": {\"value\": \"red\"},\n        \"size\": {\"value\": 3}\n      }\n    }\n  ]\n}"
    },
    {
        "name": "Discretizing scales",
        "description": "Horizontally concatenated charts that show different types of discretizing scales.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Horizontally concatenated charts that show different types of discretizing scales.\",\n  \"data\": {\n    \"values\": [\n      {\"a\": \"A\", \"b\": 28},\n      {\"a\": \"B\", \"b\": 55},\n      {\"a\": \"C\", \"b\": 43},\n      {\"a\": \"D\", \"b\": 91},\n      {\"a\": \"E\", \"b\": 81},\n      {\"a\": \"F\", \"b\": 53},\n      {\"a\": \"G\", \"b\": 19},\n      {\"a\": \"H\", \"b\": 87},\n      {\"a\": \"I\", \"b\": 52}\n    ]\n  },\n  \"hconcat\": [\n    {\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"b\",\n          \"type\": \"nominal\",\n          \"sort\": null,\n          \"axis\": {\n            \"ticks\": false,\n            \"domain\": false,\n            \"title\": null\n          }\n        },\n        \"size\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"quantize\"\n          }\n        },\n        \"color\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"quantize\",\n            \"zero\": true\n          },\n          \"legend\": {\n            \"title\": \"Quantize\"\n          }\n        }\n      }\n    },\n    {\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"b\",\n          \"type\": \"nominal\",\n          \"sort\": null,\n          \"axis\": {\n            \"ticks\": false,\n            \"domain\": false,\n            \"title\": null\n          }\n        },\n        \"size\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"quantile\",\n            \"range\": [80, 160, 240, 320, 400]\n          }\n        },\n        \"color\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"quantile\",\n            \"scheme\": \"magma\"\n          },\n          \"legend\": {\n            \"format\": \"d\",\n            \"title\": \"Quantile\"\n          }\n        }\n      }\n    },\n    {\n      \"mark\": \"circle\",\n      \"encoding\": {\n        \"y\": {\n          \"field\": \"b\",\n          \"type\": \"nominal\",\n          \"sort\": null,\n          \"axis\": {\n            \"ticks\": false,\n            \"domain\": false,\n            \"title\": null\n          }\n        },\n        \"size\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"threshold\",\n            \"domain\": [30, 70],\n            \"range\": [80, 200, 320]\n          }\n        },\n        \"color\": {\n          \"field\": \"b\",\n          \"type\": \"quantitative\",\n          \"scale\": {\n            \"type\": \"threshold\",\n            \"domain\": [30, 70],\n            \"scheme\": \"viridis\"\n          },\n          \"legend\": {\n            \"title\": \"Threshold\"\n          }\n        }\n      }\n    }\n  ],\n  \"resolve\": {\n    \"scale\": {\n      \"color\": \"independent\",\n      \"size\": \"independent\"\n    }\n  }\n}"
    },
    {
        "name": "Stacked Bar Chart",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/seattle-weather.csv\"},\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\n      \"timeUnit\": \"month\",\n      \"field\": \"date\",\n      \"type\": \"ordinal\",\n      \"title\": \"Month of the year\"\n    },\n    \"y\": {\n      \"aggregate\": \"count\",\n      \"type\": \"quantitative\"\n    },\n    \"color\": {\n      \"field\": \"weather\",\n      \"type\": \"nominal\",\n      \"scale\": {\n        \"domain\": [\"sun\", \"fog\", \"drizzle\", \"rain\", \"snow\"],\n        \"range\": [\"#e7ba52\", \"#c7c7c7\", \"#aec7e8\", \"#1f77b4\", \"#9467bd\"]\n      },\n      \"title\": \"Weather type\"\n    }\n  }\n}"
    },
    {
        "name": "Wind Vector Map",
        "description": "Vector array map showing wind speed and direction.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Vector array map showing wind speed and direction.\",\n  \"width\": 615,\n  \"height\": 560,\n  \"data\": {\n    \"url\": \"data/windvectors.csv\",\n    \"format\": {\"type\": \"csv\", \"parse\": {\"longitude\": \"number\", \"latitude\": \"number\"}}\n  },\n  \"projection\": {\"type\": \"equalEarth\"},\n  \"mark\": {\"type\": \"point\", \"shape\": \"wedge\", \"filled\": true},\n  \"encoding\": {\n    \"longitude\": {\"field\": \"longitude\", \"type\": \"quantitative\"},\n    \"latitude\": {\"field\": \"latitude\", \"type\": \"quantitative\"},\n    \"color\": {\n      \"field\": \"dir\", \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [0, 360], \"scheme\": \"rainbow\"},\n      \"legend\": null\n    },\n    \"angle\": {\n      \"field\": \"dir\", \"type\": \"quantitative\",\n      \"scale\": {\"domain\": [0, 360], \"range\": [180, 540]}\n    },\n    \"size\": {\n      \"field\": \"speed\", \"type\": \"quantitative\",\n      \"scale\": {\"rangeMax\": 500}\n    }\n  },\n  \"config\": {\n    \"aria\": false,\n    \"view\": {\"step\": 10, \"fill\": \"black\"}\n  }\n}"
    },
    {
        "name": "Multi Series Line Chart with an Interactive Line Highlight",
        "description": "The plot below uses argmax to position text labels at the end of line. It also applies single selection to highlight a hovered line. Note that we can hidden thick lines to make it easier to hover.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Multi-series line chart with labels and interactive highlight on hover.  We also set the selection's initial value to provide a better screenshot\",\n  \"data\": {\"url\": \"data/stocks.csv\"},\n  \"transform\": [{\"filter\": \"datum.symbol!=='IBM'\"}],\n  \"encoding\": {\n    \"x\": {\"field\": \"date\", \"type\": \"temporal\", \"title\": \"date\"},\n    \"y\": {\"field\": \"price\", \"type\": \"quantitative\", \"title\": \"price\"},\n    \"color\": {\n      \"condition\": {\n        \"param\": \"hover\",\n        \"field\":\"symbol\",\n        \"type\":\"nominal\",\n        \"legend\": null\n      },\n      \"value\": \"grey\"\n    },\n    \"opacity\": {\n      \"condition\": {\n        \"param\": \"hover\",\n        \"value\": 1\n      },\n      \"value\": 0.2\n    }\n  },\n  \"layer\": [{\n    \"description\": \"transparent layer to make it easier to trigger selection\",\n    \"params\": [{\n      \"name\": \"hover\",\n      \"value\": [{\"symbol\": \"AAPL\"}],\n      \"select\": {\n        \"type\": \"point\",\n        \"fields\": [\"symbol\"],\n        \"on\": \"pointerover\"\n      }\n    }],\n    \"mark\": {\"type\": \"line\", \"strokeWidth\": 8, \"stroke\": \"transparent\"}\n  }, {\n    \"mark\": \"line\"\n  }, {\n    \"encoding\": {\n      \"x\": {\"aggregate\": \"max\", \"field\": \"date\"},\n      \"y\": {\"aggregate\": {\"argmax\": \"date\"}, \"field\": \"price\"}\n    },\n    \"layer\": [{\n      \"mark\": {\"type\": \"circle\"}\n    }, {\n      \"mark\": {\"type\": \"text\", \"align\": \"left\", \"dx\": 4},\n      \"encoding\": {\"text\": {\"field\":\"symbol\", \"type\": \"nominal\"}}\n    }]\n  }],\n  \"config\": {\"view\": {\"stroke\": null}}\n}"
    },
    {
        "name": "Multi Series Line Chart with Labels",
        "description": "The plot displays labels for all stock prices of the hovered time. The example is forked/modified from @jakevdp\u2019s block.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"url\": \"data/stocks.csv\"\n  },\n  \"width\": 400,\n  \"height\": 300,\n  \"layer\": [\n    {\n      \"encoding\": {\n        \"x\": {\"field\": \"date\", \"type\": \"temporal\"},\n        \"y\": {\"field\": \"price\", \"type\": \"quantitative\"},\n        \"color\": {\"field\": \"symbol\", \"type\": \"nominal\"}\n      },\n      \"layer\": [\n        {\"mark\": \"line\"},\n        {\n          \"params\": [{\n            \"name\": \"label\",\n            \"select\": {\n              \"type\": \"point\",\n              \"encodings\": [\"x\"],\n              \"nearest\": true,\n              \"on\": \"pointerover\"\n            }\n          }],\n          \"mark\": \"point\",\n          \"encoding\": {\n            \"opacity\": {\n              \"condition\": {\n                \"param\": \"label\",\n                \"empty\": false,\n                \"value\": 1\n              },\n              \"value\": 0\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"transform\": [{\"filter\": {\"param\": \"label\", \"empty\": false}}],\n      \"layer\": [\n        {\n          \"mark\": {\"type\": \"rule\", \"color\": \"gray\"},\n          \"encoding\": {\n            \"x\": {\"type\": \"temporal\", \"field\": \"date\", \"aggregate\": \"min\"}\n          }\n        },\n        {\n          \"encoding\": {\n            \"text\": {\"type\": \"quantitative\", \"field\": \"price\"},\n            \"x\": {\"type\": \"temporal\", \"field\": \"date\"},\n            \"y\": {\"type\": \"quantitative\", \"field\": \"price\"}\n          },\n          \"layer\": [\n            {\n              \"mark\": {\n                \"type\": \"text\",\n                \"stroke\": \"white\",\n                \"strokeWidth\": 2,\n                \"align\": \"left\",\n                \"dx\": 5,\n                \"dy\": -5\n              }\n            },\n            {\n              \"mark\": {\"type\": \"text\", \"align\": \"left\", \"dx\": 5, \"dy\": -5},\n              \"encoding\": {\n                \"color\": {\"type\": \"nominal\", \"field\": \"symbol\"}\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
    },
    {
        "name": "Line Chart with Markers and Invalid Values",
        "description": "Vega-Lite - a high-level grammar for statistical graphics. Vega-Lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications. Vega-Lite specifications consist of simple mappings of variables in a data set to visual encoding channels such as x, y, color, and size. These mappings are then translated into detailed visualization specifications in the form of Vega specification language. Vega-Lite produces default values for visualization components (e.g., scales, axes, and legends) in the output Vega specification using a rule-based approach, but users can explicit specify these properties to override default values.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\n    \"values\": [\n      {\n        \"x\": 1,\n        \"y\": 10\n      },\n      {\n        \"x\": 2,\n        \"y\": 30\n      },\n      {\n        \"x\": 3,\n        \"y\": null\n      },\n      {\n        \"x\": 4,\n        \"y\": 15\n      },\n      {\n        \"x\": 5,\n        \"y\": null\n      },\n      {\n        \"x\": 6,\n        \"y\": 40\n      },\n      {\n        \"x\": 7,\n        \"y\": 20\n      }\n    ]\n  },\n  \"mark\": {\"type\": \"line\", \"point\": true},\n  \"encoding\": {\n    \"x\": {\"field\": \"x\", \"type\": \"quantitative\"},\n    \"y\": {\"field\": \"y\", \"type\": \"quantitative\"}\n  }\n}"
    },
    {
        "name": "Brushing Scatter Plot to show data on a table",
        "description": "Drag a rectangular brush to show (first 20) selected points in a table.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"description\": \"Drag a rectangular brush to show (first 20) selected points in a table.\",\n  \"data\": {\"url\": \"data/cars.json\"},\n  \"transform\": [{\n    \"window\": [{\"op\": \"row_number\", \"as\": \"row_number\"}]\n  }],\n  \"hconcat\": [{\n    \"params\": [{\"name\": \"brush\", \"select\": \"interval\"}],\n    \"mark\": \"point\",\n    \"encoding\": {\n      \"x\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"},\n      \"y\": {\"field\": \"Miles_per_Gallon\", \"type\": \"quantitative\"},\n      \"color\": {\n        \"condition\": {\"param\": \"brush\", \"field\": \"Cylinders\", \"type\": \"ordinal\"},\n        \"value\": \"grey\"\n      }\n    }\n  }, {\n    \"transform\": [\n      {\"filter\": {\"param\": \"brush\"}},\n      {\"window\": [{\"op\": \"rank\", \"as\": \"rank\"}]},\n      {\"filter\": {\"field\": \"rank\", \"lt\": 20}}\n    ],\n    \"hconcat\": [{\n      \"width\": 50,\n      \"title\": \"Horsepower\",\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"Horsepower\", \"type\": \"nominal\"},\n        \"y\": {\"field\": \"row_number\", \"type\": \"ordinal\", \"axis\": null}\n      }\n    }, {\n      \"width\": 50,\n      \"title\": \"MPG\",\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"Miles_per_Gallon\", \"type\": \"nominal\"},\n        \"y\": {\"field\": \"row_number\", \"type\": \"ordinal\", \"axis\": null}\n      }\n    }, {\n      \"width\": 50,\n      \"title\": \"Origin\",\n      \"mark\": \"text\",\n      \"encoding\": {\n        \"text\": {\"field\": \"Origin\", \"type\": \"nominal\"},\n        \"y\": {\"field\": \"row_number\", \"type\": \"ordinal\", \"axis\": null}\n      }\n    }]\n  }],\n  \"resolve\": {\"legend\": {\"color\": \"independent\"}}\n}"
    },
    {
        "name": "Connected Scatterplot (Lines with Custom Paths)",
        "description": "A connected scatterplot can be created by customizing line order and adding point overlay in the line mark definition.",
        "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\",\n  \"data\": {\"url\": \"data/driving.json\"},\n  \"mark\": {\"type\": \"line\", \"point\": true},\n  \"encoding\": {\n    \"x\": {\n      \"field\": \"miles\", \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"y\": {\n      \"field\": \"gas\", \"type\": \"quantitative\",\n      \"scale\": {\"zero\": false}\n    },\n    \"order\": {\"field\": \"year\"}\n  }\n}"
    }
]